

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 17 21:42:14 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	text47,global,reloc=2,class=CODE,delta=1
    59                           	psect	text48,global,reloc=2,class=CODE,delta=1
    60                           	psect	text49,global,reloc=2,class=CODE,delta=1
    61                           	psect	text50,global,reloc=2,class=CODE,delta=1
    62                           	psect	text51,global,reloc=2,class=CODE,delta=1
    63                           	psect	text52,global,reloc=2,class=CODE,delta=1
    64                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text55,global,reloc=2,class=CODE,delta=1
    67                           	psect	text56,global,reloc=2,class=CODE,delta=1
    68                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text59,global,reloc=2,class=CODE,delta=1
    71                           	psect	text60,global,reloc=2,class=CODE,delta=1
    72                           	psect	text61,global,reloc=2,class=CODE,delta=1
    73                           	psect	text62,global,reloc=2,class=CODE,delta=1
    74                           	psect	text63,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    78                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    79  0000                     
    80                           ; Version 2.20
    81                           ; Generated 12/02/2020 GMT
    82                           ; 
    83                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC18F4520 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     
   115                           	psect	idataCOMRAM
   116  00265C                     __pidataCOMRAM:
   117                           	callstack 0
   118                           
   119                           ;initializer for _valorPorHora
   120  00265C  0002               	dw	2
   121                           
   122                           ;initializer for _tempoDeTolerancia
   123  00265E  000A               	dw	10
   124                           
   125                           ;initializer for _novoUsuarioPodeEntrar
   126  002660  0001               	dw	1
   127                           
   128                           	psect	smallconst
   129  000600                     __psmallconst:
   130                           	callstack 0
   131  000600  00                 	db	0
   132  000601                     _valor:
   133                           	callstack 0
   134  000601  3F                 	db	63
   135  000602  06                 	db	6
   136  000603  5B                 	db	91
   137  000604  4F                 	db	79
   138  000605  66                 	db	102
   139  000606  6D                 	db	109
   140  000607  7D                 	db	125
   141  000608  07                 	db	7
   142  000609  7F                 	db	127
   143  00060A  6F                 	db	111
   144  00060B  77                 	db	119
   145  00060C  7C                 	db	124
   146  00060D  39                 	db	57
   147  00060E  5E                 	db	94
   148  00060F  79                 	db	121
   149  000610  71                 	db	113
   150  000611                     __end_of_valor:
   151                           	callstack 0
   152  000611                     _charKey:
   153                           	callstack 0
   154  000611  55                 	db	85
   155  000612  4C                 	db	76
   156  000613  44                 	db	68
   157  000614  52                 	db	82
   158  000615  53                 	db	83
   159  000616  58                 	db	88
   160  000617  41                 	db	65
   161  000618  42                 	db	66
   162  000619  59                 	db	89
   163  00061A  73                 	db	115
   164  00061B                     __end_of_charKey:
   165                           	callstack 0
   166  0000                     _T0CON	set	4053
   167  0000                     _TMR0L	set	4054
   168  0000                     _TMR0H	set	4055
   169  0000                     _INTCON	set	4082
   170  0000                     _SPBRG	set	4015
   171  0000                     _SPBRGH	set	4016
   172  0000                     _BAUDCON	set	4024
   173  0000                     _TXSTA	set	4012
   174  0000                     _RCREG	set	4014
   175  0000                     _RCSTA	set	4011
   176  0000                     _TXREG	set	4013
   177  0000                     _PIR1	set	3998
   178  0000                     _T2CON	set	4042
   179  0000                     _CCP2CON	set	4026
   180  0000                     _CCPR2L	set	4027
   181  0000                     _PR2	set	4043
   182  0000                     _TRISE	set	3990
   183  0000                     _TRISD	set	3989
   184  0000                     _TRISC	set	3988
   185  0000                     _TRISB	set	3987
   186  0000                     _TRISA	set	3986
   187  0000                     _PORTE	set	3972
   188  0000                     _PORTD	set	3971
   189  0000                     _PORTC	set	3970
   190  0000                     _PORTB	set	3969
   191  0000                     _PORTA	set	3968
   192  0000                     _ADRESL	set	4035
   193  0000                     _ADRESH	set	4036
   194  0000                     _ADCON2	set	4032
   195  0000                     _ADCON1	set	4033
   196  0000                     _ADCON0	set	4034
   197  00061B                     STR_2:
   198  00061B  42                 	db	66	;'B'
   199  00061C  65                 	db	101	;'e'
   200  00061D  6D                 	db	109	;'m'
   201  00061E  20                 	db	32
   202  00061F  76                 	db	118	;'v'
   203  000620  69                 	db	105	;'i'
   204  000621  6E                 	db	110	;'n'
   205  000622  64                 	db	100	;'d'
   206  000623  6F                 	db	111	;'o'
   207  000624  20                 	db	32
   208  000625  61                 	db	97	;'a'
   209  000626  6F                 	db	111	;'o'
   210  000627  20                 	db	32
   211  000628  53                 	db	83	;'S'
   212  000629  45                 	db	69	;'E'
   213  00062A  00                 	db	0
   214  00062B                     STR_6:
   215  00062B  56                 	db	86	;'V'
   216  00062C  61                 	db	97	;'a'
   217  00062D  6C                 	db	108	;'l'
   218  00062E  6F                 	db	111	;'o'
   219  00062F  72                 	db	114	;'r'
   220  000630  20                 	db	32
   221  000631  61                 	db	97	;'a'
   222  000632  20                 	db	32
   223  000633  70                 	db	112	;'p'
   224  000634  61                 	db	97	;'a'
   225  000635  67                 	db	103	;'g'
   226  000636  61                 	db	97	;'a'
   227  000637  72                 	db	114	;'r'
   228  000638  00                 	db	0
   229  000639                     STR_1:
   230  000639  50                 	db	80	;'P'
   231  00063A  61                 	db	97	;'a'
   232  00063B  67                 	db	103	;'g'
   233  00063C  61                 	db	97	;'a'
   234  00063D  6E                 	db	110	;'n'
   235  00063E  64                 	db	100	;'d'
   236  00063F  6F                 	db	111	;'o'
   237  000640  2E                 	db	46
   238  000641  2E                 	db	46
   239  000642  2E                 	db	46
   240  000643  00                 	db	0
   241  000644                     STR_3:
   242  000644  48                 	db	72	;'H'
   243  000645  6F                 	db	111	;'o'
   244  000646  72                 	db	114	;'r'
   245  000647  61                 	db	97	;'a'
   246  000648  3A                 	db	58	;':'
   247  000649  20                 	db	32
   248  00064A  00                 	db	0
   249  00064B                     STR_4:
   250  00064B  49                 	db	73	;'I'
   251  00064C  6E                 	db	110	;'n'
   252  00064D  3A                 	db	58	;':'
   253  00064E  20                 	db	32
   254  00064F  20                 	db	32
   255  000650  00                 	db	0
   256  000651                     STR_5:
   257  000651  4F                 	db	79	;'O'
   258  000652  75                 	db	117	;'u'
   259  000653  74                 	db	116	;'t'
   260  000654  3A                 	db	58	;':'
   261  000655  20                 	db	32
   262  000656  00                 	db	0
   263  000657                     STR_7:
   264  000657  52                 	db	82	;'R'
   265  000658  24                 	db	36
   266  000659  3A                 	db	58	;':'
   267  00065A  20                 	db	32
   268  00065B  00                 	db	0
   269  00065C  00                 	db	0	; dummy byte at the end
   270  0000                     
   271                           ; #config settings
   272                           
   273                           	psect	cinit
   274  0022E0                     __pcinit:
   275                           	callstack 0
   276  0022E0                     start_initialization:
   277                           	callstack 0
   278  0022E0                     __initialization:
   279                           	callstack 0
   280                           
   281                           ; Initialize objects allocated to COMRAM (6 bytes)
   282                           ; load TBLPTR registers with __pidataCOMRAM
   283  0022E0  0E5C               	movlw	low __pidataCOMRAM
   284  0022E2  6EF6               	movwf	tblptrl,c
   285  0022E4  0E26               	movlw	high __pidataCOMRAM
   286  0022E6  6EF7               	movwf	tblptrh,c
   287  0022E8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   288  0022EA  6EF8               	movwf	tblptru,c
   289  0022EC  EE00  F040         	lfsr	0,__pdataCOMRAM
   290  0022F0  EE10 F006          	lfsr	1,6
   291  0022F4                     copy_data0:
   292  0022F4  0009               	tblrd		*+
   293  0022F6  CFF5 FFEE          	movff	tablat,postinc0
   294  0022FA  50E5               	movf	postdec1,w,c
   295  0022FC  50E1               	movf	fsr1l,w,c
   296  0022FE  E1FA               	bnz	copy_data0
   297                           
   298                           ; Clear objects allocated to COMRAM (19 bytes)
   299  002300  EE00  F02D         	lfsr	0,__pbssCOMRAM
   300  002304  0E13               	movlw	19
   301  002306                     clear_0:
   302  002306  6AEE               	clrf	postinc0,c
   303  002308  06E8               	decf	wreg,f,c
   304  00230A  E1FD               	bnz	clear_0
   305  00230C                     end_of_initialization:
   306                           	callstack 0
   307  00230C                     __end_of__initialization:
   308                           	callstack 0
   309  00230C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   310  00230E  6EF8               	movwf	tblptru,c
   311  002310  0100               	movlb	0
   312  002312  EFA6  F00B         	goto	_main	;jump to C main() function
   313                           
   314                           	psect	bssCOMRAM
   315  00002D                     __pbssCOMRAM:
   316                           	callstack 0
   317  00002D                     _valorAPagar:
   318                           	callstack 0
   319  00002D                     	ds	2
   320  00002F                     _usuarioPediuParaSair:
   321                           	callstack 0
   322  00002F                     	ds	2
   323  000031                     _tempoEstadia:
   324                           	callstack 0
   325  000031                     	ds	2
   326  000033                     kpDebounce@oldRead:
   327                           	callstack 0
   328  000033                     	ds	2
   329  000035                     kpDebounce@newRead:
   330                           	callstack 0
   331  000035                     	ds	2
   332  000037                     _keys:
   333                           	callstack 0
   334  000037                     	ds	2
   335  000039                     _v3:
   336                           	callstack 0
   337  000039                     	ds	1
   338  00003A                     _v2:
   339                           	callstack 0
   340  00003A                     	ds	1
   341  00003B                     _v1:
   342                           	callstack 0
   343  00003B                     	ds	1
   344  00003C                     _v0:
   345                           	callstack 0
   346  00003C                     	ds	1
   347  00003D                     _display:
   348                           	callstack 0
   349  00003D                     	ds	1
   350  00003E                     kpDebounce@tempo:
   351                           	callstack 0
   352  00003E                     	ds	1
   353  00003F                     _started:
   354                           	callstack 0
   355  00003F                     	ds	1
   356                           
   357                           	psect	dataCOMRAM
   358  000040                     __pdataCOMRAM:
   359                           	callstack 0
   360  000040                     _valorPorHora:
   361                           	callstack 0
   362  000040                     	ds	2
   363  000042                     _tempoDeTolerancia:
   364                           	callstack 0
   365  000042                     	ds	2
   366  000044                     _novoUsuarioPodeEntrar:
   367                           	callstack 0
   368  000044                     	ds	2
   369                           
   370                           	psect	cstackCOMRAM
   371  000001                     __pcstackCOMRAM:
   372                           	callstack 0
   373  000001                     ??_kpReadKey:
   374  000001                     ?_digitalRead:
   375                           	callstack 0
   376  000001                     ?___lwdiv:
   377                           	callstack 0
   378  000001                     ?___aldiv:
   379                           	callstack 0
   380  000001                     atrasar@delay:
   381                           	callstack 0
   382  000001                     delay@i:
   383                           	callstack 0
   384  000001                     digitalWrite@pin:
   385                           	callstack 0
   386  000001                     digitalRead@pin:
   387                           	callstack 0
   388  000001                     pinMode@pin:
   389                           	callstack 0
   390  000001                     delayMicro@a:
   391                           	callstack 0
   392  000001                     delayMili@a:
   393                           	callstack 0
   394  000001                     timerReset@tempo:
   395                           	callstack 0
   396  000001                     ___lwdiv@dividend:
   397                           	callstack 0
   398  000001                     ___aldiv@dividend:
   399                           	callstack 0
   400                           
   401                           ; 4 bytes @ 0x0
   402  000001                     	ds	1
   403  000002                     atrasar@t:
   404                           	callstack 0
   405  000002                     delay@j:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0x1
   409  000002                     	ds	1
   410  000003                     ??_digitalRead:
   411  000003                     ??_delayMili:
   412  000003                     atrasar@i:
   413                           	callstack 0
   414  000003                     ledParaDireita@k:
   415                           	callstack 0
   416  000003                     ledParaEsquerda@k:
   417                           	callstack 0
   418  000003                     digitalWrite@value:
   419                           	callstack 0
   420  000003                     pinMode@type:
   421                           	callstack 0
   422  000003                     timerReset@ciclos:
   423                           	callstack 0
   424  000003                     ___lwdiv@divisor:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x2
   428  000003                     	ds	1
   429  000004                     atrasar@j:
   430                           	callstack 0
   431  000004                     ledParaDireita@x:
   432                           	callstack 0
   433  000004                     ledParaEsquerda@x:
   434                           	callstack 0
   435  000004                     kpReadKey@i:
   436                           	callstack 0
   437  000004                     delayMili@i:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x3
   441  000004                     	ds	1
   442  000005                     ??_pinMode:
   443  000005                     ??_digitalWrite:
   444  000005                     atrasar@k:
   445                           	callstack 0
   446  000005                     ___lwdiv@quotient:
   447                           	callstack 0
   448  000005                     ___aldiv@divisor:
   449                           	callstack 0
   450                           
   451                           ; 4 bytes @ 0x4
   452  000005                     	ds	2
   453  000007                     i2c_write_bit@bit:
   454                           	callstack 0
   455  000007                     i2c_read_bit@bit:
   456                           	callstack 0
   457  000007                     ___lwdiv@counter:
   458                           	callstack 0
   459  000007                     soWrite@value:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x6
   463  000007                     	ds	1
   464  000008                     ?___lwmod:
   465                           	callstack 0
   466  000008                     i2cWriteByte@send_stop:
   467                           	callstack 0
   468  000008                     i2cReadByte@send_stop:
   469                           	callstack 0
   470  000008                     ___lwmod@dividend:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x7
   474  000008                     	ds	1
   475  000009                     ??_i2cReadByte:
   476  000009                     i2cWriteByte@byte:
   477                           	callstack 0
   478  000009                     soWrite@i:
   479                           	callstack 0
   480  000009                     ___aldiv@counter:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0x8
   484  000009                     	ds	1
   485  00000A                     ??_kpDebounce:
   486  00000A                     ??_ssdUpdate:
   487  00000A                     i2cWriteByte@send_start:
   488                           	callstack 0
   489  00000A                     i2cReadByte@nack:
   490                           	callstack 0
   491  00000A                     ___aldiv@sign:
   492                           	callstack 0
   493  00000A                     pushNibble@rs:
   494                           	callstack 0
   495  00000A                     pushByte@rs:
   496                           	callstack 0
   497  00000A                     ___lwmod@divisor:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x9
   501  00000A                     	ds	1
   502  00000B                     i2cWriteByte@bit:
   503                           	callstack 0
   504  00000B                     i2cReadByte@bit:
   505                           	callstack 0
   506  00000B                     ___aldiv@quotient:
   507                           	callstack 0
   508                           
   509                           ; 4 bytes @ 0xA
   510  00000B                     	ds	1
   511  00000C                     ??_pushByte:
   512  00000C                     pushNibble@value:
   513                           	callstack 0
   514  00000C                     ___lwmod@counter:
   515                           	callstack 0
   516                           
   517                           ; 1 bytes @ 0xB
   518  00000C                     	ds	1
   519  00000D                     i2cReadByte@byte:
   520                           	callstack 0
   521  00000D                     pushByte@value:
   522                           	callstack 0
   523  00000D                     kpDebounce@i:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0xC
   527  00000D                     	ds	1
   528  00000E                     ?_dsReadData:
   529                           	callstack 0
   530  00000E                     lcdCommand@value:
   531                           	callstack 0
   532  00000E                     lcdChar@value:
   533                           	callstack 0
   534  00000E                     dsReadData@address:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0xD
   538  00000E                     	ds	1
   539  00000F                     ?_verificarUsuarioPediuParaEntrar:
   540                           	callstack 0
   541  00000F                     ?_verificarUsuarioPediuParaSair:
   542                           	callstack 0
   543  00000F                     ?_verificarUsuarioPagou:
   544                           	callstack 0
   545  00000F                     ?___almod:
   546                           	callstack 0
   547  00000F                     lcdString@msg:
   548                           	callstack 0
   549  00000F                     pwmFrequency@freq:
   550                           	callstack 0
   551  00000F                     ___almod@dividend:
   552                           	callstack 0
   553                           
   554                           ; 4 bytes @ 0xE
   555  00000F                     	ds	1
   556  000010                     ??_dsReadData:
   557                           
   558                           ; 1 bytes @ 0xF
   559  000010                     	ds	1
   560  000011                     ??_lcdString:
   561  000011                     _verificarUsuarioPediuParaEntrar$673:
   562                           	callstack 0
   563  000011                     _verificarUsuarioPediuParaSair$685:
   564                           	callstack 0
   565  000011                     _verificarUsuarioPagou$693:
   566                           	callstack 0
   567  000011                     dsReadData@result:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x10
   571  000011                     	ds	2
   572  000013                     ?___awdiv:
   573                           	callstack 0
   574  000013                     lcdString@i:
   575                           	callstack 0
   576  000013                     ___awdiv@dividend:
   577                           	callstack 0
   578  000013                     ___almod@divisor:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0x12
   582  000013                     	ds	2
   583  000015                     ___awdiv@divisor:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x14
   587  000015                     	ds	2
   588  000017                     ___almod@counter:
   589                           	callstack 0
   590  000017                     ___awdiv@counter:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0x16
   594  000017                     	ds	1
   595  000018                     ___almod@sign:
   596                           	callstack 0
   597  000018                     ___awdiv@sign:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0x17
   601  000018                     	ds	1
   602  000019                     ___awdiv@quotient:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x18
   606  000019                     	ds	2
   607  00001B                     ?___wmul:
   608                           	callstack 0
   609  00001B                     ___wmul@multiplier:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x1A
   613  00001B                     	ds	2
   614  00001D                     ___wmul@multiplicand:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x1C
   618  00001D                     	ds	2
   619  00001F                     ___wmul@product:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x1E
   623  00001F                     	ds	2
   624  000021                     ??_pwmSet:
   625  000021                     ?_bcd2dec:
   626                           	callstack 0
   627  000021                     bcd2dec@value:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x20
   631  000021                     	ds	2
   632  000023                     ??_bcd2dec:
   633  000023                     pwmSet@porcento:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0x22
   637  000023                     	ds	1
   638  000024                     pwmSet@val:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x23
   642  000024                     	ds	1
   643  000025                     ?___awmod:
   644                           	callstack 0
   645  000025                     ___awmod@dividend:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x24
   649  000025                     	ds	1
   650  000026                     
   651                           ; 1 bytes @ 0x25
   652  000026                     	ds	1
   653  000027                     ___awmod@divisor:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x26
   657  000027                     	ds	2
   658  000029                     ___awmod@counter:
   659                           	callstack 0
   660                           
   661                           ; 1 bytes @ 0x28
   662  000029                     	ds	1
   663  00002A                     ___awmod@sign:
   664                           	callstack 0
   665                           
   666                           ; 1 bytes @ 0x29
   667  00002A                     	ds	1
   668  00002B                     ssdDigit@pos:
   669                           	callstack 0
   670  00002B                     _mostrarMenuInicial$1429:
   671                           	callstack 0
   672  00002B                     _atualizarHorarioEntrada$1430:
   673                           	callstack 0
   674  00002B                     _atualizarHorarioSaida$1431:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x2A
   678  00002B                     	ds	1
   679  00002C                     ssdDigit@val:
   680                           	callstack 0
   681                           
   682                           ; 1 bytes @ 0x2B
   683  00002C                     	ds	1
   684  00002D                     
   685                           ; 1 bytes @ 0x2C
   686 ;;
   687 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   688 ;;
   689 ;; *************** function _main *****************
   690 ;; Defined at:
   691 ;;		line 56 in file "main.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;		None
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   705 ;;      Params:         0       0       0       0       0       0       0
   706 ;;      Locals:         0       0       0       0       0       0       0
   707 ;;      Temps:          0       0       0       0       0       0       0
   708 ;;      Totals:         0       0       0       0       0       0       0
   709 ;;Total ram usage:        0 bytes
   710 ;; Hardware stack levels required when called: 7
   711 ;; This function calls:
   712 ;;		_acenderLedNaSequencia
   713 ;;		_ativarBuzzer
   714 ;;		_atualizarHorarioEntrada
   715 ;;		_atualizarHorarioSaida
   716 ;;		_atualizarTempoEstadia
   717 ;;		_iniciarPerifericos
   718 ;;		_lcdCommand
   719 ;;		_lcdString
   720 ;;		_mostrarMenuInicial
   721 ;;		_resetarTempoEstadia
   722 ;;		_verificarUsuarioPagou
   723 ;;		_verificarUsuarioPediuParaEntrar
   724 ;;		_verificarUsuarioPediuParaSair
   725 ;; This function is called by:
   726 ;;		Startup code after reset
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           	psect	text0
   731  00174C                     __ptext0:
   732                           	callstack 0
   733  00174C                     _main:
   734                           	callstack 24
   735  00174C                     
   736                           ;main.c: 58:     iniciarPerifericos();
   737  00174C  EC10  F013         	call	_iniciarPerifericos	;wreg free
   738  001750                     l3411:
   739                           
   740                           ;main.c: 61:         if (novoUsuarioPodeEntrar == 1) {
   741  001750  0444               	decf	_novoUsuarioPodeEntrar^0,w,c
   742  001752  1045               	iorwf	(_novoUsuarioPodeEntrar+1)^0,w,c
   743  001754  A4D8               	btfss	status,2,c
   744  001756  EFAF  F00B         	goto	u3001
   745  00175A  EFB1  F00B         	goto	u3000
   746  00175E                     u3001:
   747  00175E  EFC8  F00B         	goto	l3423
   748  001762                     u3000:
   749  001762                     
   750                           ;main.c: 62:             mostrarMenuInicial();
   751  001762  ECE0  F006         	call	_mostrarMenuInicial	;wreg free
   752  001766                     
   753                           ;main.c: 63:             if (verificarUsuarioPediuParaEntrar()) {
   754  001766  ECFC  F010         	call	_verificarUsuarioPediuParaEntrar	;wreg free
   755  00176A  500F               	movf	?_verificarUsuarioPediuParaEntrar^0,w,c
   756  00176C  1010               	iorwf	(?_verificarUsuarioPediuParaEntrar+1)^0,w,c
   757  00176E  B4D8               	btfsc	status,2,c
   758  001770  EFBC  F00B         	goto	u3011
   759  001774  EFBE  F00B         	goto	u3010
   760  001778                     u3011:
   761  001778  EFA8  F00B         	goto	l3411
   762  00177C                     u3010:
   763  00177C                     
   764                           ;main.c: 64:                 atualizarHorarioEntrada();
   765  00177C  ECC2  F007         	call	_atualizarHorarioEntrada	;wreg free
   766  001780                     
   767                           ;main.c: 65:                 ativarBuzzer();
   768  001780  EC31  F012         	call	_ativarBuzzer	;wreg free
   769  001784                     
   770                           ;main.c: 66:                 novoUsuarioPodeEntrar = 0;
   771  001784  0E00               	movlw	0
   772  001786  6E45               	movwf	(_novoUsuarioPodeEntrar+1)^0,c
   773  001788  0E00               	movlw	0
   774  00178A  6E44               	movwf	_novoUsuarioPodeEntrar^0,c
   775  00178C  EFA8  F00B         	goto	l3411
   776  001790                     l3423:
   777  001790  5044               	movf	_novoUsuarioPodeEntrar^0,w,c
   778  001792  1045               	iorwf	(_novoUsuarioPodeEntrar+1)^0,w,c
   779  001794  A4D8               	btfss	status,2,c
   780  001796  EFCF  F00B         	goto	u3021
   781  00179A  EFD1  F00B         	goto	u3020
   782  00179E                     u3021:
   783  00179E  EFA8  F00B         	goto	l3411
   784  0017A2                     u3020:
   785  0017A2                     
   786                           ;main.c: 69:             if(usuarioPediuParaSair == 0){
   787  0017A2  502F               	movf	_usuarioPediuParaSair^0,w,c
   788  0017A4  1030               	iorwf	(_usuarioPediuParaSair+1)^0,w,c
   789  0017A6  A4D8               	btfss	status,2,c
   790  0017A8  EFD8  F00B         	goto	u3031
   791  0017AC  EFDA  F00B         	goto	u3030
   792  0017B0                     u3031:
   793  0017B0  EFF3  F00B         	goto	l3437
   794  0017B4                     u3030:
   795  0017B4                     
   796                           ;main.c: 70:                 atualizarTempoEstadia();
   797  0017B4  EC24  F00B         	call	_atualizarTempoEstadia	;wreg free
   798                           
   799                           ;main.c: 72:                 if (verificarUsuarioPediuParaSair()) {
   800  0017B8  ECDE  F010         	call	_verificarUsuarioPediuParaSair	;wreg free
   801  0017BC  500F               	movf	?_verificarUsuarioPediuParaSair^0,w,c
   802  0017BE  1010               	iorwf	(?_verificarUsuarioPediuParaSair+1)^0,w,c
   803  0017C0  B4D8               	btfsc	status,2,c
   804  0017C2  EFE5  F00B         	goto	u3041
   805  0017C6  EFE7  F00B         	goto	u3040
   806  0017CA                     u3041:
   807  0017CA  EFA8  F00B         	goto	l3411
   808  0017CE                     u3040:
   809  0017CE                     
   810                           ;main.c: 73:                     atualizarHorarioSaida();
   811  0017CE  EC2F  F003         	call	_atualizarHorarioSaida	;wreg free
   812  0017D2                     
   813                           ;main.c: 74:                     ativarBuzzer();
   814  0017D2  EC31  F012         	call	_ativarBuzzer	;wreg free
   815  0017D6                     
   816                           ;main.c: 75:                     resetarTempoEstadia();
   817  0017D6  ECD5  F011         	call	_resetarTempoEstadia	;wreg free
   818  0017DA                     
   819                           ;main.c: 76:                     usuarioPediuParaSair = 1;
   820  0017DA  0E00               	movlw	0
   821  0017DC  6E30               	movwf	(_usuarioPediuParaSair+1)^0,c
   822  0017DE  0E01               	movlw	1
   823  0017E0  6E2F               	movwf	_usuarioPediuParaSair^0,c
   824  0017E2  EFA8  F00B         	goto	l3411
   825  0017E6                     l3437:
   826                           
   827                           ;main.c: 80:                 if(verificarUsuarioPagou()){
   828  0017E6  EC1A  F011         	call	_verificarUsuarioPagou	;wreg free
   829  0017EA  500F               	movf	?_verificarUsuarioPagou^0,w,c
   830  0017EC  1010               	iorwf	(?_verificarUsuarioPagou+1)^0,w,c
   831  0017EE  B4D8               	btfsc	status,2,c
   832  0017F0  EFFC  F00B         	goto	u3051
   833  0017F4  EFFE  F00B         	goto	u3050
   834  0017F8                     u3051:
   835  0017F8  EFA8  F00B         	goto	l3411
   836  0017FC                     u3050:
   837  0017FC                     
   838                           ;main.c: 81:                     lcdCommand(0x01);
   839  0017FC  0E01               	movlw	1
   840  0017FE  ECF4  F012         	call	_lcdCommand
   841  001802                     
   842                           ;main.c: 82:                     lcdString("Pagando...");
   843  001802  0E39               	movlw	low STR_1
   844  001804  6E0F               	movwf	lcdString@msg^0,c
   845  001806  0E06               	movlw	high STR_1
   846  001808  6E10               	movwf	(lcdString@msg+1)^0,c
   847  00180A  EC99  F00F         	call	_lcdString	;wreg free
   848  00180E                     
   849                           ;main.c: 83:                     acenderLedNaSequencia();
   850  00180E  EC23  F013         	call	_acenderLedNaSequencia	;wreg free
   851  001812                     
   852                           ;main.c: 84:                     novoUsuarioPodeEntrar = 1;
   853  001812  0E00               	movlw	0
   854  001814  6E45               	movwf	(_novoUsuarioPodeEntrar+1)^0,c
   855  001816  0E01               	movlw	1
   856  001818  6E44               	movwf	_novoUsuarioPodeEntrar^0,c
   857  00181A                     
   858                           ;main.c: 85:                     usuarioPediuParaSair = 0;
   859  00181A  0E00               	movlw	0
   860  00181C  6E30               	movwf	(_usuarioPediuParaSair+1)^0,c
   861  00181E  0E00               	movlw	0
   862  001820  6E2F               	movwf	_usuarioPediuParaSair^0,c
   863  001822                     
   864                           ;main.c: 86:                     tempoEstadia = 0;
   865  001822  0E00               	movlw	0
   866  001824  6E32               	movwf	(_tempoEstadia+1)^0,c
   867  001826  0E00               	movlw	0
   868  001828  6E31               	movwf	_tempoEstadia^0,c
   869  00182A                     
   870                           ;main.c: 87:                     valorAPagar = 0;
   871  00182A  0E00               	movlw	0
   872  00182C  6E2E               	movwf	(_valorAPagar+1)^0,c
   873  00182E  0E00               	movlw	0
   874  001830  6E2D               	movwf	_valorAPagar^0,c
   875  001832                     
   876                           ;main.c: 88:                     lcdCommand(0x01);
   877  001832  0E01               	movlw	1
   878  001834  ECF4  F012         	call	_lcdCommand
   879  001838  EFA8  F00B         	goto	l3411
   880  00183C  EF00  F000         	goto	start
   881  001840                     __end_of_main:
   882                           	callstack 0
   883                           
   884 ;; *************** function _verificarUsuarioPediuParaSair *****************
   885 ;; Defined at:
   886 ;;		line 161 in file "main.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;		None
   891 ;; Return value:  Size  Location     Type
   892 ;;                  2   14[COMRAM] int 
   893 ;; Registers used:
   894 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   900 ;;      Params:         2       0       0       0       0       0       0
   901 ;;      Locals:         1       0       0       0       0       0       0
   902 ;;      Temps:          0       0       0       0       0       0       0
   903 ;;      Totals:         3       0       0       0       0       0       0
   904 ;;Total ram usage:        3 bytes
   905 ;; Hardware stack levels used: 1
   906 ;; Hardware stack levels required when called: 4
   907 ;; This function calls:
   908 ;;		_kpDebounce
   909 ;;		_kpReadKey
   910 ;; This function is called by:
   911 ;;		_main
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text1
   916  0021BC                     __ptext1:
   917                           	callstack 0
   918  0021BC                     _verificarUsuarioPediuParaSair:
   919                           	callstack 26
   920  0021BC                     
   921                           ;main.c: 162:     kpDebounce();
   922  0021BC  EC03  F00A         	call	_kpDebounce	;wreg free
   923  0021C0                     
   924                           ;main.c: 163:     return (kpReadKey() != 0) && (kpReadKey() == 'D');
   925  0021C0  0E00               	movlw	0
   926  0021C2  6E11               	movwf	_verificarUsuarioPediuParaSair$685^0,c
   927  0021C4  ECAA  F00D         	call	_kpReadKey	;wreg free
   928  0021C8  0900               	iorlw	0
   929  0021CA  B4D8               	btfsc	status,2,c
   930  0021CC  EFEA  F010         	goto	u2811
   931  0021D0  EFEC  F010         	goto	u2810
   932  0021D4                     u2811:
   933  0021D4  EFF8  F010         	goto	l3239
   934  0021D8                     u2810:
   935  0021D8  ECAA  F00D         	call	_kpReadKey	;wreg free
   936  0021DC  0A44               	xorlw	68
   937  0021DE  A4D8               	btfss	status,2,c
   938  0021E0  EFF4  F010         	goto	u2821
   939  0021E4  EFF6  F010         	goto	u2820
   940  0021E8                     u2821:
   941  0021E8  EFF8  F010         	goto	l3239
   942  0021EC                     u2820:
   943  0021EC  0E01               	movlw	1
   944  0021EE  6E11               	movwf	_verificarUsuarioPediuParaSair$685^0,c
   945  0021F0                     l3239:
   946  0021F0  C011  F00F         	movff	_verificarUsuarioPediuParaSair$685,?_verificarUsuarioPediuParaSair
   947  0021F4  6A10               	clrf	(?_verificarUsuarioPediuParaSair+1)^0,c
   948  0021F6  0012               	return		;funcret
   949  0021F8                     __end_of_verificarUsuarioPediuParaSair:
   950                           	callstack 0
   951                           
   952 ;; *************** function _verificarUsuarioPediuParaEntrar *****************
   953 ;; Defined at:
   954 ;;		line 122 in file "main.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;		None
   957 ;; Auto vars:     Size  Location     Type
   958 ;;		None
   959 ;; Return value:  Size  Location     Type
   960 ;;                  2   14[COMRAM] int 
   961 ;; Registers used:
   962 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   968 ;;      Params:         2       0       0       0       0       0       0
   969 ;;      Locals:         1       0       0       0       0       0       0
   970 ;;      Temps:          0       0       0       0       0       0       0
   971 ;;      Totals:         3       0       0       0       0       0       0
   972 ;;Total ram usage:        3 bytes
   973 ;; Hardware stack levels used: 1
   974 ;; Hardware stack levels required when called: 4
   975 ;; This function calls:
   976 ;;		_kpDebounce
   977 ;;		_kpReadKey
   978 ;; This function is called by:
   979 ;;		_main
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text2
   984  0021F8                     __ptext2:
   985                           	callstack 0
   986  0021F8                     _verificarUsuarioPediuParaEntrar:
   987                           	callstack 26
   988  0021F8                     
   989                           ;main.c: 123:     kpDebounce();
   990  0021F8  EC03  F00A         	call	_kpDebounce	;wreg free
   991  0021FC                     
   992                           ;main.c: 124:     return (kpReadKey() != 0) && (kpReadKey() == 'U');
   993  0021FC  0E00               	movlw	0
   994  0021FE  6E11               	movwf	_verificarUsuarioPediuParaEntrar$673^0,c
   995  002200  ECAA  F00D         	call	_kpReadKey	;wreg free
   996  002204  0900               	iorlw	0
   997  002206  B4D8               	btfsc	status,2,c
   998  002208  EF08  F011         	goto	u2791
   999  00220C  EF0A  F011         	goto	u2790
  1000  002210                     u2791:
  1001  002210  EF16  F011         	goto	l3179
  1002  002214                     u2790:
  1003  002214  ECAA  F00D         	call	_kpReadKey	;wreg free
  1004  002218  0A55               	xorlw	85
  1005  00221A  A4D8               	btfss	status,2,c
  1006  00221C  EF12  F011         	goto	u2801
  1007  002220  EF14  F011         	goto	u2800
  1008  002224                     u2801:
  1009  002224  EF16  F011         	goto	l3179
  1010  002228                     u2800:
  1011  002228  0E01               	movlw	1
  1012  00222A  6E11               	movwf	_verificarUsuarioPediuParaEntrar$673^0,c
  1013  00222C                     l3179:
  1014  00222C  C011  F00F         	movff	_verificarUsuarioPediuParaEntrar$673,?_verificarUsuarioPediuParaEntrar
  1015  002230  6A10               	clrf	(?_verificarUsuarioPediuParaEntrar+1)^0,c
  1016  002232  0012               	return		;funcret
  1017  002234                     __end_of_verificarUsuarioPediuParaEntrar:
  1018                           	callstack 0
  1019                           
  1020 ;; *************** function _verificarUsuarioPagou *****************
  1021 ;; Defined at:
  1022 ;;		line 203 in file "main.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;		None
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;		None
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  2   14[COMRAM] int 
  1029 ;; Registers used:
  1030 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1036 ;;      Params:         2       0       0       0       0       0       0
  1037 ;;      Locals:         1       0       0       0       0       0       0
  1038 ;;      Temps:          0       0       0       0       0       0       0
  1039 ;;      Totals:         3       0       0       0       0       0       0
  1040 ;;Total ram usage:        3 bytes
  1041 ;; Hardware stack levels used: 1
  1042 ;; Hardware stack levels required when called: 4
  1043 ;; This function calls:
  1044 ;;		_kpDebounce
  1045 ;;		_kpReadKey
  1046 ;; This function is called by:
  1047 ;;		_main
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           	psect	text3
  1052  002234                     __ptext3:
  1053                           	callstack 0
  1054  002234                     _verificarUsuarioPagou:
  1055                           	callstack 26
  1056  002234                     
  1057                           ;main.c: 204:     kpDebounce();
  1058  002234  EC03  F00A         	call	_kpDebounce	;wreg free
  1059  002238                     
  1060                           ;main.c: 205:     return (kpReadKey() != 0) && (kpReadKey() == 'R');
  1061  002238  0E00               	movlw	0
  1062  00223A  6E11               	movwf	_verificarUsuarioPagou$693^0,c
  1063  00223C  ECAA  F00D         	call	_kpReadKey	;wreg free
  1064  002240  0900               	iorlw	0
  1065  002242  B4D8               	btfsc	status,2,c
  1066  002244  EF26  F011         	goto	u2831
  1067  002248  EF28  F011         	goto	u2830
  1068  00224C                     u2831:
  1069  00224C  EF34  F011         	goto	l3309
  1070  002250                     u2830:
  1071  002250  ECAA  F00D         	call	_kpReadKey	;wreg free
  1072  002254  0A52               	xorlw	82
  1073  002256  A4D8               	btfss	status,2,c
  1074  002258  EF30  F011         	goto	u2841
  1075  00225C  EF32  F011         	goto	u2840
  1076  002260                     u2841:
  1077  002260  EF34  F011         	goto	l3309
  1078  002264                     u2840:
  1079  002264  0E01               	movlw	1
  1080  002266  6E11               	movwf	_verificarUsuarioPagou$693^0,c
  1081  002268                     l3309:
  1082  002268  C011  F00F         	movff	_verificarUsuarioPagou$693,?_verificarUsuarioPagou
  1083  00226C  6A10               	clrf	(?_verificarUsuarioPagou+1)^0,c
  1084  00226E  0012               	return		;funcret
  1085  002270                     __end_of_verificarUsuarioPagou:
  1086                           	callstack 0
  1087                           
  1088 ;; *************** function _kpReadKey *****************
  1089 ;; Defined at:
  1090 ;;		line 17 in file "keypad.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;		None
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;  i               2    3[COMRAM] int 
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      unsigned char 
  1097 ;; Registers used:
  1098 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1104 ;;      Params:         0       0       0       0       0       0       0
  1105 ;;      Locals:         2       0       0       0       0       0       0
  1106 ;;      Temps:          3       0       0       0       0       0       0
  1107 ;;      Totals:         5       0       0       0       0       0       0
  1108 ;;Total ram usage:        5 bytes
  1109 ;; Hardware stack levels used: 1
  1110 ;; This function calls:
  1111 ;;		Nothing
  1112 ;; This function is called by:
  1113 ;;		_verificarUsuarioPediuParaEntrar
  1114 ;;		_verificarUsuarioPediuParaSair
  1115 ;;		_verificarUsuarioPagou
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           	psect	text4
  1120  001B54                     __ptext4:
  1121                           	callstack 0
  1122  001B54                     _kpReadKey:
  1123                           	callstack 29
  1124  001B54                     
  1125                           ;keypad.c: 18:  int i;;keypad.c: 19:  for(i=0;i<10;i++){
  1126  001B54  0E00               	movlw	0
  1127  001B56  6E05               	movwf	(kpReadKey@i+1)^0,c
  1128  001B58  0E00               	movlw	0
  1129  001B5A  6E04               	movwf	kpReadKey@i^0,c
  1130  001B5C                     l2901:
  1131                           
  1132                           ;keypad.c: 20:   if (((keys) & (1<<(i)))){
  1133  001B5C  C004  F001         	movff	kpReadKey@i,??_kpReadKey
  1134  001B60  0E01               	movlw	1
  1135  001B62  6E02               	movwf	(??_kpReadKey+1)^0,c
  1136  001B64  0E00               	movlw	0
  1137  001B66  6E03               	movwf	(??_kpReadKey+2)^0,c
  1138  001B68  2A01               	incf	??_kpReadKey^0,f,c
  1139  001B6A  EFBA  F00D         	goto	u2484
  1140  001B6E                     u2485:
  1141  001B6E  90D8               	bcf	status,0,c
  1142  001B70  3602               	rlcf	(??_kpReadKey+1)^0,f,c
  1143  001B72  3603               	rlcf	(??_kpReadKey+2)^0,f,c
  1144  001B74                     u2484:
  1145  001B74  2E01               	decfsz	??_kpReadKey^0,f,c
  1146  001B76  EFB7  F00D         	goto	u2485
  1147  001B7A  5037               	movf	_keys^0,w,c
  1148  001B7C  1602               	andwf	(??_kpReadKey+1)^0,f,c
  1149  001B7E  5038               	movf	(_keys+1)^0,w,c
  1150  001B80  1603               	andwf	(??_kpReadKey+2)^0,f,c
  1151  001B82  5002               	movf	(??_kpReadKey+1)^0,w,c
  1152  001B84  1003               	iorwf	(??_kpReadKey+2)^0,w,c
  1153  001B86  B4D8               	btfsc	status,2,c
  1154  001B88  EFC8  F00D         	goto	u2491
  1155  001B8C  EFCA  F00D         	goto	u2490
  1156  001B90                     u2491:
  1157  001B90  EFD4  F00D         	goto	l2907
  1158  001B94                     u2490:
  1159  001B94                     
  1160                           ;keypad.c: 21:    return charKey[i];
  1161  001B94  0E11               	movlw	low _charKey
  1162  001B96  2404               	addwf	kpReadKey@i^0,w,c
  1163  001B98  6EF6               	movwf	tblptrl,c
  1164  001B9A  0E06               	movlw	high _charKey
  1165  001B9C  2005               	addwfc	(kpReadKey@i+1)^0,w,c
  1166  001B9E  6EF7               	movwf	tblptrh,c
  1167  001BA0                     	if	0	;There are less than 3 active tblptr bytes
  1168  001BA0                     	endif
  1169  001BA0  0008               	tblrd		*
  1170  001BA2  50F5               	movf	tablat,w,c
  1171  001BA4  EFE5  F00D         	goto	l230
  1172  001BA8                     l2907:
  1173                           
  1174                           ;keypad.c: 23:  }
  1175  001BA8  4A04               	infsnz	kpReadKey@i^0,f,c
  1176  001BAA  2A05               	incf	(kpReadKey@i+1)^0,f,c
  1177  001BAC  BE05               	btfsc	(kpReadKey@i+1)^0,7,c
  1178  001BAE  EFE2  F00D         	goto	u2501
  1179  001BB2  5005               	movf	(kpReadKey@i+1)^0,w,c
  1180  001BB4  E109               	bnz	u2500
  1181  001BB6  0E0A               	movlw	10
  1182  001BB8  5C04               	subwf	kpReadKey@i^0,w,c
  1183  001BBA  A0D8               	btfss	status,0,c
  1184  001BBC  EFE2  F00D         	goto	u2501
  1185  001BC0  EFE4  F00D         	goto	u2500
  1186  001BC4                     u2501:
  1187  001BC4  EFAE  F00D         	goto	l2901
  1188  001BC8                     u2500:
  1189  001BC8                     
  1190                           ;keypad.c: 25:  return 0;
  1191  001BC8  0E00               	movlw	0
  1192  001BCA                     l230:
  1193  001BCA  0012               	return		;funcret
  1194  001BCC                     __end_of_kpReadKey:
  1195                           	callstack 0
  1196                           
  1197 ;; *************** function _kpDebounce *****************
  1198 ;; Defined at:
  1199 ;;		line 27 in file "keypad.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;		None
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;  i               2   12[COMRAM] int 
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		wreg, status,2, status,0, cstack
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1213 ;;      Params:         0       0       0       0       0       0       0
  1214 ;;      Locals:         2       0       0       0       0       0       0
  1215 ;;      Temps:          3       0       0       0       0       0       0
  1216 ;;      Totals:         5       0       0       0       0       0       0
  1217 ;;Total ram usage:        5 bytes
  1218 ;; Hardware stack levels used: 1
  1219 ;; Hardware stack levels required when called: 3
  1220 ;; This function calls:
  1221 ;;		_digitalRead
  1222 ;;		_soWrite
  1223 ;; This function is called by:
  1224 ;;		_verificarUsuarioPediuParaEntrar
  1225 ;;		_verificarUsuarioPediuParaSair
  1226 ;;		_verificarUsuarioPagou
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           	psect	text5
  1231  001406                     __ptext5:
  1232                           	callstack 0
  1233  001406                     _kpDebounce:
  1234                           	callstack 26
  1235  001406                     
  1236                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  1237  001406  0E00               	movlw	0
  1238  001408  6E36               	movwf	(kpDebounce@newRead+1)^0,c
  1239  00140A  0E00               	movlw	0
  1240  00140C  6E35               	movwf	kpDebounce@newRead^0,c
  1241                           
  1242                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  1243  00140E  0E00               	movlw	0
  1244  001410  6E0E               	movwf	(kpDebounce@i+1)^0,c
  1245  001412  0E00               	movlw	0
  1246  001414  6E0D               	movwf	kpDebounce@i^0,c
  1247  001416                     l2917:
  1248  001416  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  1249  001418  EF17  F00A         	goto	u2511
  1250  00141C  500E               	movf	(kpDebounce@i+1)^0,w,c
  1251  00141E  E109               	bnz	u2510
  1252  001420  0E05               	movlw	5
  1253  001422  5C0D               	subwf	kpDebounce@i^0,w,c
  1254  001424  A0D8               	btfss	status,0,c
  1255  001426  EF17  F00A         	goto	u2511
  1256  00142A  EF19  F00A         	goto	u2510
  1257  00142E                     u2511:
  1258  00142E  EF1B  F00A         	goto	l2921
  1259  001432                     u2510:
  1260  001432  EF7C  F00A         	goto	l2933
  1261  001436                     l2921:
  1262                           
  1263                           ;keypad.c: 35:       soWrite(1<<(i+3));
  1264  001436  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  1265  00143A  0E03               	movlw	3
  1266  00143C  260A               	addwf	??_kpDebounce^0,f,c
  1267  00143E  0E01               	movlw	1
  1268  001440  6E0B               	movwf	(??_kpDebounce+1)^0,c
  1269  001442  0E00               	movlw	0
  1270  001444  6E0C               	movwf	(??_kpDebounce+2)^0,c
  1271  001446  2A0A               	incf	??_kpDebounce^0,f,c
  1272  001448  EF29  F00A         	goto	u2524
  1273  00144C                     u2525:
  1274  00144C  90D8               	bcf	status,0,c
  1275  00144E  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  1276  001450  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  1277  001452                     u2524:
  1278  001452  2E0A               	decfsz	??_kpDebounce^0,f,c
  1279  001454  EF26  F00A         	goto	u2525
  1280  001458  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  1281  00145C  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  1282  001460  ECEE  F00F         	call	_soWrite	;wreg free
  1283                           
  1284                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  1285  001464  0E00               	movlw	0
  1286  001466  6E02               	movwf	(digitalRead@pin+1)^0,c
  1287  001468  0E0A               	movlw	10
  1288  00146A  6E01               	movwf	digitalRead@pin^0,c
  1289  00146C  EC4E  F009         	call	_digitalRead	;wreg free
  1290  001470  5001               	movf	?_digitalRead^0,w,c
  1291  001472  1002               	iorwf	(?_digitalRead+1)^0,w,c
  1292  001474  B4D8               	btfsc	status,2,c
  1293  001476  EF3F  F00A         	goto	u2531
  1294  00147A  EF41  F00A         	goto	u2530
  1295  00147E                     u2531:
  1296  00147E  EF54  F00A         	goto	l2925
  1297  001482                     u2530:
  1298  001482                     
  1299                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  1300  001482  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  1301  001486  0E01               	movlw	1
  1302  001488  6E0B               	movwf	(??_kpDebounce+1)^0,c
  1303  00148A  0E00               	movlw	0
  1304  00148C  6E0C               	movwf	(??_kpDebounce+2)^0,c
  1305  00148E  2A0A               	incf	??_kpDebounce^0,f,c
  1306  001490  EF4D  F00A         	goto	u2544
  1307  001494                     u2545:
  1308  001494  90D8               	bcf	status,0,c
  1309  001496  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  1310  001498  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  1311  00149A                     u2544:
  1312  00149A  2E0A               	decfsz	??_kpDebounce^0,f,c
  1313  00149C  EF4A  F00A         	goto	u2545
  1314  0014A0  500B               	movf	(??_kpDebounce+1)^0,w,c
  1315  0014A2  1235               	iorwf	kpDebounce@newRead^0,f,c
  1316  0014A4  500C               	movf	(??_kpDebounce+2)^0,w,c
  1317  0014A6  1236               	iorwf	(kpDebounce@newRead+1)^0,f,c
  1318  0014A8                     l2925:
  1319                           
  1320                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  1321  0014A8  0E00               	movlw	0
  1322  0014AA  6E02               	movwf	(digitalRead@pin+1)^0,c
  1323  0014AC  0E09               	movlw	9
  1324  0014AE  6E01               	movwf	digitalRead@pin^0,c
  1325  0014B0  EC4E  F009         	call	_digitalRead	;wreg free
  1326  0014B4  5001               	movf	?_digitalRead^0,w,c
  1327  0014B6  1002               	iorwf	(?_digitalRead+1)^0,w,c
  1328  0014B8  B4D8               	btfsc	status,2,c
  1329  0014BA  EF61  F00A         	goto	u2551
  1330  0014BE  EF63  F00A         	goto	u2550
  1331  0014C2                     u2551:
  1332  0014C2  EF78  F00A         	goto	l2929
  1333  0014C6                     u2550:
  1334  0014C6                     
  1335                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  1336  0014C6  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  1337  0014CA  0E05               	movlw	5
  1338  0014CC  260A               	addwf	??_kpDebounce^0,f,c
  1339  0014CE  0E01               	movlw	1
  1340  0014D0  6E0B               	movwf	(??_kpDebounce+1)^0,c
  1341  0014D2  0E00               	movlw	0
  1342  0014D4  6E0C               	movwf	(??_kpDebounce+2)^0,c
  1343  0014D6  2A0A               	incf	??_kpDebounce^0,f,c
  1344  0014D8  EF71  F00A         	goto	u2564
  1345  0014DC                     u2565:
  1346  0014DC  90D8               	bcf	status,0,c
  1347  0014DE  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  1348  0014E0  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  1349  0014E2                     u2564:
  1350  0014E2  2E0A               	decfsz	??_kpDebounce^0,f,c
  1351  0014E4  EF6E  F00A         	goto	u2565
  1352  0014E8  500B               	movf	(??_kpDebounce+1)^0,w,c
  1353  0014EA  1235               	iorwf	kpDebounce@newRead^0,f,c
  1354  0014EC  500C               	movf	(??_kpDebounce+2)^0,w,c
  1355  0014EE  1236               	iorwf	(kpDebounce@newRead+1)^0,f,c
  1356  0014F0                     l2929:
  1357                           
  1358                           ;keypad.c: 42:     }
  1359  0014F0  4A0D               	infsnz	kpDebounce@i^0,f,c
  1360  0014F2  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  1361  0014F4  EF0B  F00A         	goto	l2917
  1362  0014F8                     l2933:
  1363                           
  1364                           ;keypad.c: 43:     if (oldRead == newRead) {
  1365  0014F8  5035               	movf	kpDebounce@newRead^0,w,c
  1366  0014FA  1833               	xorwf	kpDebounce@oldRead^0,w,c
  1367  0014FC  E107               	bnz	u2571
  1368  0014FE  5036               	movf	(kpDebounce@newRead+1)^0,w,c
  1369  001500  1834               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  1370  001502  A4D8               	btfss	status,2,c
  1371  001504  EF86  F00A         	goto	u2571
  1372  001508  EF88  F00A         	goto	u2570
  1373  00150C                     u2571:
  1374  00150C  EF8B  F00A         	goto	l2937
  1375  001510                     u2570:
  1376  001510                     
  1377                           ;keypad.c: 44:         tempo--;
  1378  001510  063E               	decf	kpDebounce@tempo^0,f,c
  1379                           
  1380                           ;keypad.c: 45:     } else {
  1381  001512  EF91  F00A         	goto	l244
  1382  001516                     l2937:
  1383                           
  1384                           ;keypad.c: 46:         tempo = 1;
  1385  001516  0E01               	movlw	1
  1386  001518  6E3E               	movwf	kpDebounce@tempo^0,c
  1387  00151A                     
  1388                           ;keypad.c: 47:         oldRead = newRead;
  1389  00151A  C035  F033         	movff	kpDebounce@newRead,kpDebounce@oldRead
  1390  00151E  C036  F034         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  1391  001522                     l244:
  1392                           
  1393                           ;keypad.c: 49:     if (tempo == 0) {
  1394  001522  503E               	movf	kpDebounce@tempo^0,w,c
  1395  001524  A4D8               	btfss	status,2,c
  1396  001526  EF97  F00A         	goto	u2581
  1397  00152A  EF99  F00A         	goto	u2580
  1398  00152E                     u2581:
  1399  00152E  EF9D  F00A         	goto	l246
  1400  001532                     u2580:
  1401  001532                     
  1402                           ;keypad.c: 50:         keys = oldRead;
  1403  001532  C033  F037         	movff	kpDebounce@oldRead,_keys
  1404  001536  C034  F038         	movff	kpDebounce@oldRead+1,_keys+1
  1405  00153A                     l246:
  1406  00153A  0012               	return		;funcret
  1407  00153C                     __end_of_kpDebounce:
  1408                           	callstack 0
  1409                           
  1410 ;; *************** function _resetarTempoEstadia *****************
  1411 ;; Defined at:
  1412 ;;		line 195 in file "main.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1426 ;;      Params:         0       0       0       0       0       0       0
  1427 ;;      Locals:         0       0       0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0
  1429 ;;      Totals:         0       0       0       0       0       0       0
  1430 ;;Total ram usage:        0 bytes
  1431 ;; Hardware stack levels used: 1
  1432 ;; Hardware stack levels required when called: 4
  1433 ;; This function calls:
  1434 ;;		_ssdDigit
  1435 ;;		_ssdUpdate
  1436 ;; This function is called by:
  1437 ;;		_main
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           	psect	text6
  1442  0023AA                     __ptext6:
  1443                           	callstack 0
  1444  0023AA                     _resetarTempoEstadia:
  1445                           	callstack 26
  1446  0023AA                     
  1447                           ;main.c: 196:     ssdDigit(0, 0);
  1448  0023AA  0E00               	movlw	0
  1449  0023AC  6E2B               	movwf	ssdDigit@pos^0,c
  1450  0023AE  0E00               	movlw	0
  1451  0023B0  EC16  F00F         	call	_ssdDigit
  1452                           
  1453                           ;main.c: 197:     ssdDigit(0, 1);
  1454  0023B4  0E01               	movlw	1
  1455  0023B6  6E2B               	movwf	ssdDigit@pos^0,c
  1456  0023B8  0E00               	movlw	0
  1457  0023BA  EC16  F00F         	call	_ssdDigit
  1458                           
  1459                           ;main.c: 198:     ssdDigit(0, 2);
  1460  0023BE  0E02               	movlw	2
  1461  0023C0  6E2B               	movwf	ssdDigit@pos^0,c
  1462  0023C2  0E00               	movlw	0
  1463  0023C4  EC16  F00F         	call	_ssdDigit
  1464                           
  1465                           ;main.c: 199:     ssdDigit(0, 3);
  1466  0023C8  0E03               	movlw	3
  1467  0023CA  6E2B               	movwf	ssdDigit@pos^0,c
  1468  0023CC  0E00               	movlw	0
  1469  0023CE  EC16  F00F         	call	_ssdDigit
  1470  0023D2                     
  1471                           ;main.c: 200:     ssdUpdate();
  1472  0023D2  EC98  F008         	call	_ssdUpdate	;wreg free
  1473  0023D6  0012               	return		;funcret
  1474  0023D8                     __end_of_resetarTempoEstadia:
  1475                           	callstack 0
  1476                           
  1477 ;; *************** function _mostrarMenuInicial *****************
  1478 ;; Defined at:
  1479 ;;		line 105 in file "main.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;		None
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;		None
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      void 
  1486 ;; Registers used:
  1487 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1493 ;;      Params:         0       0       0       0       0       0       0
  1494 ;;      Locals:         2       0       0       0       0       0       0
  1495 ;;      Temps:          0       0       0       0       0       0       0
  1496 ;;      Totals:         2       0       0       0       0       0       0
  1497 ;;Total ram usage:        2 bytes
  1498 ;; Hardware stack levels used: 1
  1499 ;; Hardware stack levels required when called: 6
  1500 ;; This function calls:
  1501 ;;		___awdiv
  1502 ;;		___awmod
  1503 ;;		_bcd2dec
  1504 ;;		_dsReadData
  1505 ;;		_lcdChar
  1506 ;;		_lcdCommand
  1507 ;;		_lcdString
  1508 ;; This function is called by:
  1509 ;;		_main
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text7
  1514  000DC0                     __ptext7:
  1515                           	callstack 0
  1516  000DC0                     _mostrarMenuInicial:
  1517                           	callstack 24
  1518  000DC0                     
  1519                           ;main.c: 107:     lcdString("Bem vindo ao SE");
  1520  000DC0  0E1B               	movlw	low STR_2
  1521  000DC2  6E0F               	movwf	lcdString@msg^0,c
  1522  000DC4  0E06               	movlw	high STR_2
  1523  000DC6  6E10               	movwf	(lcdString@msg+1)^0,c
  1524  000DC8  EC99  F00F         	call	_lcdString	;wreg free
  1525  000DCC                     
  1526                           ;main.c: 108:     lcdCommand(0xC0);
  1527  000DCC  0EC0               	movlw	192
  1528  000DCE  ECF4  F012         	call	_lcdCommand
  1529  000DD2                     
  1530                           ;main.c: 109:     lcdString("Hora: ");
  1531  000DD2  0E44               	movlw	low STR_3
  1532  000DD4  6E0F               	movwf	lcdString@msg^0,c
  1533  000DD6  0E06               	movlw	high STR_3
  1534  000DD8  6E10               	movwf	(lcdString@msg+1)^0,c
  1535  000DDA  EC99  F00F         	call	_lcdString	;wreg free
  1536  000DDE                     
  1537                           ;main.c: 110:     lcdChar((((bcd2dec(dsReadData(2)& 0x5f)) / 10) % 10 + 2) + 48);
  1538  000DDE  0E00               	movlw	0
  1539  000DE0  6E0F               	movwf	(dsReadData@address+1)^0,c
  1540  000DE2  0E02               	movlw	2
  1541  000DE4  6E0E               	movwf	dsReadData@address^0,c
  1542  000DE6  EC15  F010         	call	_dsReadData	;wreg free
  1543  000DEA  0E5F               	movlw	95
  1544  000DEC  140E               	andwf	?_dsReadData^0,w,c
  1545  000DEE  6E21               	movwf	bcd2dec@value^0,c
  1546  000DF0  6A22               	clrf	(bcd2dec@value+1)^0,c
  1547  000DF2  EC9E  F010         	call	_bcd2dec	;wreg free
  1548  000DF6  C021  F02B         	movff	?_bcd2dec,_mostrarMenuInicial$1429
  1549  000DFA  C022  F02C         	movff	?_bcd2dec+1,_mostrarMenuInicial$1429+1
  1550  000DFE                     
  1551                           ;main.c: 110:     lcdChar((((bcd2dec(dsReadData(2)& 0x5f)) / 10) % 10 + 2) + 48);
  1552  000DFE  0E00               	movlw	0
  1553  000E00  6E16               	movwf	(___awdiv@divisor+1)^0,c
  1554  000E02  0E0A               	movlw	10
  1555  000E04  6E15               	movwf	___awdiv@divisor^0,c
  1556  000E06  C02B  F013         	movff	_mostrarMenuInicial$1429,___awdiv@dividend
  1557  000E0A  C02C  F014         	movff	_mostrarMenuInicial$1429+1,___awdiv@dividend+1
  1558  000E0E  EC96  F00C         	call	___awdiv	;wreg free
  1559  000E12  C013  F025         	movff	?___awdiv,___awmod@dividend
  1560  000E16  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  1561  000E1A  0E00               	movlw	0
  1562  000E1C  6E28               	movwf	(___awmod@divisor+1)^0,c
  1563  000E1E  0E0A               	movlw	10
  1564  000E20  6E27               	movwf	___awmod@divisor^0,c
  1565  000E22  EC52  F00D         	call	___awmod	;wreg free
  1566  000E26  5025               	movf	?___awmod^0,w,c
  1567  000E28  0F32               	addlw	50
  1568  000E2A  ECE5  F012         	call	_lcdChar
  1569                           
  1570                           ;main.c: 111:     lcdChar(((bcd2dec(dsReadData(2)& 0x5f)) % 10) + 48);
  1571  000E2E  0E00               	movlw	0
  1572  000E30  6E0F               	movwf	(dsReadData@address+1)^0,c
  1573  000E32  0E02               	movlw	2
  1574  000E34  6E0E               	movwf	dsReadData@address^0,c
  1575  000E36  EC15  F010         	call	_dsReadData	;wreg free
  1576  000E3A  0E5F               	movlw	95
  1577  000E3C  140E               	andwf	?_dsReadData^0,w,c
  1578  000E3E  6E21               	movwf	bcd2dec@value^0,c
  1579  000E40  6A22               	clrf	(bcd2dec@value+1)^0,c
  1580  000E42  EC9E  F010         	call	_bcd2dec	;wreg free
  1581  000E46  C021  F025         	movff	?_bcd2dec,___awmod@dividend
  1582  000E4A  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
  1583  000E4E  0E00               	movlw	0
  1584  000E50  6E28               	movwf	(___awmod@divisor+1)^0,c
  1585  000E52  0E0A               	movlw	10
  1586  000E54  6E27               	movwf	___awmod@divisor^0,c
  1587  000E56  EC52  F00D         	call	___awmod	;wreg free
  1588  000E5A  5025               	movf	?___awmod^0,w,c
  1589  000E5C  0F30               	addlw	48
  1590  000E5E  ECE5  F012         	call	_lcdChar
  1591  000E62                     
  1592                           ;main.c: 112:     lcdChar(':');
  1593  000E62  0E3A               	movlw	58
  1594  000E64  ECE5  F012         	call	_lcdChar
  1595  000E68                     
  1596                           ;main.c: 113:     lcdChar((((bcd2dec(dsReadData(1)& 0x7f)) / 10) % 10) + 48);
  1597  000E68  0E00               	movlw	0
  1598  000E6A  6E0F               	movwf	(dsReadData@address+1)^0,c
  1599  000E6C  0E01               	movlw	1
  1600  000E6E  6E0E               	movwf	dsReadData@address^0,c
  1601  000E70  EC15  F010         	call	_dsReadData	;wreg free
  1602  000E74  0E7F               	movlw	127
  1603  000E76  140E               	andwf	?_dsReadData^0,w,c
  1604  000E78  6E21               	movwf	bcd2dec@value^0,c
  1605  000E7A  6A22               	clrf	(bcd2dec@value+1)^0,c
  1606  000E7C  EC9E  F010         	call	_bcd2dec	;wreg free
  1607  000E80  C021  F02B         	movff	?_bcd2dec,_mostrarMenuInicial$1429
  1608  000E84  C022  F02C         	movff	?_bcd2dec+1,_mostrarMenuInicial$1429+1
  1609                           
  1610                           ;main.c: 113:     lcdChar((((bcd2dec(dsReadData(1)& 0x7f)) / 10) % 10) + 48);
  1611  000E88  0E00               	movlw	0
  1612  000E8A  6E16               	movwf	(___awdiv@divisor+1)^0,c
  1613  000E8C  0E0A               	movlw	10
  1614  000E8E  6E15               	movwf	___awdiv@divisor^0,c
  1615  000E90  C02B  F013         	movff	_mostrarMenuInicial$1429,___awdiv@dividend
  1616  000E94  C02C  F014         	movff	_mostrarMenuInicial$1429+1,___awdiv@dividend+1
  1617  000E98  EC96  F00C         	call	___awdiv	;wreg free
  1618  000E9C  C013  F025         	movff	?___awdiv,___awmod@dividend
  1619  000EA0  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  1620  000EA4  0E00               	movlw	0
  1621  000EA6  6E28               	movwf	(___awmod@divisor+1)^0,c
  1622  000EA8  0E0A               	movlw	10
  1623  000EAA  6E27               	movwf	___awmod@divisor^0,c
  1624  000EAC  EC52  F00D         	call	___awmod	;wreg free
  1625  000EB0  5025               	movf	?___awmod^0,w,c
  1626  000EB2  0F30               	addlw	48
  1627  000EB4  ECE5  F012         	call	_lcdChar
  1628  000EB8                     
  1629                           ;main.c: 114:     lcdChar(((bcd2dec(dsReadData(1)& 0x7f)) % 10) + 48);
  1630  000EB8  0E00               	movlw	0
  1631  000EBA  6E0F               	movwf	(dsReadData@address+1)^0,c
  1632  000EBC  0E01               	movlw	1
  1633  000EBE  6E0E               	movwf	dsReadData@address^0,c
  1634  000EC0  EC15  F010         	call	_dsReadData	;wreg free
  1635  000EC4  0E7F               	movlw	127
  1636  000EC6  140E               	andwf	?_dsReadData^0,w,c
  1637  000EC8  6E21               	movwf	bcd2dec@value^0,c
  1638  000ECA  6A22               	clrf	(bcd2dec@value+1)^0,c
  1639  000ECC  EC9E  F010         	call	_bcd2dec	;wreg free
  1640  000ED0  C021  F025         	movff	?_bcd2dec,___awmod@dividend
  1641  000ED4  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
  1642  000ED8  0E00               	movlw	0
  1643  000EDA  6E28               	movwf	(___awmod@divisor+1)^0,c
  1644  000EDC  0E0A               	movlw	10
  1645  000EDE  6E27               	movwf	___awmod@divisor^0,c
  1646  000EE0  EC52  F00D         	call	___awmod	;wreg free
  1647  000EE4  5025               	movf	?___awmod^0,w,c
  1648  000EE6  0F30               	addlw	48
  1649  000EE8  ECE5  F012         	call	_lcdChar
  1650  000EEC                     
  1651                           ;main.c: 115:     lcdChar(':');
  1652  000EEC  0E3A               	movlw	58
  1653  000EEE  ECE5  F012         	call	_lcdChar
  1654                           
  1655                           ;main.c: 116:     lcdChar((((bcd2dec(dsReadData(0)& 0x7f)) / 10) % 10) + 48);
  1656  000EF2  0E00               	movlw	0
  1657  000EF4  6E0F               	movwf	(dsReadData@address+1)^0,c
  1658  000EF6  0E00               	movlw	0
  1659  000EF8  6E0E               	movwf	dsReadData@address^0,c
  1660  000EFA  EC15  F010         	call	_dsReadData	;wreg free
  1661  000EFE  0E7F               	movlw	127
  1662  000F00  140E               	andwf	?_dsReadData^0,w,c
  1663  000F02  6E21               	movwf	bcd2dec@value^0,c
  1664  000F04  6A22               	clrf	(bcd2dec@value+1)^0,c
  1665  000F06  EC9E  F010         	call	_bcd2dec	;wreg free
  1666  000F0A  C021  F02B         	movff	?_bcd2dec,_mostrarMenuInicial$1429
  1667  000F0E  C022  F02C         	movff	?_bcd2dec+1,_mostrarMenuInicial$1429+1
  1668  000F12                     
  1669                           ;main.c: 116:     lcdChar((((bcd2dec(dsReadData(0)& 0x7f)) / 10) % 10) + 48);
  1670  000F12  0E00               	movlw	0
  1671  000F14  6E16               	movwf	(___awdiv@divisor+1)^0,c
  1672  000F16  0E0A               	movlw	10
  1673  000F18  6E15               	movwf	___awdiv@divisor^0,c
  1674  000F1A  C02B  F013         	movff	_mostrarMenuInicial$1429,___awdiv@dividend
  1675  000F1E  C02C  F014         	movff	_mostrarMenuInicial$1429+1,___awdiv@dividend+1
  1676  000F22  EC96  F00C         	call	___awdiv	;wreg free
  1677  000F26  C013  F025         	movff	?___awdiv,___awmod@dividend
  1678  000F2A  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  1679  000F2E  0E00               	movlw	0
  1680  000F30  6E28               	movwf	(___awmod@divisor+1)^0,c
  1681  000F32  0E0A               	movlw	10
  1682  000F34  6E27               	movwf	___awmod@divisor^0,c
  1683  000F36  EC52  F00D         	call	___awmod	;wreg free
  1684  000F3A  5025               	movf	?___awmod^0,w,c
  1685  000F3C  0F30               	addlw	48
  1686  000F3E  ECE5  F012         	call	_lcdChar
  1687  000F42                     
  1688                           ;main.c: 117:     lcdChar(((bcd2dec(dsReadData(0)& 0x7f)) % 10) + 48);
  1689  000F42  0E00               	movlw	0
  1690  000F44  6E0F               	movwf	(dsReadData@address+1)^0,c
  1691  000F46  0E00               	movlw	0
  1692  000F48  6E0E               	movwf	dsReadData@address^0,c
  1693  000F4A  EC15  F010         	call	_dsReadData	;wreg free
  1694  000F4E  0E7F               	movlw	127
  1695  000F50  140E               	andwf	?_dsReadData^0,w,c
  1696  000F52  6E21               	movwf	bcd2dec@value^0,c
  1697  000F54  6A22               	clrf	(bcd2dec@value+1)^0,c
  1698  000F56  EC9E  F010         	call	_bcd2dec	;wreg free
  1699  000F5A  C021  F025         	movff	?_bcd2dec,___awmod@dividend
  1700  000F5E  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
  1701  000F62  0E00               	movlw	0
  1702  000F64  6E28               	movwf	(___awmod@divisor+1)^0,c
  1703  000F66  0E0A               	movlw	10
  1704  000F68  6E27               	movwf	___awmod@divisor^0,c
  1705  000F6A  EC52  F00D         	call	___awmod	;wreg free
  1706  000F6E  5025               	movf	?___awmod^0,w,c
  1707  000F70  0F30               	addlw	48
  1708  000F72  ECE5  F012         	call	_lcdChar
  1709                           
  1710                           ;main.c: 118:     lcdChar(' ');
  1711  000F76  0E20               	movlw	32
  1712  000F78  ECE5  F012         	call	_lcdChar
  1713                           
  1714                           ;main.c: 119:     lcdChar(' ');
  1715  000F7C  0E20               	movlw	32
  1716  000F7E  ECE5  F012         	call	_lcdChar
  1717  000F82  0012               	return		;funcret
  1718  000F84                     __end_of_mostrarMenuInicial:
  1719                           	callstack 0
  1720                           
  1721 ;; *************** function _iniciarPerifericos *****************
  1722 ;; Defined at:
  1723 ;;		line 97 in file "main.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;		None
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1737 ;;      Params:         0       0       0       0       0       0       0
  1738 ;;      Locals:         0       0       0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0
  1740 ;;      Totals:         0       0       0       0       0       0       0
  1741 ;;Total ram usage:        0 bytes
  1742 ;; Hardware stack levels used: 1
  1743 ;; Hardware stack levels required when called: 6
  1744 ;; This function calls:
  1745 ;;		_kpInit
  1746 ;;		_lcdInit
  1747 ;;		_pwmInit
  1748 ;;		_ssdInit
  1749 ;;		_timerInit
  1750 ;; This function is called by:
  1751 ;;		_main
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           	psect	text8
  1756  002620                     __ptext8:
  1757                           	callstack 0
  1758  002620                     _iniciarPerifericos:
  1759                           	callstack 24
  1760  002620                     
  1761                           ;main.c: 98:     lcdInit();
  1762  002620  ECF8  F00C         	call	_lcdInit	;wreg free
  1763                           
  1764                           ;main.c: 99:     kpInit();
  1765  002624  EC8B  F011         	call	_kpInit	;wreg free
  1766                           
  1767                           ;main.c: 100:     timerInit();
  1768  002628  EC2A  F013         	call	_timerInit	;wreg free
  1769                           
  1770                           ;main.c: 101:     ssdInit();
  1771  00262C  EC6E  F00F         	call	_ssdInit	;wreg free
  1772                           
  1773                           ;main.c: 102:     pwmInit();
  1774  002630  EC03  F013         	call	_pwmInit	;wreg free
  1775  002634  0012               	return		;funcret
  1776  002636                     __end_of_iniciarPerifericos:
  1777                           	callstack 0
  1778                           
  1779 ;; *************** function _timerInit *****************
  1780 ;; Defined at:
  1781 ;;		line 55 in file "timer.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;		None
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;		None
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      void 
  1788 ;; Registers used:
  1789 ;;		wreg, status,2, status,0
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1795 ;;      Params:         0       0       0       0       0       0       0
  1796 ;;      Locals:         0       0       0       0       0       0       0
  1797 ;;      Temps:          0       0       0       0       0       0       0
  1798 ;;      Totals:         0       0       0       0       0       0       0
  1799 ;;Total ram usage:        0 bytes
  1800 ;; Hardware stack levels used: 1
  1801 ;; This function calls:
  1802 ;;		Nothing
  1803 ;; This function is called by:
  1804 ;;		_iniciarPerifericos
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           	psect	text9
  1809  002654                     __ptext9:
  1810                           	callstack 0
  1811  002654                     _timerInit:
  1812                           	callstack 29
  1813  002654                     
  1814                           ;timer.c: 57:  T0CON = 0b00001000;
  1815  002654  0E08               	movlw	8
  1816  002656  6ED5               	movwf	213,c	;volatile
  1817  002658                     
  1818                           ;timer.c: 58:  ((T0CON) |= (1<<(7)));
  1819  002658  8ED5               	bsf	213,7,c	;volatile
  1820  00265A  0012               	return		;funcret
  1821  00265C                     __end_of_timerInit:
  1822                           	callstack 0
  1823                           
  1824 ;; *************** function _ssdInit *****************
  1825 ;; Defined at:
  1826 ;;		line 94 in file "ssd.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;		None
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;		None
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		wreg, status,2, status,0, cstack
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1840 ;;      Params:         0       0       0       0       0       0       0
  1841 ;;      Locals:         0       0       0       0       0       0       0
  1842 ;;      Temps:          0       0       0       0       0       0       0
  1843 ;;      Totals:         0       0       0       0       0       0       0
  1844 ;;Total ram usage:        0 bytes
  1845 ;; Hardware stack levels used: 1
  1846 ;; Hardware stack levels required when called: 2
  1847 ;; This function calls:
  1848 ;;		_pinMode
  1849 ;;		_soInit
  1850 ;; This function is called by:
  1851 ;;		_iniciarPerifericos
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text10
  1856  001EDC                     __ptext10:
  1857                           	callstack 0
  1858  001EDC                     _ssdInit:
  1859                           	callstack 27
  1860  001EDC                     
  1861                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
  1862  001EDC  0E00               	movlw	0
  1863  001EDE  6E02               	movwf	(pinMode@pin+1)^0,c
  1864  001EE0  0E18               	movlw	24
  1865  001EE2  6E01               	movwf	pinMode@pin^0,c
  1866  001EE4  0E00               	movlw	0
  1867  001EE6  6E04               	movwf	(pinMode@type+1)^0,c
  1868  001EE8  0E00               	movlw	0
  1869  001EEA  6E03               	movwf	pinMode@type^0,c
  1870  001EEC  EC92  F004         	call	_pinMode	;wreg free
  1871                           
  1872                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
  1873  001EF0  0E00               	movlw	0
  1874  001EF2  6E02               	movwf	(pinMode@pin+1)^0,c
  1875  001EF4  0E19               	movlw	25
  1876  001EF6  6E01               	movwf	pinMode@pin^0,c
  1877  001EF8  0E00               	movlw	0
  1878  001EFA  6E04               	movwf	(pinMode@type+1)^0,c
  1879  001EFC  0E00               	movlw	0
  1880  001EFE  6E03               	movwf	pinMode@type^0,c
  1881  001F00  EC92  F004         	call	_pinMode	;wreg free
  1882                           
  1883                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
  1884  001F04  0E00               	movlw	0
  1885  001F06  6E02               	movwf	(pinMode@pin+1)^0,c
  1886  001F08  0E1A               	movlw	26
  1887  001F0A  6E01               	movwf	pinMode@pin^0,c
  1888  001F0C  0E00               	movlw	0
  1889  001F0E  6E04               	movwf	(pinMode@type+1)^0,c
  1890  001F10  0E00               	movlw	0
  1891  001F12  6E03               	movwf	pinMode@type^0,c
  1892  001F14  EC92  F004         	call	_pinMode	;wreg free
  1893                           
  1894                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
  1895  001F18  0E00               	movlw	0
  1896  001F1A  6E02               	movwf	(pinMode@pin+1)^0,c
  1897  001F1C  0E1B               	movlw	27
  1898  001F1E  6E01               	movwf	pinMode@pin^0,c
  1899  001F20  0E00               	movlw	0
  1900  001F22  6E04               	movwf	(pinMode@type+1)^0,c
  1901  001F24  0E00               	movlw	0
  1902  001F26  6E03               	movwf	pinMode@type^0,c
  1903  001F28  EC92  F004         	call	_pinMode	;wreg free
  1904                           
  1905                           ;ssd.c: 102:     soInit();
  1906  001F2C  ECBF  F010         	call	_soInit	;wreg free
  1907  001F30  0012               	return		;funcret
  1908  001F32                     __end_of_ssdInit:
  1909                           	callstack 0
  1910                           
  1911 ;; *************** function _pwmInit *****************
  1912 ;; Defined at:
  1913 ;;		line 51 in file "pwm.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;		None
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;		None
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		wreg, status,2, status,0, cstack
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1927 ;;      Params:         0       0       0       0       0       0       0
  1928 ;;      Locals:         0       0       0       0       0       0       0
  1929 ;;      Temps:          0       0       0       0       0       0       0
  1930 ;;      Totals:         0       0       0       0       0       0       0
  1931 ;;Total ram usage:        0 bytes
  1932 ;; Hardware stack levels used: 1
  1933 ;; Hardware stack levels required when called: 2
  1934 ;; This function calls:
  1935 ;;		_pwmFrequency
  1936 ;; This function is called by:
  1937 ;;		_iniciarPerifericos
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941                           	psect	text11
  1942  002606                     __ptext11:
  1943                           	callstack 0
  1944  002606                     _pwmInit:
  1945                           	callstack 27
  1946  002606                     
  1947                           ;pwm.c: 53:  ((TRISC) &= ~(1<<(1)));
  1948  002606  9294               	bcf	148,1,c	;volatile
  1949  002608                     
  1950                           ;pwm.c: 55:  T2CON |= 0b00000011;
  1951  002608  0E03               	movlw	3
  1952  00260A  12CA               	iorwf	202,f,c	;volatile
  1953  00260C                     
  1954                           ;pwm.c: 56:  ((T2CON) |= (1<<(2)));
  1955  00260C  84CA               	bsf	202,2,c	;volatile
  1956  00260E                     
  1957                           ;pwm.c: 58:  CCP2CON = 0b00001100;
  1958  00260E  0E0C               	movlw	12
  1959  002610  6EBA               	movwf	186,c	;volatile
  1960  002612                     
  1961                           ;pwm.c: 60:     pwmFrequency(100);
  1962  002612  0E00               	movlw	0
  1963  002614  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  1964  002616  0E64               	movlw	100
  1965  002618  6E0F               	movwf	pwmFrequency@freq^0,c
  1966  00261A  EC9B  F012         	call	_pwmFrequency	;wreg free
  1967  00261E  0012               	return		;funcret
  1968  002620                     __end_of_pwmInit:
  1969                           	callstack 0
  1970                           
  1971 ;; *************** function _pwmFrequency *****************
  1972 ;; Defined at:
  1973 ;;		line 44 in file "pwm.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  freq            2   14[COMRAM] unsigned int 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;		None
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg, status,2, status,0, cstack
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1987 ;;      Params:         2       0       0       0       0       0       0
  1988 ;;      Locals:         0       0       0       0       0       0       0
  1989 ;;      Temps:          0       0       0       0       0       0       0
  1990 ;;      Totals:         2       0       0       0       0       0       0
  1991 ;;Total ram usage:        2 bytes
  1992 ;; Hardware stack levels used: 1
  1993 ;; Hardware stack levels required when called: 1
  1994 ;; This function calls:
  1995 ;;		___aldiv
  1996 ;; This function is called by:
  1997 ;;		_pwmInit
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           	psect	text12
  2002  002536                     __ptext12:
  2003                           	callstack 0
  2004  002536                     _pwmFrequency:
  2005                           	callstack 27
  2006  002536                     
  2007                           ;pwm.c: 44: void pwmFrequency(unsigned int freq);pwm.c: 45: {;pwm.c: 48:  PR2 = (125000l
      +                          /(freq)) - 1;
  2008  002536  0E48               	movlw	72
  2009  002538  6E01               	movwf	___aldiv@dividend^0,c
  2010  00253A  0EE8               	movlw	232
  2011  00253C  6E02               	movwf	(___aldiv@dividend+1)^0,c
  2012  00253E  0E01               	movlw	1
  2013  002540  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2014  002542  0E00               	movlw	0
  2015  002544  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2016  002546  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  2017  00254A  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  2018  00254E  6A07               	clrf	(___aldiv@divisor+2)^0,c
  2019  002550  6A08               	clrf	(___aldiv@divisor+3)^0,c
  2020  002552  EC9E  F00A         	call	___aldiv	;wreg free
  2021  002556  0401               	decf	?___aldiv^0,w,c
  2022  002558  6ECB               	movwf	203,c	;volatile
  2023  00255A  0012               	return		;funcret
  2024  00255C                     __end_of_pwmFrequency:
  2025                           	callstack 0
  2026                           
  2027 ;; *************** function _lcdInit *****************
  2028 ;; Defined at:
  2029 ;;		line 96 in file "lcd.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;		None
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		wreg, status,2, status,0, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2043 ;;      Params:         0       0       0       0       0       0       0
  2044 ;;      Locals:         0       0       0       0       0       0       0
  2045 ;;      Temps:          0       0       0       0       0       0       0
  2046 ;;      Totals:         0       0       0       0       0       0       0
  2047 ;;Total ram usage:        0 bytes
  2048 ;; Hardware stack levels used: 1
  2049 ;; Hardware stack levels required when called: 5
  2050 ;; This function calls:
  2051 ;;		_delayMicro
  2052 ;;		_delayMili
  2053 ;;		_lcdCommand
  2054 ;;		_pinMode
  2055 ;;		_pushNibble
  2056 ;;		_soInit
  2057 ;; This function is called by:
  2058 ;;		_iniciarPerifericos
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text13
  2063  0019F0                     __ptext13:
  2064                           	callstack 0
  2065  0019F0                     _lcdInit:
  2066                           	callstack 24
  2067  0019F0                     
  2068                           ;lcd.c: 97:  pinMode(PIN_D4, 0);
  2069  0019F0  0E00               	movlw	0
  2070  0019F2  6E02               	movwf	(pinMode@pin+1)^0,c
  2071  0019F4  0E1C               	movlw	28
  2072  0019F6  6E01               	movwf	pinMode@pin^0,c
  2073  0019F8  0E00               	movlw	0
  2074  0019FA  6E04               	movwf	(pinMode@type+1)^0,c
  2075  0019FC  0E00               	movlw	0
  2076  0019FE  6E03               	movwf	pinMode@type^0,c
  2077  001A00  EC92  F004         	call	_pinMode	;wreg free
  2078                           
  2079                           ;lcd.c: 98:  pinMode(PIN_D5, 0);
  2080  001A04  0E00               	movlw	0
  2081  001A06  6E02               	movwf	(pinMode@pin+1)^0,c
  2082  001A08  0E1D               	movlw	29
  2083  001A0A  6E01               	movwf	pinMode@pin^0,c
  2084  001A0C  0E00               	movlw	0
  2085  001A0E  6E04               	movwf	(pinMode@type+1)^0,c
  2086  001A10  0E00               	movlw	0
  2087  001A12  6E03               	movwf	pinMode@type^0,c
  2088  001A14  EC92  F004         	call	_pinMode	;wreg free
  2089                           
  2090                           ;lcd.c: 99:  soInit();
  2091  001A18  ECBF  F010         	call	_soInit	;wreg free
  2092                           
  2093                           ;lcd.c: 100:  delayMili(15);
  2094  001A1C  0E00               	movlw	0
  2095  001A1E  6E02               	movwf	(delayMili@a+1)^0,c
  2096  001A20  0E0F               	movlw	15
  2097  001A22  6E01               	movwf	delayMili@a^0,c
  2098  001A24  ECBD  F011         	call	_delayMili	;wreg free
  2099                           
  2100                           ;lcd.c: 102:  pushNibble(0x03, 0);
  2101  001A28  0E00               	movlw	0
  2102  001A2A  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2103  001A2C  0E00               	movlw	0
  2104  001A2E  6E0A               	movwf	pushNibble@rs^0,c
  2105  001A30  0E03               	movlw	3
  2106  001A32  ECAE  F012         	call	_pushNibble
  2107                           
  2108                           ;lcd.c: 103:  delayMili(5);
  2109  001A36  0E00               	movlw	0
  2110  001A38  6E02               	movwf	(delayMili@a+1)^0,c
  2111  001A3A  0E05               	movlw	5
  2112  001A3C  6E01               	movwf	delayMili@a^0,c
  2113  001A3E  ECBD  F011         	call	_delayMili	;wreg free
  2114                           
  2115                           ;lcd.c: 104:  pushNibble(0x03, 0);
  2116  001A42  0E00               	movlw	0
  2117  001A44  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2118  001A46  0E00               	movlw	0
  2119  001A48  6E0A               	movwf	pushNibble@rs^0,c
  2120  001A4A  0E03               	movlw	3
  2121  001A4C  ECAE  F012         	call	_pushNibble
  2122  001A50                     
  2123                           ;lcd.c: 105:  delayMicro(160);
  2124  001A50  0E00               	movlw	0
  2125  001A52  6E02               	movwf	(delayMicro@a+1)^0,c
  2126  001A54  0EA0               	movlw	160
  2127  001A56  6E01               	movwf	delayMicro@a^0,c
  2128  001A58  EC31  F013         	call	_delayMicro	;wreg free
  2129  001A5C                     
  2130                           ;lcd.c: 106:  pushNibble(0x03, 0);
  2131  001A5C  0E00               	movlw	0
  2132  001A5E  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2133  001A60  0E00               	movlw	0
  2134  001A62  6E0A               	movwf	pushNibble@rs^0,c
  2135  001A64  0E03               	movlw	3
  2136  001A66  ECAE  F012         	call	_pushNibble
  2137                           
  2138                           ;lcd.c: 107:  delayMicro(160);
  2139  001A6A  0E00               	movlw	0
  2140  001A6C  6E02               	movwf	(delayMicro@a+1)^0,c
  2141  001A6E  0EA0               	movlw	160
  2142  001A70  6E01               	movwf	delayMicro@a^0,c
  2143  001A72  EC31  F013         	call	_delayMicro	;wreg free
  2144  001A76                     
  2145                           ;lcd.c: 109:  pushNibble(0x02, 0);
  2146  001A76  0E00               	movlw	0
  2147  001A78  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2148  001A7A  0E00               	movlw	0
  2149  001A7C  6E0A               	movwf	pushNibble@rs^0,c
  2150  001A7E  0E02               	movlw	2
  2151  001A80  ECAE  F012         	call	_pushNibble
  2152  001A84                     
  2153                           ;lcd.c: 110:  delayMili(10);
  2154  001A84  0E00               	movlw	0
  2155  001A86  6E02               	movwf	(delayMili@a+1)^0,c
  2156  001A88  0E0A               	movlw	10
  2157  001A8A  6E01               	movwf	delayMili@a^0,c
  2158  001A8C  ECBD  F011         	call	_delayMili	;wreg free
  2159  001A90                     
  2160                           ;lcd.c: 112:  lcdCommand(0x28);
  2161  001A90  0E28               	movlw	40
  2162  001A92  ECF4  F012         	call	_lcdCommand
  2163  001A96                     
  2164                           ;lcd.c: 113:  lcdCommand(0x08 + 0x04);
  2165  001A96  0E0C               	movlw	12
  2166  001A98  ECF4  F012         	call	_lcdCommand
  2167  001A9C                     
  2168                           ;lcd.c: 114:  lcdCommand(0x01);
  2169  001A9C  0E01               	movlw	1
  2170  001A9E  ECF4  F012         	call	_lcdCommand
  2171  001AA2  0012               	return		;funcret
  2172  001AA4                     __end_of_lcdInit:
  2173                           	callstack 0
  2174                           
  2175 ;; *************** function _pushNibble *****************
  2176 ;; Defined at:
  2177 ;;		line 25 in file "lcd.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  value           1    wreg     unsigned char 
  2180 ;;  rs              2    9[COMRAM] int 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;  value           1   11[COMRAM] unsigned char 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2192 ;;      Params:         2       0       0       0       0       0       0
  2193 ;;      Locals:         1       0       0       0       0       0       0
  2194 ;;      Temps:          0       0       0       0       0       0       0
  2195 ;;      Totals:         3       0       0       0       0       0       0
  2196 ;;Total ram usage:        3 bytes
  2197 ;; Hardware stack levels used: 1
  2198 ;; Hardware stack levels required when called: 3
  2199 ;; This function calls:
  2200 ;;		_digitalWrite
  2201 ;;		_pulseEnablePin
  2202 ;;		_soWrite
  2203 ;; This function is called by:
  2204 ;;		_lcdInit
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text14
  2209  00255C                     __ptext14:
  2210                           	callstack 0
  2211  00255C                     _pushNibble:
  2212                           	callstack 25
  2213                           
  2214                           ;incstack = 0
  2215                           ;pushNibble@value stored from wreg
  2216  00255C  6E0C               	movwf	pushNibble@value^0,c
  2217  00255E                     
  2218                           ;lcd.c: 26:  soWrite(value);
  2219  00255E  C00C  F007         	movff	pushNibble@value,soWrite@value
  2220  002562  6A08               	clrf	(soWrite@value+1)^0,c
  2221  002564  ECEE  F00F         	call	_soWrite	;wreg free
  2222                           
  2223                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  2224  002568  0E00               	movlw	0
  2225  00256A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2226  00256C  0E1D               	movlw	29
  2227  00256E  6E01               	movwf	digitalWrite@pin^0,c
  2228  002570  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  2229  002574  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  2230  002578  ECB9  F005         	call	_digitalWrite	;wreg free
  2231                           
  2232                           ;lcd.c: 28:  pulseEnablePin();
  2233  00257C  EC7D  F010         	call	_pulseEnablePin	;wreg free
  2234  002580  0012               	return		;funcret
  2235  002582                     __end_of_pushNibble:
  2236                           	callstack 0
  2237                           
  2238 ;; *************** function _kpInit *****************
  2239 ;; Defined at:
  2240 ;;		line 54 in file "keypad.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;		None
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;		None
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		wreg, status,2, status,0, cstack
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2254 ;;      Params:         0       0       0       0       0       0       0
  2255 ;;      Locals:         0       0       0       0       0       0       0
  2256 ;;      Temps:          0       0       0       0       0       0       0
  2257 ;;      Totals:         0       0       0       0       0       0       0
  2258 ;;Total ram usage:        0 bytes
  2259 ;; Hardware stack levels used: 1
  2260 ;; Hardware stack levels required when called: 2
  2261 ;; This function calls:
  2262 ;;		_pinMode
  2263 ;;		_soInit
  2264 ;; This function is called by:
  2265 ;;		_iniciarPerifericos
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text15
  2270  002316                     __ptext15:
  2271                           	callstack 0
  2272  002316                     _kpInit:
  2273                           	callstack 27
  2274  002316                     
  2275                           ;keypad.c: 55:   soInit();
  2276  002316  ECBF  F010         	call	_soInit	;wreg free
  2277                           
  2278                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  2279  00231A  0E00               	movlw	0
  2280  00231C  6E02               	movwf	(pinMode@pin+1)^0,c
  2281  00231E  0E0A               	movlw	10
  2282  002320  6E01               	movwf	pinMode@pin^0,c
  2283  002322  0E00               	movlw	0
  2284  002324  6E04               	movwf	(pinMode@type+1)^0,c
  2285  002326  0E01               	movlw	1
  2286  002328  6E03               	movwf	pinMode@type^0,c
  2287  00232A  EC92  F004         	call	_pinMode	;wreg free
  2288                           
  2289                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  2290  00232E  0E00               	movlw	0
  2291  002330  6E02               	movwf	(pinMode@pin+1)^0,c
  2292  002332  0E09               	movlw	9
  2293  002334  6E01               	movwf	pinMode@pin^0,c
  2294  002336  0E00               	movlw	0
  2295  002338  6E04               	movwf	(pinMode@type+1)^0,c
  2296  00233A  0E01               	movlw	1
  2297  00233C  6E03               	movwf	pinMode@type^0,c
  2298  00233E  EC92  F004         	call	_pinMode	;wreg free
  2299  002342                     
  2300                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  2301  002342  0E0C               	movlw	12
  2302  002344  6EC1               	movwf	193,c	;volatile
  2303  002346  0012               	return		;funcret
  2304  002348                     __end_of_kpInit:
  2305                           	callstack 0
  2306                           
  2307 ;; *************** function _soInit *****************
  2308 ;; Defined at:
  2309 ;;		line 3 in file "so.c"
  2310 ;; Parameters:    Size  Location     Type
  2311 ;;		None
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;		None
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  1    wreg      void 
  2316 ;; Registers used:
  2317 ;;		wreg, status,2, status,0, cstack
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2323 ;;      Params:         0       0       0       0       0       0       0
  2324 ;;      Locals:         0       0       0       0       0       0       0
  2325 ;;      Temps:          0       0       0       0       0       0       0
  2326 ;;      Totals:         0       0       0       0       0       0       0
  2327 ;;Total ram usage:        0 bytes
  2328 ;; Hardware stack levels used: 1
  2329 ;; Hardware stack levels required when called: 1
  2330 ;; This function calls:
  2331 ;;		_pinMode
  2332 ;; This function is called by:
  2333 ;;		_kpInit
  2334 ;;		_lcdInit
  2335 ;;		_ssdInit
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           	psect	text16
  2340  00217E                     __ptext16:
  2341                           	callstack 0
  2342  00217E                     _soInit:
  2343                           	callstack 27
  2344  00217E                     
  2345                           ;so.c: 4:  pinMode(PIN_D7, 0);
  2346  00217E  0E00               	movlw	0
  2347  002180  6E02               	movwf	(pinMode@pin+1)^0,c
  2348  002182  0E1F               	movlw	31
  2349  002184  6E01               	movwf	pinMode@pin^0,c
  2350  002186  0E00               	movlw	0
  2351  002188  6E04               	movwf	(pinMode@type+1)^0,c
  2352  00218A  0E00               	movlw	0
  2353  00218C  6E03               	movwf	pinMode@type^0,c
  2354  00218E  EC92  F004         	call	_pinMode	;wreg free
  2355                           
  2356                           ;so.c: 5:  pinMode(PIN_B0, 0);
  2357  002192  0E00               	movlw	0
  2358  002194  6E02               	movwf	(pinMode@pin+1)^0,c
  2359  002196  0E08               	movlw	8
  2360  002198  6E01               	movwf	pinMode@pin^0,c
  2361  00219A  0E00               	movlw	0
  2362  00219C  6E04               	movwf	(pinMode@type+1)^0,c
  2363  00219E  0E00               	movlw	0
  2364  0021A0  6E03               	movwf	pinMode@type^0,c
  2365  0021A2  EC92  F004         	call	_pinMode	;wreg free
  2366                           
  2367                           ;so.c: 6:  pinMode(PIN_D6, 0);
  2368  0021A6  0E00               	movlw	0
  2369  0021A8  6E02               	movwf	(pinMode@pin+1)^0,c
  2370  0021AA  0E1E               	movlw	30
  2371  0021AC  6E01               	movwf	pinMode@pin^0,c
  2372  0021AE  0E00               	movlw	0
  2373  0021B0  6E04               	movwf	(pinMode@type+1)^0,c
  2374  0021B2  0E00               	movlw	0
  2375  0021B4  6E03               	movwf	pinMode@type^0,c
  2376  0021B6  EC92  F004         	call	_pinMode	;wreg free
  2377  0021BA  0012               	return		;funcret
  2378  0021BC                     __end_of_soInit:
  2379                           	callstack 0
  2380                           
  2381 ;; *************** function _atualizarTempoEstadia *****************
  2382 ;; Defined at:
  2383 ;;		line 150 in file "main.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;		None
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;		None
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2397 ;;      Params:         0       0       0       0       0       0       0
  2398 ;;      Locals:         0       0       0       0       0       0       0
  2399 ;;      Temps:          0       0       0       0       0       0       0
  2400 ;;      Totals:         0       0       0       0       0       0       0
  2401 ;;Total ram usage:        0 bytes
  2402 ;; Hardware stack levels used: 1
  2403 ;; Hardware stack levels required when called: 4
  2404 ;; This function calls:
  2405 ;;		___aldiv
  2406 ;;		___almod
  2407 ;;		___awdiv
  2408 ;;		___awmod
  2409 ;;		_ssdDigit
  2410 ;;		_ssdUpdate
  2411 ;;		_timerReset
  2412 ;;		_timerWait
  2413 ;; This function is called by:
  2414 ;;		_main
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text17
  2419  001648                     __ptext17:
  2420                           	callstack 0
  2421  001648                     _atualizarTempoEstadia:
  2422                           	callstack 26
  2423  001648                     
  2424                           ;main.c: 151:     ssdDigit(((tempoEstadia / 60000) % 10), 0);
  2425  001648  0E00               	movlw	0
  2426  00164A  6E2B               	movwf	ssdDigit@pos^0,c
  2427  00164C  0E60               	movlw	96
  2428  00164E  6E05               	movwf	___aldiv@divisor^0,c
  2429  001650  0EEA               	movlw	234
  2430  001652  6E06               	movwf	(___aldiv@divisor+1)^0,c
  2431  001654  0E00               	movlw	0
  2432  001656  6E07               	movwf	(___aldiv@divisor+2)^0,c
  2433  001658  0E00               	movlw	0
  2434  00165A  6E08               	movwf	(___aldiv@divisor+3)^0,c
  2435  00165C  C031  F001         	movff	_tempoEstadia,___aldiv@dividend
  2436  001660  C032  F002         	movff	_tempoEstadia+1,___aldiv@dividend+1
  2437  001664  0E00               	movlw	0
  2438  001666  BE02               	btfsc	(___aldiv@dividend+1)^0,7,c
  2439  001668  0EFF               	movlw	-1
  2440  00166A  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2441  00166C  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2442  00166E  EC9E  F00A         	call	___aldiv	;wreg free
  2443  001672  C001  F00F         	movff	?___aldiv,___almod@dividend
  2444  001676  C002  F010         	movff	?___aldiv+1,___almod@dividend+1
  2445  00167A  C003  F011         	movff	?___aldiv+2,___almod@dividend+2
  2446  00167E  C004  F012         	movff	?___aldiv+3,___almod@dividend+3
  2447  001682  0E0A               	movlw	10
  2448  001684  6E13               	movwf	___almod@divisor^0,c
  2449  001686  0E00               	movlw	0
  2450  001688  6E14               	movwf	(___almod@divisor+1)^0,c
  2451  00168A  0E00               	movlw	0
  2452  00168C  6E15               	movwf	(___almod@divisor+2)^0,c
  2453  00168E  0E00               	movlw	0
  2454  001690  6E16               	movwf	(___almod@divisor+3)^0,c
  2455  001692  EC20  F00C         	call	___almod	;wreg free
  2456  001696  500F               	movf	?___almod^0,w,c
  2457  001698  EC16  F00F         	call	_ssdDigit
  2458                           
  2459                           ;main.c: 152:     ssdDigit(((tempoEstadia / 6000) % 10), 1);
  2460  00169C  0E01               	movlw	1
  2461  00169E  6E2B               	movwf	ssdDigit@pos^0,c
  2462  0016A0  0E17               	movlw	23
  2463  0016A2  6E16               	movwf	(___awdiv@divisor+1)^0,c
  2464  0016A4  0E70               	movlw	112
  2465  0016A6  6E15               	movwf	___awdiv@divisor^0,c
  2466  0016A8  C031  F013         	movff	_tempoEstadia,___awdiv@dividend
  2467  0016AC  C032  F014         	movff	_tempoEstadia+1,___awdiv@dividend+1
  2468  0016B0  EC96  F00C         	call	___awdiv	;wreg free
  2469  0016B4  C013  F025         	movff	?___awdiv,___awmod@dividend
  2470  0016B8  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  2471  0016BC  0E00               	movlw	0
  2472  0016BE  6E28               	movwf	(___awmod@divisor+1)^0,c
  2473  0016C0  0E0A               	movlw	10
  2474  0016C2  6E27               	movwf	___awmod@divisor^0,c
  2475  0016C4  EC52  F00D         	call	___awmod	;wreg free
  2476  0016C8  5025               	movf	?___awmod^0,w,c
  2477  0016CA  EC16  F00F         	call	_ssdDigit
  2478                           
  2479                           ;main.c: 153:     ssdDigit(((tempoEstadia / 1000) % 6), 2);
  2480  0016CE  0E02               	movlw	2
  2481  0016D0  6E2B               	movwf	ssdDigit@pos^0,c
  2482  0016D2  0E03               	movlw	3
  2483  0016D4  6E16               	movwf	(___awdiv@divisor+1)^0,c
  2484  0016D6  0EE8               	movlw	232
  2485  0016D8  6E15               	movwf	___awdiv@divisor^0,c
  2486  0016DA  C031  F013         	movff	_tempoEstadia,___awdiv@dividend
  2487  0016DE  C032  F014         	movff	_tempoEstadia+1,___awdiv@dividend+1
  2488  0016E2  EC96  F00C         	call	___awdiv	;wreg free
  2489  0016E6  C013  F025         	movff	?___awdiv,___awmod@dividend
  2490  0016EA  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  2491  0016EE  0E00               	movlw	0
  2492  0016F0  6E28               	movwf	(___awmod@divisor+1)^0,c
  2493  0016F2  0E06               	movlw	6
  2494  0016F4  6E27               	movwf	___awmod@divisor^0,c
  2495  0016F6  EC52  F00D         	call	___awmod	;wreg free
  2496  0016FA  5025               	movf	?___awmod^0,w,c
  2497  0016FC  EC16  F00F         	call	_ssdDigit
  2498                           
  2499                           ;main.c: 154:     ssdDigit(((tempoEstadia / 100) % 10), 3);
  2500  001700  0E03               	movlw	3
  2501  001702  6E2B               	movwf	ssdDigit@pos^0,c
  2502  001704  0E00               	movlw	0
  2503  001706  6E16               	movwf	(___awdiv@divisor+1)^0,c
  2504  001708  0E64               	movlw	100
  2505  00170A  6E15               	movwf	___awdiv@divisor^0,c
  2506  00170C  C031  F013         	movff	_tempoEstadia,___awdiv@dividend
  2507  001710  C032  F014         	movff	_tempoEstadia+1,___awdiv@dividend+1
  2508  001714  EC96  F00C         	call	___awdiv	;wreg free
  2509  001718  C013  F025         	movff	?___awdiv,___awmod@dividend
  2510  00171C  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  2511  001720  0E00               	movlw	0
  2512  001722  6E28               	movwf	(___awmod@divisor+1)^0,c
  2513  001724  0E0A               	movlw	10
  2514  001726  6E27               	movwf	___awmod@divisor^0,c
  2515  001728  EC52  F00D         	call	___awmod	;wreg free
  2516  00172C  5025               	movf	?___awmod^0,w,c
  2517  00172E  EC16  F00F         	call	_ssdDigit
  2518  001732                     
  2519                           ;main.c: 155:     ssdUpdate();
  2520  001732  EC98  F008         	call	_ssdUpdate	;wreg free
  2521  001736                     
  2522                           ;main.c: 156:     timerReset(9000);
  2523  001736  0E23               	movlw	35
  2524  001738  6E02               	movwf	(timerReset@tempo+1)^0,c
  2525  00173A  0E28               	movlw	40
  2526  00173C  6E01               	movwf	timerReset@tempo^0,c
  2527  00173E  ECD4  F012         	call	_timerReset	;wreg free
  2528  001742                     
  2529                           ;main.c: 157:     timerWait();
  2530  001742  EC1B  F013         	call	_timerWait	;wreg free
  2531  001746                     
  2532                           ;main.c: 158:     tempoEstadia++;
  2533  001746  4A31               	infsnz	_tempoEstadia^0,f,c
  2534  001748  2A32               	incf	(_tempoEstadia+1)^0,f,c
  2535  00174A  0012               	return		;funcret
  2536  00174C                     __end_of_atualizarTempoEstadia:
  2537                           	callstack 0
  2538                           
  2539 ;; *************** function _timerWait *****************
  2540 ;; Defined at:
  2541 ;;		line 31 in file "timer.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;		None
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;		None
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      void 
  2548 ;; Registers used:
  2549 ;;		None
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2555 ;;      Params:         0       0       0       0       0       0       0
  2556 ;;      Locals:         0       0       0       0       0       0       0
  2557 ;;      Temps:          0       0       0       0       0       0       0
  2558 ;;      Totals:         0       0       0       0       0       0       0
  2559 ;;Total ram usage:        0 bytes
  2560 ;; Hardware stack levels used: 1
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_atualizarTempoEstadia
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text18
  2569  002636                     __ptext18:
  2570                           	callstack 0
  2571  002636                     _timerWait:
  2572                           	callstack 29
  2573  002636                     l461:
  2574  002636  A4F2               	btfss	242,2,c	;volatile
  2575  002638  EF20  F013         	goto	u1091
  2576  00263C  EF22  F013         	goto	u1090
  2577  002640                     u1091:
  2578  002640  EF1B  F013         	goto	l461
  2579  002644                     u1090:
  2580  002644  0012               	return		;funcret
  2581  002646                     __end_of_timerWait:
  2582                           	callstack 0
  2583                           
  2584 ;; *************** function _timerReset *****************
  2585 ;; Defined at:
  2586 ;;		line 37 in file "timer.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  tempo           2    0[COMRAM] unsigned int 
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;  ciclos          2    2[COMRAM] unsigned int 
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  1    wreg      void 
  2593 ;; Registers used:
  2594 ;;		wreg, status,2, status,0
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2600 ;;      Params:         2       0       0       0       0       0       0
  2601 ;;      Locals:         2       0       0       0       0       0       0
  2602 ;;      Temps:          0       0       0       0       0       0       0
  2603 ;;      Totals:         4       0       0       0       0       0       0
  2604 ;;Total ram usage:        4 bytes
  2605 ;; Hardware stack levels used: 1
  2606 ;; This function calls:
  2607 ;;		Nothing
  2608 ;; This function is called by:
  2609 ;;		_atualizarTempoEstadia
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text19
  2614  0025A8                     __ptext19:
  2615                           	callstack 0
  2616  0025A8                     _timerReset:
  2617                           	callstack 29
  2618  0025A8                     
  2619                           ;timer.c: 37: void timerReset(unsigned int tempo);timer.c: 38: {;timer.c: 39:     unsign
      +                          ed int ciclos;;timer.c: 42:     ciclos = tempo * 2;
  2620  0025A8  90D8               	bcf	status,0,c
  2621  0025AA  3401               	rlcf	timerReset@tempo^0,w,c
  2622  0025AC  6E03               	movwf	timerReset@ciclos^0,c
  2623  0025AE  3402               	rlcf	(timerReset@tempo+1)^0,w,c
  2624  0025B0  6E04               	movwf	(timerReset@ciclos+1)^0,c
  2625  0025B2                     
  2626                           ;timer.c: 44:  ciclos = 65535 - ciclos;
  2627  0025B2  1E03               	comf	timerReset@ciclos^0,f,c
  2628  0025B4  1E04               	comf	(timerReset@ciclos+1)^0,f,c
  2629  0025B6                     
  2630                           ;timer.c: 47:     ciclos -=50;
  2631  0025B6  0E32               	movlw	50
  2632  0025B8  5E03               	subwf	timerReset@ciclos^0,f,c
  2633  0025BA  0E00               	movlw	0
  2634  0025BC  5A04               	subwfb	(timerReset@ciclos+1)^0,f,c
  2635  0025BE                     
  2636                           ;timer.c: 49:  TMR0H = (ciclos >> 8);
  2637  0025BE  5004               	movf	(timerReset@ciclos+1)^0,w,c
  2638  0025C0  6ED7               	movwf	215,c	;volatile
  2639  0025C2                     
  2640                           ;timer.c: 50:  TMR0L = (ciclos & 0x00FF);
  2641  0025C2  C003  FFD6         	movff	timerReset@ciclos,4054	;volatile
  2642  0025C6                     
  2643                           ;timer.c: 52:  ((INTCON) &= ~(1<<(2)));
  2644  0025C6  94F2               	bcf	242,2,c	;volatile
  2645  0025C8  0012               	return		;funcret
  2646  0025CA                     __end_of_timerReset:
  2647                           	callstack 0
  2648                           
  2649 ;; *************** function _ssdUpdate *****************
  2650 ;; Defined at:
  2651 ;;		line 50 in file "ssd.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;		None
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;		None
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      void 
  2658 ;; Registers used:
  2659 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2665 ;;      Params:         0       0       0       0       0       0       0
  2666 ;;      Locals:         0       0       0       0       0       0       0
  2667 ;;      Temps:          2       0       0       0       0       0       0
  2668 ;;      Totals:         2       0       0       0       0       0       0
  2669 ;;Total ram usage:        2 bytes
  2670 ;; Hardware stack levels used: 1
  2671 ;; Hardware stack levels required when called: 3
  2672 ;; This function calls:
  2673 ;;		_digitalWrite
  2674 ;;		_soWrite
  2675 ;; This function is called by:
  2676 ;;		_atualizarTempoEstadia
  2677 ;;		_resetarTempoEstadia
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           	psect	text20
  2682  001130                     __ptext20:
  2683                           	callstack 0
  2684  001130                     _ssdUpdate:
  2685                           	callstack 26
  2686  001130                     
  2687                           ;ssd.c: 54:     digitalWrite(PIN_D0,0);
  2688  001130  0E00               	movlw	0
  2689  001132  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2690  001134  0E18               	movlw	24
  2691  001136  6E01               	movwf	digitalWrite@pin^0,c
  2692  001138  0E00               	movlw	0
  2693  00113A  6E04               	movwf	(digitalWrite@value+1)^0,c
  2694  00113C  0E00               	movlw	0
  2695  00113E  6E03               	movwf	digitalWrite@value^0,c
  2696  001140  ECB9  F005         	call	_digitalWrite	;wreg free
  2697                           
  2698                           ;ssd.c: 55:     digitalWrite(PIN_D1,0);
  2699  001144  0E00               	movlw	0
  2700  001146  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2701  001148  0E19               	movlw	25
  2702  00114A  6E01               	movwf	digitalWrite@pin^0,c
  2703  00114C  0E00               	movlw	0
  2704  00114E  6E04               	movwf	(digitalWrite@value+1)^0,c
  2705  001150  0E00               	movlw	0
  2706  001152  6E03               	movwf	digitalWrite@value^0,c
  2707  001154  ECB9  F005         	call	_digitalWrite	;wreg free
  2708                           
  2709                           ;ssd.c: 56:     digitalWrite(PIN_D2,0);
  2710  001158  0E00               	movlw	0
  2711  00115A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2712  00115C  0E1A               	movlw	26
  2713  00115E  6E01               	movwf	digitalWrite@pin^0,c
  2714  001160  0E00               	movlw	0
  2715  001162  6E04               	movwf	(digitalWrite@value+1)^0,c
  2716  001164  0E00               	movlw	0
  2717  001166  6E03               	movwf	digitalWrite@value^0,c
  2718  001168  ECB9  F005         	call	_digitalWrite	;wreg free
  2719                           
  2720                           ;ssd.c: 57:     digitalWrite(PIN_D3,0);
  2721  00116C  0E00               	movlw	0
  2722  00116E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2723  001170  0E1B               	movlw	27
  2724  001172  6E01               	movwf	digitalWrite@pin^0,c
  2725  001174  0E00               	movlw	0
  2726  001176  6E04               	movwf	(digitalWrite@value+1)^0,c
  2727  001178  0E00               	movlw	0
  2728  00117A  6E03               	movwf	digitalWrite@value^0,c
  2729  00117C  ECB9  F005         	call	_digitalWrite	;wreg free
  2730                           
  2731                           ;ssd.c: 60:     soWrite(0x00);
  2732  001180  0E00               	movlw	0
  2733  001182  6E08               	movwf	(soWrite@value+1)^0,c
  2734  001184  0E00               	movlw	0
  2735  001186  6E07               	movwf	soWrite@value^0,c
  2736  001188  ECEE  F00F         	call	_soWrite	;wreg free
  2737                           
  2738                           ;ssd.c: 62:     switch (display)
  2739  00118C  EF30  F009         	goto	l3037
  2740  001190                     l3009:
  2741                           
  2742                           ;ssd.c: 65:             soWrite(valor[v0]);
  2743  001190  0E01               	movlw	low _valor
  2744  001192  243C               	addwf	_v0^0,w,c
  2745  001194  6EF6               	movwf	tblptrl,c
  2746  001196  6AF7               	clrf	tblptrh,c
  2747  001198  0E06               	movlw	high _valor
  2748  00119A  22F7               	addwfc	tblptrh,f,c
  2749  00119C                     	if	0	;There are less than 3 active tblptr bytes
  2750  00119C                     	endif
  2751  00119C  0008               	tblrd		*
  2752  00119E  50F5               	movf	tablat,w,c
  2753  0011A0  6E07               	movwf	soWrite@value^0,c
  2754  0011A2  6A08               	clrf	(soWrite@value+1)^0,c
  2755  0011A4  ECEE  F00F         	call	_soWrite	;wreg free
  2756  0011A8                     
  2757                           ;ssd.c: 66:             digitalWrite(PIN_D0,1);
  2758  0011A8  0E00               	movlw	0
  2759  0011AA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2760  0011AC  0E18               	movlw	24
  2761  0011AE  6E01               	movwf	digitalWrite@pin^0,c
  2762  0011B0  0E00               	movlw	0
  2763  0011B2  6E04               	movwf	(digitalWrite@value+1)^0,c
  2764  0011B4  0E01               	movlw	1
  2765  0011B6  6E03               	movwf	digitalWrite@value^0,c
  2766  0011B8  ECB9  F005         	call	_digitalWrite	;wreg free
  2767  0011BC                     
  2768                           ;ssd.c: 67:             display = 1;
  2769  0011BC  0E01               	movlw	1
  2770  0011BE  6E3D               	movwf	_display^0,c
  2771                           
  2772                           ;ssd.c: 68:             break;
  2773  0011C0  EF4D  F009         	goto	l444
  2774  0011C4                     l3015:
  2775                           
  2776                           ;ssd.c: 71:             soWrite(valor[v1]);
  2777  0011C4  0E01               	movlw	low _valor
  2778  0011C6  243B               	addwf	_v1^0,w,c
  2779  0011C8  6EF6               	movwf	tblptrl,c
  2780  0011CA  6AF7               	clrf	tblptrh,c
  2781  0011CC  0E06               	movlw	high _valor
  2782  0011CE  22F7               	addwfc	tblptrh,f,c
  2783  0011D0                     	if	0	;There are less than 3 active tblptr bytes
  2784  0011D0                     	endif
  2785  0011D0  0008               	tblrd		*
  2786  0011D2  50F5               	movf	tablat,w,c
  2787  0011D4  6E07               	movwf	soWrite@value^0,c
  2788  0011D6  6A08               	clrf	(soWrite@value+1)^0,c
  2789  0011D8  ECEE  F00F         	call	_soWrite	;wreg free
  2790  0011DC                     
  2791                           ;ssd.c: 72:             digitalWrite(PIN_D1,1);
  2792  0011DC  0E00               	movlw	0
  2793  0011DE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2794  0011E0  0E19               	movlw	25
  2795  0011E2  6E01               	movwf	digitalWrite@pin^0,c
  2796  0011E4  0E00               	movlw	0
  2797  0011E6  6E04               	movwf	(digitalWrite@value+1)^0,c
  2798  0011E8  0E01               	movlw	1
  2799  0011EA  6E03               	movwf	digitalWrite@value^0,c
  2800  0011EC  ECB9  F005         	call	_digitalWrite	;wreg free
  2801  0011F0                     
  2802                           ;ssd.c: 73:             display = 2;
  2803  0011F0  0E02               	movlw	2
  2804  0011F2  6E3D               	movwf	_display^0,c
  2805                           
  2806                           ;ssd.c: 74:             break;
  2807  0011F4  EF4D  F009         	goto	l444
  2808  0011F8                     l3021:
  2809                           
  2810                           ;ssd.c: 77:             soWrite(valor[v2]);
  2811  0011F8  0E01               	movlw	low _valor
  2812  0011FA  243A               	addwf	_v2^0,w,c
  2813  0011FC  6EF6               	movwf	tblptrl,c
  2814  0011FE  6AF7               	clrf	tblptrh,c
  2815  001200  0E06               	movlw	high _valor
  2816  001202  22F7               	addwfc	tblptrh,f,c
  2817  001204                     	if	0	;There are less than 3 active tblptr bytes
  2818  001204                     	endif
  2819  001204  0008               	tblrd		*
  2820  001206  50F5               	movf	tablat,w,c
  2821  001208  6E07               	movwf	soWrite@value^0,c
  2822  00120A  6A08               	clrf	(soWrite@value+1)^0,c
  2823  00120C  ECEE  F00F         	call	_soWrite	;wreg free
  2824  001210                     
  2825                           ;ssd.c: 78:             digitalWrite(PIN_D2,1);
  2826  001210  0E00               	movlw	0
  2827  001212  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2828  001214  0E1A               	movlw	26
  2829  001216  6E01               	movwf	digitalWrite@pin^0,c
  2830  001218  0E00               	movlw	0
  2831  00121A  6E04               	movwf	(digitalWrite@value+1)^0,c
  2832  00121C  0E01               	movlw	1
  2833  00121E  6E03               	movwf	digitalWrite@value^0,c
  2834  001220  ECB9  F005         	call	_digitalWrite	;wreg free
  2835  001224                     
  2836                           ;ssd.c: 79:             display = 3;
  2837  001224  0E03               	movlw	3
  2838  001226  6E3D               	movwf	_display^0,c
  2839                           
  2840                           ;ssd.c: 80:             break;
  2841  001228  EF4D  F009         	goto	l444
  2842  00122C                     l3027:
  2843                           
  2844                           ;ssd.c: 83:             soWrite(valor[v3]);
  2845  00122C  0E01               	movlw	low _valor
  2846  00122E  2439               	addwf	_v3^0,w,c
  2847  001230  6EF6               	movwf	tblptrl,c
  2848  001232  6AF7               	clrf	tblptrh,c
  2849  001234  0E06               	movlw	high _valor
  2850  001236  22F7               	addwfc	tblptrh,f,c
  2851  001238                     	if	0	;There are less than 3 active tblptr bytes
  2852  001238                     	endif
  2853  001238  0008               	tblrd		*
  2854  00123A  50F5               	movf	tablat,w,c
  2855  00123C  6E07               	movwf	soWrite@value^0,c
  2856  00123E  6A08               	clrf	(soWrite@value+1)^0,c
  2857  001240  ECEE  F00F         	call	_soWrite	;wreg free
  2858  001244                     
  2859                           ;ssd.c: 84:             digitalWrite(PIN_D3,1);
  2860  001244  0E00               	movlw	0
  2861  001246  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2862  001248  0E1B               	movlw	27
  2863  00124A  6E01               	movwf	digitalWrite@pin^0,c
  2864  00124C  0E00               	movlw	0
  2865  00124E  6E04               	movwf	(digitalWrite@value+1)^0,c
  2866  001250  0E01               	movlw	1
  2867  001252  6E03               	movwf	digitalWrite@value^0,c
  2868  001254  ECB9  F005         	call	_digitalWrite	;wreg free
  2869  001258                     l3031:
  2870                           
  2871                           ;ssd.c: 85:             display = 0;
  2872  001258  0E00               	movlw	0
  2873  00125A  6E3D               	movwf	_display^0,c
  2874                           
  2875                           ;ssd.c: 86:             break;
  2876  00125C  EF4D  F009         	goto	l444
  2877  001260                     l3037:
  2878  001260  503D               	movf	_display^0,w,c
  2879  001262  6E0A               	movwf	??_ssdUpdate^0,c
  2880  001264  6A0B               	clrf	(??_ssdUpdate+1)^0,c
  2881                           
  2882                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2883                           ; Switch size 1, requested type "simple"
  2884                           ; Number of cases is 1, Range of values is 0 to 0
  2885                           ; switch strategies available:
  2886                           ; Name         Instructions Cycles
  2887                           ; simple_byte            4     3 (average)
  2888                           ;	Chosen strategy is simple_byte
  2889  001266  500B               	movf	(??_ssdUpdate+1)^0,w,c
  2890  001268  0A00               	xorlw	0	; case 0
  2891  00126A  B4D8               	btfsc	status,2,c
  2892  00126C  EF3A  F009         	goto	l3459
  2893  001270  EF2C  F009         	goto	l3031
  2894  001274                     l3459:
  2895                           
  2896                           ; Switch size 1, requested type "simple"
  2897                           ; Number of cases is 4, Range of values is 0 to 3
  2898                           ; switch strategies available:
  2899                           ; Name         Instructions Cycles
  2900                           ; simple_byte           13     7 (average)
  2901                           ;	Chosen strategy is simple_byte
  2902  001274  500A               	movf	??_ssdUpdate^0,w,c
  2903  001276  0A00               	xorlw	0	; case 0
  2904  001278  B4D8               	btfsc	status,2,c
  2905  00127A  EFC8  F008         	goto	l3009
  2906  00127E  0A01               	xorlw	1	; case 1
  2907  001280  B4D8               	btfsc	status,2,c
  2908  001282  EFE2  F008         	goto	l3015
  2909  001286  0A03               	xorlw	3	; case 2
  2910  001288  B4D8               	btfsc	status,2,c
  2911  00128A  EFFC  F008         	goto	l3021
  2912  00128E  0A01               	xorlw	1	; case 3
  2913  001290  B4D8               	btfsc	status,2,c
  2914  001292  EF16  F009         	goto	l3027
  2915  001296  EF2C  F009         	goto	l3031
  2916  00129A                     l444:
  2917  00129A  0012               	return		;funcret
  2918  00129C                     __end_of_ssdUpdate:
  2919                           	callstack 0
  2920                           
  2921 ;; *************** function _ssdDigit *****************
  2922 ;; Defined at:
  2923 ;;		line 34 in file "ssd.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  val             1    wreg     unsigned char 
  2926 ;;  pos             1   42[COMRAM] unsigned char 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  val             1   43[COMRAM] unsigned char 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      void 
  2931 ;; Registers used:
  2932 ;;		wreg, status,2, status,0
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2938 ;;      Params:         1       0       0       0       0       0       0
  2939 ;;      Locals:         1       0       0       0       0       0       0
  2940 ;;      Temps:          0       0       0       0       0       0       0
  2941 ;;      Totals:         2       0       0       0       0       0       0
  2942 ;;Total ram usage:        2 bytes
  2943 ;; Hardware stack levels used: 1
  2944 ;; This function calls:
  2945 ;;		Nothing
  2946 ;; This function is called by:
  2947 ;;		_atualizarTempoEstadia
  2948 ;;		_resetarTempoEstadia
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           	psect	text21
  2953  001E2C                     __ptext21:
  2954                           	callstack 0
  2955  001E2C                     _ssdDigit:
  2956                           	callstack 29
  2957                           
  2958                           ;incstack = 0
  2959                           ;ssdDigit@val stored from wreg
  2960  001E2C  6E2C               	movwf	ssdDigit@val^0,c
  2961  001E2E                     
  2962                           ;ssd.c: 35:     if (pos == 0) {
  2963  001E2E  502B               	movf	ssdDigit@pos^0,w,c
  2964  001E30  A4D8               	btfss	status,2,c
  2965  001E32  EF1D  F00F         	goto	u2601
  2966  001E36  EF1F  F00F         	goto	u2600
  2967  001E3A                     u2601:
  2968  001E3A  EF21  F00F         	goto	l2995
  2969  001E3E                     u2600:
  2970  001E3E                     
  2971                           ;ssd.c: 36:         v0 = val;
  2972  001E3E  C02C  F03C         	movff	ssdDigit@val,_v0
  2973  001E42                     l2995:
  2974                           
  2975                           ;ssd.c: 38:     if (pos == 1) {
  2976  001E42  042B               	decf	ssdDigit@pos^0,w,c
  2977  001E44  A4D8               	btfss	status,2,c
  2978  001E46  EF27  F00F         	goto	u2611
  2979  001E4A  EF29  F00F         	goto	u2610
  2980  001E4E                     u2611:
  2981  001E4E  EF2B  F00F         	goto	l2999
  2982  001E52                     u2610:
  2983  001E52                     
  2984                           ;ssd.c: 39:         v1 = val;
  2985  001E52  C02C  F03B         	movff	ssdDigit@val,_v1
  2986  001E56                     l2999:
  2987                           
  2988                           ;ssd.c: 41:     if (pos == 2) {
  2989  001E56  0E02               	movlw	2
  2990  001E58  182B               	xorwf	ssdDigit@pos^0,w,c
  2991  001E5A  A4D8               	btfss	status,2,c
  2992  001E5C  EF32  F00F         	goto	u2621
  2993  001E60  EF34  F00F         	goto	u2620
  2994  001E64                     u2621:
  2995  001E64  EF36  F00F         	goto	l3003
  2996  001E68                     u2620:
  2997  001E68                     
  2998                           ;ssd.c: 42:         v2 = val;
  2999  001E68  C02C  F03A         	movff	ssdDigit@val,_v2
  3000  001E6C                     l3003:
  3001                           
  3002                           ;ssd.c: 44:     if (pos == 3) {
  3003  001E6C  0E03               	movlw	3
  3004  001E6E  182B               	xorwf	ssdDigit@pos^0,w,c
  3005  001E70  A4D8               	btfss	status,2,c
  3006  001E72  EF3D  F00F         	goto	u2631
  3007  001E76  EF3F  F00F         	goto	u2630
  3008  001E7A                     u2631:
  3009  001E7A  EF41  F00F         	goto	l434
  3010  001E7E                     u2630:
  3011  001E7E                     
  3012                           ;ssd.c: 45:         v3 = val;
  3013  001E7E  C02C  F039         	movff	ssdDigit@val,_v3
  3014  001E82                     l434:
  3015  001E82  0012               	return		;funcret
  3016  001E84                     __end_of_ssdDigit:
  3017                           	callstack 0
  3018                           
  3019 ;; *************** function _atualizarHorarioSaida *****************
  3020 ;; Defined at:
  3021 ;;		line 166 in file "main.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;		None
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  t               1    0        unsigned char 
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1    wreg      void 
  3028 ;; Registers used:
  3029 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3035 ;;      Params:         0       0       0       0       0       0       0
  3036 ;;      Locals:         2       0       0       0       0       0       0
  3037 ;;      Temps:          0       0       0       0       0       0       0
  3038 ;;      Totals:         2       0       0       0       0       0       0
  3039 ;;Total ram usage:        2 bytes
  3040 ;; Hardware stack levels used: 1
  3041 ;; Hardware stack levels required when called: 6
  3042 ;; This function calls:
  3043 ;;		___aldiv
  3044 ;;		___almod
  3045 ;;		___awdiv
  3046 ;;		___awmod
  3047 ;;		___lwdiv
  3048 ;;		___lwmod
  3049 ;;		_atrasar
  3050 ;;		_bcd2dec
  3051 ;;		_dsReadData
  3052 ;;		_lcdChar
  3053 ;;		_lcdCommand
  3054 ;;		_lcdString
  3055 ;; This function is called by:
  3056 ;;		_main
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           	psect	text22
  3061  00065E                     __ptext22:
  3062                           	callstack 0
  3063  00065E                     _atualizarHorarioSaida:
  3064                           	callstack 24
  3065  00065E                     
  3066                           ;main.c: 167:     lcdCommand(0xC0);
  3067  00065E  0EC0               	movlw	192
  3068  000660  ECF4  F012         	call	_lcdCommand
  3069  000664                     
  3070                           ;main.c: 168:     lcdString("Out: ");
  3071  000664  0E51               	movlw	low STR_5
  3072  000666  6E0F               	movwf	lcdString@msg^0,c
  3073  000668  0E06               	movlw	high STR_5
  3074  00066A  6E10               	movwf	(lcdString@msg+1)^0,c
  3075  00066C  EC99  F00F         	call	_lcdString	;wreg free
  3076  000670                     
  3077                           ;main.c: 169:     lcdChar((((bcd2dec(dsReadData(2)& 0x5f)) / 10) % 10 + 2) + 48);
  3078  000670  0E00               	movlw	0
  3079  000672  6E0F               	movwf	(dsReadData@address+1)^0,c
  3080  000674  0E02               	movlw	2
  3081  000676  6E0E               	movwf	dsReadData@address^0,c
  3082  000678  EC15  F010         	call	_dsReadData	;wreg free
  3083  00067C  0E5F               	movlw	95
  3084  00067E  140E               	andwf	?_dsReadData^0,w,c
  3085  000680  6E21               	movwf	bcd2dec@value^0,c
  3086  000682  6A22               	clrf	(bcd2dec@value+1)^0,c
  3087  000684  EC9E  F010         	call	_bcd2dec	;wreg free
  3088  000688  C021  F02B         	movff	?_bcd2dec,_atualizarHorarioSaida$1431
  3089  00068C  C022  F02C         	movff	?_bcd2dec+1,_atualizarHorarioSaida$1431+1
  3090  000690                     
  3091                           ;main.c: 169:     lcdChar((((bcd2dec(dsReadData(2)& 0x5f)) / 10) % 10 + 2) + 48);
  3092  000690  0E00               	movlw	0
  3093  000692  6E16               	movwf	(___awdiv@divisor+1)^0,c
  3094  000694  0E0A               	movlw	10
  3095  000696  6E15               	movwf	___awdiv@divisor^0,c
  3096  000698  C02B  F013         	movff	_atualizarHorarioSaida$1431,___awdiv@dividend
  3097  00069C  C02C  F014         	movff	_atualizarHorarioSaida$1431+1,___awdiv@dividend+1
  3098  0006A0  EC96  F00C         	call	___awdiv	;wreg free
  3099  0006A4  C013  F025         	movff	?___awdiv,___awmod@dividend
  3100  0006A8  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  3101  0006AC  0E00               	movlw	0
  3102  0006AE  6E28               	movwf	(___awmod@divisor+1)^0,c
  3103  0006B0  0E0A               	movlw	10
  3104  0006B2  6E27               	movwf	___awmod@divisor^0,c
  3105  0006B4  EC52  F00D         	call	___awmod	;wreg free
  3106  0006B8  5025               	movf	?___awmod^0,w,c
  3107  0006BA  0F32               	addlw	50
  3108  0006BC  ECE5  F012         	call	_lcdChar
  3109  0006C0                     
  3110                           ;main.c: 170:     lcdChar(((bcd2dec(dsReadData(2)& 0x5f)) % 10) + 48);
  3111  0006C0  0E00               	movlw	0
  3112  0006C2  6E0F               	movwf	(dsReadData@address+1)^0,c
  3113  0006C4  0E02               	movlw	2
  3114  0006C6  6E0E               	movwf	dsReadData@address^0,c
  3115  0006C8  EC15  F010         	call	_dsReadData	;wreg free
  3116  0006CC  0E5F               	movlw	95
  3117  0006CE  140E               	andwf	?_dsReadData^0,w,c
  3118  0006D0  6E21               	movwf	bcd2dec@value^0,c
  3119  0006D2  6A22               	clrf	(bcd2dec@value+1)^0,c
  3120  0006D4  EC9E  F010         	call	_bcd2dec	;wreg free
  3121  0006D8  C021  F025         	movff	?_bcd2dec,___awmod@dividend
  3122  0006DC  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
  3123  0006E0  0E00               	movlw	0
  3124  0006E2  6E28               	movwf	(___awmod@divisor+1)^0,c
  3125  0006E4  0E0A               	movlw	10
  3126  0006E6  6E27               	movwf	___awmod@divisor^0,c
  3127  0006E8  EC52  F00D         	call	___awmod	;wreg free
  3128  0006EC  5025               	movf	?___awmod^0,w,c
  3129  0006EE  0F30               	addlw	48
  3130  0006F0  ECE5  F012         	call	_lcdChar
  3131  0006F4                     
  3132                           ;main.c: 171:     lcdChar(':');
  3133  0006F4  0E3A               	movlw	58
  3134  0006F6  ECE5  F012         	call	_lcdChar
  3135  0006FA                     
  3136                           ;main.c: 172:     lcdChar((((bcd2dec(dsReadData(1)& 0x7f)) / 10) % 10) + 48);
  3137  0006FA  0E00               	movlw	0
  3138  0006FC  6E0F               	movwf	(dsReadData@address+1)^0,c
  3139  0006FE  0E01               	movlw	1
  3140  000700  6E0E               	movwf	dsReadData@address^0,c
  3141  000702  EC15  F010         	call	_dsReadData	;wreg free
  3142  000706  0E7F               	movlw	127
  3143  000708  140E               	andwf	?_dsReadData^0,w,c
  3144  00070A  6E21               	movwf	bcd2dec@value^0,c
  3145  00070C  6A22               	clrf	(bcd2dec@value+1)^0,c
  3146  00070E  EC9E  F010         	call	_bcd2dec	;wreg free
  3147  000712  C021  F02B         	movff	?_bcd2dec,_atualizarHorarioSaida$1431
  3148  000716  C022  F02C         	movff	?_bcd2dec+1,_atualizarHorarioSaida$1431+1
  3149  00071A                     
  3150                           ;main.c: 172:     lcdChar((((bcd2dec(dsReadData(1)& 0x7f)) / 10) % 10) + 48);
  3151  00071A  0E00               	movlw	0
  3152  00071C  6E16               	movwf	(___awdiv@divisor+1)^0,c
  3153  00071E  0E0A               	movlw	10
  3154  000720  6E15               	movwf	___awdiv@divisor^0,c
  3155  000722  C02B  F013         	movff	_atualizarHorarioSaida$1431,___awdiv@dividend
  3156  000726  C02C  F014         	movff	_atualizarHorarioSaida$1431+1,___awdiv@dividend+1
  3157  00072A  EC96  F00C         	call	___awdiv	;wreg free
  3158  00072E  C013  F025         	movff	?___awdiv,___awmod@dividend
  3159  000732  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  3160  000736  0E00               	movlw	0
  3161  000738  6E28               	movwf	(___awmod@divisor+1)^0,c
  3162  00073A  0E0A               	movlw	10
  3163  00073C  6E27               	movwf	___awmod@divisor^0,c
  3164  00073E  EC52  F00D         	call	___awmod	;wreg free
  3165  000742  5025               	movf	?___awmod^0,w,c
  3166  000744  0F30               	addlw	48
  3167  000746  ECE5  F012         	call	_lcdChar
  3168  00074A                     
  3169                           ;main.c: 173:     lcdChar(((bcd2dec(dsReadData(1)& 0x7f)) % 10) + 48);
  3170  00074A  0E00               	movlw	0
  3171  00074C  6E0F               	movwf	(dsReadData@address+1)^0,c
  3172  00074E  0E01               	movlw	1
  3173  000750  6E0E               	movwf	dsReadData@address^0,c
  3174  000752  EC15  F010         	call	_dsReadData	;wreg free
  3175  000756  0E7F               	movlw	127
  3176  000758  140E               	andwf	?_dsReadData^0,w,c
  3177  00075A  6E21               	movwf	bcd2dec@value^0,c
  3178  00075C  6A22               	clrf	(bcd2dec@value+1)^0,c
  3179  00075E  EC9E  F010         	call	_bcd2dec	;wreg free
  3180  000762  C021  F025         	movff	?_bcd2dec,___awmod@dividend
  3181  000766  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
  3182  00076A  0E00               	movlw	0
  3183  00076C  6E28               	movwf	(___awmod@divisor+1)^0,c
  3184  00076E  0E0A               	movlw	10
  3185  000770  6E27               	movwf	___awmod@divisor^0,c
  3186  000772  EC52  F00D         	call	___awmod	;wreg free
  3187  000776  5025               	movf	?___awmod^0,w,c
  3188  000778  0F30               	addlw	48
  3189  00077A  ECE5  F012         	call	_lcdChar
  3190  00077E                     
  3191                           ;main.c: 174:     lcdChar(':');
  3192  00077E  0E3A               	movlw	58
  3193  000780  ECE5  F012         	call	_lcdChar
  3194  000784                     
  3195                           ;main.c: 175:     lcdChar((((bcd2dec(dsReadData(0)& 0x7f)) / 10) % 10) + 48);
  3196  000784  0E00               	movlw	0
  3197  000786  6E0F               	movwf	(dsReadData@address+1)^0,c
  3198  000788  0E00               	movlw	0
  3199  00078A  6E0E               	movwf	dsReadData@address^0,c
  3200  00078C  EC15  F010         	call	_dsReadData	;wreg free
  3201  000790  0E7F               	movlw	127
  3202  000792  140E               	andwf	?_dsReadData^0,w,c
  3203  000794  6E21               	movwf	bcd2dec@value^0,c
  3204  000796  6A22               	clrf	(bcd2dec@value+1)^0,c
  3205  000798  EC9E  F010         	call	_bcd2dec	;wreg free
  3206  00079C  C021  F02B         	movff	?_bcd2dec,_atualizarHorarioSaida$1431
  3207  0007A0  C022  F02C         	movff	?_bcd2dec+1,_atualizarHorarioSaida$1431+1
  3208  0007A4                     
  3209                           ;main.c: 175:     lcdChar((((bcd2dec(dsReadData(0)& 0x7f)) / 10) % 10) + 48);
  3210  0007A4  0E00               	movlw	0
  3211  0007A6  6E16               	movwf	(___awdiv@divisor+1)^0,c
  3212  0007A8  0E0A               	movlw	10
  3213  0007AA  6E15               	movwf	___awdiv@divisor^0,c
  3214  0007AC  C02B  F013         	movff	_atualizarHorarioSaida$1431,___awdiv@dividend
  3215  0007B0  C02C  F014         	movff	_atualizarHorarioSaida$1431+1,___awdiv@dividend+1
  3216  0007B4  EC96  F00C         	call	___awdiv	;wreg free
  3217  0007B8  C013  F025         	movff	?___awdiv,___awmod@dividend
  3218  0007BC  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  3219  0007C0  0E00               	movlw	0
  3220  0007C2  6E28               	movwf	(___awmod@divisor+1)^0,c
  3221  0007C4  0E0A               	movlw	10
  3222  0007C6  6E27               	movwf	___awmod@divisor^0,c
  3223  0007C8  EC52  F00D         	call	___awmod	;wreg free
  3224  0007CC  5025               	movf	?___awmod^0,w,c
  3225  0007CE  0F30               	addlw	48
  3226  0007D0  ECE5  F012         	call	_lcdChar
  3227  0007D4                     
  3228                           ;main.c: 176:     lcdChar(((bcd2dec(dsReadData(0)& 0x7f)) % 10) + 48);
  3229  0007D4  0E00               	movlw	0
  3230  0007D6  6E0F               	movwf	(dsReadData@address+1)^0,c
  3231  0007D8  0E00               	movlw	0
  3232  0007DA  6E0E               	movwf	dsReadData@address^0,c
  3233  0007DC  EC15  F010         	call	_dsReadData	;wreg free
  3234  0007E0  0E7F               	movlw	127
  3235  0007E2  140E               	andwf	?_dsReadData^0,w,c
  3236  0007E4  6E21               	movwf	bcd2dec@value^0,c
  3237  0007E6  6A22               	clrf	(bcd2dec@value+1)^0,c
  3238  0007E8  EC9E  F010         	call	_bcd2dec	;wreg free
  3239  0007EC  C021  F025         	movff	?_bcd2dec,___awmod@dividend
  3240  0007F0  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
  3241  0007F4  0E00               	movlw	0
  3242  0007F6  6E28               	movwf	(___awmod@divisor+1)^0,c
  3243  0007F8  0E0A               	movlw	10
  3244  0007FA  6E27               	movwf	___awmod@divisor^0,c
  3245  0007FC  EC52  F00D         	call	___awmod	;wreg free
  3246  000800  5025               	movf	?___awmod^0,w,c
  3247  000802  0F30               	addlw	48
  3248  000804  ECE5  F012         	call	_lcdChar
  3249  000808                     
  3250                           ;main.c: 179:     atrasar(t);
  3251  000808  0E78               	movlw	120
  3252  00080A  EC88  F00E         	call	_atrasar
  3253  00080E                     
  3254                           ;main.c: 181:     lcdCommand(0x01);
  3255  00080E  0E01               	movlw	1
  3256  000810  ECF4  F012         	call	_lcdCommand
  3257  000814                     
  3258                           ;main.c: 182:     lcdCommand(0x80);
  3259  000814  0E80               	movlw	128
  3260  000816  ECF4  F012         	call	_lcdCommand
  3261  00081A                     
  3262                           ;main.c: 183:     lcdString("Valor a pagar");
  3263  00081A  0E2B               	movlw	low STR_6
  3264  00081C  6E0F               	movwf	lcdString@msg^0,c
  3265  00081E  0E06               	movlw	high STR_6
  3266  000820  6E10               	movwf	(lcdString@msg+1)^0,c
  3267  000822  EC99  F00F         	call	_lcdString	;wreg free
  3268  000826                     
  3269                           ;main.c: 184:     lcdCommand(0xC0);
  3270  000826  0EC0               	movlw	192
  3271  000828  ECF4  F012         	call	_lcdCommand
  3272  00082C                     
  3273                           ;main.c: 185:     lcdString("R$: ");
  3274  00082C  0E57               	movlw	low STR_7
  3275  00082E  6E0F               	movwf	lcdString@msg^0,c
  3276  000830  0E06               	movlw	high STR_7
  3277  000832  6E10               	movwf	(lcdString@msg+1)^0,c
  3278  000834  EC99  F00F         	call	_lcdString	;wreg free
  3279  000838                     
  3280                           ;main.c: 187:     valorAPagar = tempoEstadia;
  3281  000838  C031  F02D         	movff	_tempoEstadia,_valorAPagar
  3282  00083C  C032  F02E         	movff	_tempoEstadia+1,_valorAPagar+1
  3283  000840                     
  3284                           ;main.c: 188:     lcdChar(((valorAPagar / 100000) % 10) + 48);
  3285  000840  0EA0               	movlw	160
  3286  000842  6E05               	movwf	___aldiv@divisor^0,c
  3287  000844  0E86               	movlw	134
  3288  000846  6E06               	movwf	(___aldiv@divisor+1)^0,c
  3289  000848  0E01               	movlw	1
  3290  00084A  6E07               	movwf	(___aldiv@divisor+2)^0,c
  3291  00084C  0E00               	movlw	0
  3292  00084E  6E08               	movwf	(___aldiv@divisor+3)^0,c
  3293  000850  C02D  F001         	movff	_valorAPagar,___aldiv@dividend
  3294  000854  C02E  F002         	movff	_valorAPagar+1,___aldiv@dividend+1
  3295  000858  6A03               	clrf	(___aldiv@dividend+2)^0,c
  3296  00085A  6A04               	clrf	(___aldiv@dividend+3)^0,c
  3297  00085C  EC9E  F00A         	call	___aldiv	;wreg free
  3298  000860  C001  F00F         	movff	?___aldiv,___almod@dividend
  3299  000864  C002  F010         	movff	?___aldiv+1,___almod@dividend+1
  3300  000868  C003  F011         	movff	?___aldiv+2,___almod@dividend+2
  3301  00086C  C004  F012         	movff	?___aldiv+3,___almod@dividend+3
  3302  000870  0E0A               	movlw	10
  3303  000872  6E13               	movwf	___almod@divisor^0,c
  3304  000874  0E00               	movlw	0
  3305  000876  6E14               	movwf	(___almod@divisor+1)^0,c
  3306  000878  0E00               	movlw	0
  3307  00087A  6E15               	movwf	(___almod@divisor+2)^0,c
  3308  00087C  0E00               	movlw	0
  3309  00087E  6E16               	movwf	(___almod@divisor+3)^0,c
  3310  000880  EC20  F00C         	call	___almod	;wreg free
  3311  000884  500F               	movf	?___almod^0,w,c
  3312  000886  0F30               	addlw	48
  3313  000888  ECE5  F012         	call	_lcdChar
  3314  00088C                     
  3315                           ;main.c: 189:     lcdChar(((valorAPagar / 10000) % 10) + 48);
  3316  00088C  0E27               	movlw	39
  3317  00088E  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3318  000890  0E10               	movlw	16
  3319  000892  6E03               	movwf	___lwdiv@divisor^0,c
  3320  000894  C02D  F001         	movff	_valorAPagar,___lwdiv@dividend
  3321  000898  C02E  F002         	movff	_valorAPagar+1,___lwdiv@dividend+1
  3322  00089C  ECE6  F00D         	call	___lwdiv	;wreg free
  3323  0008A0  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  3324  0008A4  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  3325  0008A8  0E00               	movlw	0
  3326  0008AA  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  3327  0008AC  0E0A               	movlw	10
  3328  0008AE  6E0A               	movwf	___lwmod@divisor^0,c
  3329  0008B0  EC56  F00E         	call	___lwmod	;wreg free
  3330  0008B4  5008               	movf	?___lwmod^0,w,c
  3331  0008B6  0F30               	addlw	48
  3332  0008B8  ECE5  F012         	call	_lcdChar
  3333  0008BC                     
  3334                           ;main.c: 190:     lcdChar('.');
  3335  0008BC  0E2E               	movlw	46
  3336  0008BE  ECE5  F012         	call	_lcdChar
  3337  0008C2                     
  3338                           ;main.c: 191:     lcdChar(((valorAPagar / 1000) % 10) + 48);
  3339  0008C2  0E03               	movlw	3
  3340  0008C4  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3341  0008C6  0EE8               	movlw	232
  3342  0008C8  6E03               	movwf	___lwdiv@divisor^0,c
  3343  0008CA  C02D  F001         	movff	_valorAPagar,___lwdiv@dividend
  3344  0008CE  C02E  F002         	movff	_valorAPagar+1,___lwdiv@dividend+1
  3345  0008D2  ECE6  F00D         	call	___lwdiv	;wreg free
  3346  0008D6  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  3347  0008DA  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  3348  0008DE  0E00               	movlw	0
  3349  0008E0  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  3350  0008E2  0E0A               	movlw	10
  3351  0008E4  6E0A               	movwf	___lwmod@divisor^0,c
  3352  0008E6  EC56  F00E         	call	___lwmod	;wreg free
  3353  0008EA  5008               	movf	?___lwmod^0,w,c
  3354  0008EC  0F30               	addlw	48
  3355  0008EE  ECE5  F012         	call	_lcdChar
  3356  0008F2                     
  3357                           ;main.c: 192:     lcdChar(((valorAPagar / 100) % 10) + 48);
  3358  0008F2  0E00               	movlw	0
  3359  0008F4  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3360  0008F6  0E64               	movlw	100
  3361  0008F8  6E03               	movwf	___lwdiv@divisor^0,c
  3362  0008FA  C02D  F001         	movff	_valorAPagar,___lwdiv@dividend
  3363  0008FE  C02E  F002         	movff	_valorAPagar+1,___lwdiv@dividend+1
  3364  000902  ECE6  F00D         	call	___lwdiv	;wreg free
  3365  000906  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  3366  00090A  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  3367  00090E  0E00               	movlw	0
  3368  000910  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  3369  000912  0E0A               	movlw	10
  3370  000914  6E0A               	movwf	___lwmod@divisor^0,c
  3371  000916  EC56  F00E         	call	___lwmod	;wreg free
  3372  00091A  5008               	movf	?___lwmod^0,w,c
  3373  00091C  0F30               	addlw	48
  3374  00091E  ECE5  F012         	call	_lcdChar
  3375  000922  0012               	return		;funcret
  3376  000924                     __end_of_atualizarHorarioSaida:
  3377                           	callstack 0
  3378                           
  3379 ;; *************** function ___lwmod *****************
  3380 ;; Defined at:
  3381 ;;		line 7 in file "E:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;  dividend        2    7[COMRAM] unsigned int 
  3384 ;;  divisor         2    9[COMRAM] unsigned int 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;  counter         1   11[COMRAM] unsigned char 
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  2    7[COMRAM] unsigned int 
  3389 ;; Registers used:
  3390 ;;		wreg, status,2, status,0
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3396 ;;      Params:         4       0       0       0       0       0       0
  3397 ;;      Locals:         1       0       0       0       0       0       0
  3398 ;;      Temps:          0       0       0       0       0       0       0
  3399 ;;      Totals:         5       0       0       0       0       0       0
  3400 ;;Total ram usage:        5 bytes
  3401 ;; Hardware stack levels used: 1
  3402 ;; This function calls:
  3403 ;;		Nothing
  3404 ;; This function is called by:
  3405 ;;		_atualizarHorarioSaida
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           	psect	text23
  3410  001CAC                     __ptext23:
  3411                           	callstack 0
  3412  001CAC                     ___lwmod:
  3413                           	callstack 29
  3414  001CAC  500A               	movf	___lwmod@divisor^0,w,c
  3415  001CAE  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  3416  001CB0  B4D8               	btfsc	status,2,c
  3417  001CB2  EF5D  F00E         	goto	u2761
  3418  001CB6  EF5F  F00E         	goto	u2760
  3419  001CBA                     u2761:
  3420  001CBA  EF83  F00E         	goto	l1125
  3421  001CBE                     u2760:
  3422  001CBE  0E01               	movlw	1
  3423  001CC0  6E0C               	movwf	___lwmod@counter^0,c
  3424  001CC2  EF67  F00E         	goto	l3135
  3425  001CC6                     l3133:
  3426  001CC6  90D8               	bcf	status,0,c
  3427  001CC8  360A               	rlcf	___lwmod@divisor^0,f,c
  3428  001CCA  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  3429  001CCC  2A0C               	incf	___lwmod@counter^0,f,c
  3430  001CCE                     l3135:
  3431  001CCE  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  3432  001CD0  EF6C  F00E         	goto	u2771
  3433  001CD4  EF6E  F00E         	goto	u2770
  3434  001CD8                     u2771:
  3435  001CD8  EF63  F00E         	goto	l3133
  3436  001CDC                     u2770:
  3437  001CDC                     l3137:
  3438  001CDC  500A               	movf	___lwmod@divisor^0,w,c
  3439  001CDE  5C08               	subwf	___lwmod@dividend^0,w,c
  3440  001CE0  500B               	movf	(___lwmod@divisor+1)^0,w,c
  3441  001CE2  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  3442  001CE4  A0D8               	btfss	status,0,c
  3443  001CE6  EF77  F00E         	goto	u2781
  3444  001CEA  EF79  F00E         	goto	u2780
  3445  001CEE                     u2781:
  3446  001CEE  EF7D  F00E         	goto	l3141
  3447  001CF2                     u2780:
  3448  001CF2  500A               	movf	___lwmod@divisor^0,w,c
  3449  001CF4  5E08               	subwf	___lwmod@dividend^0,f,c
  3450  001CF6  500B               	movf	(___lwmod@divisor+1)^0,w,c
  3451  001CF8  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  3452  001CFA                     l3141:
  3453  001CFA  90D8               	bcf	status,0,c
  3454  001CFC  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  3455  001CFE  320A               	rrcf	___lwmod@divisor^0,f,c
  3456  001D00  2E0C               	decfsz	___lwmod@counter^0,f,c
  3457  001D02  EF6E  F00E         	goto	l3137
  3458  001D06                     l1125:
  3459  001D06  C008  F008         	movff	___lwmod@dividend,?___lwmod
  3460  001D0A  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  3461  001D0E  0012               	return		;funcret
  3462  001D10                     __end_of___lwmod:
  3463                           	callstack 0
  3464                           
  3465 ;; *************** function ___almod *****************
  3466 ;; Defined at:
  3467 ;;		line 7 in file "E:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\almod.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;  dividend        4   14[COMRAM] long 
  3470 ;;  divisor         4   18[COMRAM] long 
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;  sign            1   23[COMRAM] unsigned char 
  3473 ;;  counter         1   22[COMRAM] unsigned char 
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  4   14[COMRAM] long 
  3476 ;; Registers used:
  3477 ;;		wreg, status,2, status,0
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3483 ;;      Params:         8       0       0       0       0       0       0
  3484 ;;      Locals:         2       0       0       0       0       0       0
  3485 ;;      Temps:          0       0       0       0       0       0       0
  3486 ;;      Totals:        10       0       0       0       0       0       0
  3487 ;;Total ram usage:       10 bytes
  3488 ;; Hardware stack levels used: 1
  3489 ;; This function calls:
  3490 ;;		Nothing
  3491 ;; This function is called by:
  3492 ;;		_atualizarTempoEstadia
  3493 ;;		_atualizarHorarioSaida
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text24
  3498  001840                     __ptext24:
  3499                           	callstack 0
  3500  001840                     ___almod:
  3501                           	callstack 29
  3502  001840  0E00               	movlw	0
  3503  001842  6E18               	movwf	___almod@sign^0,c
  3504  001844  BE12               	btfsc	(___almod@dividend+3)^0,7,c
  3505  001846  EF29  F00C         	goto	u2640
  3506  00184A  EF27  F00C         	goto	u2641
  3507  00184E                     u2641:
  3508  00184E  EF33  F00C         	goto	l3065
  3509  001852                     u2640:
  3510  001852  1E12               	comf	(___almod@dividend+3)^0,f,c
  3511  001854  1E11               	comf	(___almod@dividend+2)^0,f,c
  3512  001856  1E10               	comf	(___almod@dividend+1)^0,f,c
  3513  001858  6C0F               	negf	___almod@dividend^0,c
  3514  00185A  0E00               	movlw	0
  3515  00185C  2210               	addwfc	(___almod@dividend+1)^0,f,c
  3516  00185E  2211               	addwfc	(___almod@dividend+2)^0,f,c
  3517  001860  2212               	addwfc	(___almod@dividend+3)^0,f,c
  3518  001862  0E01               	movlw	1
  3519  001864  6E18               	movwf	___almod@sign^0,c
  3520  001866                     l3065:
  3521  001866  BE16               	btfsc	(___almod@divisor+3)^0,7,c
  3522  001868  EF3A  F00C         	goto	u2650
  3523  00186C  EF38  F00C         	goto	u2651
  3524  001870                     u2651:
  3525  001870  EF42  F00C         	goto	l3069
  3526  001874                     u2650:
  3527  001874  1E16               	comf	(___almod@divisor+3)^0,f,c
  3528  001876  1E15               	comf	(___almod@divisor+2)^0,f,c
  3529  001878  1E14               	comf	(___almod@divisor+1)^0,f,c
  3530  00187A  6C13               	negf	___almod@divisor^0,c
  3531  00187C  0E00               	movlw	0
  3532  00187E  2214               	addwfc	(___almod@divisor+1)^0,f,c
  3533  001880  2215               	addwfc	(___almod@divisor+2)^0,f,c
  3534  001882  2216               	addwfc	(___almod@divisor+3)^0,f,c
  3535  001884                     l3069:
  3536  001884  5013               	movf	___almod@divisor^0,w,c
  3537  001886  1014               	iorwf	(___almod@divisor+1)^0,w,c
  3538  001888  1015               	iorwf	(___almod@divisor+2)^0,w,c
  3539  00188A  1016               	iorwf	(___almod@divisor+3)^0,w,c
  3540  00188C  B4D8               	btfsc	status,2,c
  3541  00188E  EF4B  F00C         	goto	u2661
  3542  001892  EF4D  F00C         	goto	u2660
  3543  001896                     u2661:
  3544  001896  EF7D  F00C         	goto	l3085
  3545  00189A                     u2660:
  3546  00189A  0E01               	movlw	1
  3547  00189C  6E17               	movwf	___almod@counter^0,c
  3548  00189E  EF57  F00C         	goto	l3075
  3549  0018A2                     l3073:
  3550  0018A2  90D8               	bcf	status,0,c
  3551  0018A4  3613               	rlcf	___almod@divisor^0,f,c
  3552  0018A6  3614               	rlcf	(___almod@divisor+1)^0,f,c
  3553  0018A8  3615               	rlcf	(___almod@divisor+2)^0,f,c
  3554  0018AA  3616               	rlcf	(___almod@divisor+3)^0,f,c
  3555  0018AC  2A17               	incf	___almod@counter^0,f,c
  3556  0018AE                     l3075:
  3557  0018AE  AE16               	btfss	(___almod@divisor+3)^0,7,c
  3558  0018B0  EF5C  F00C         	goto	u2671
  3559  0018B4  EF5E  F00C         	goto	u2670
  3560  0018B8                     u2671:
  3561  0018B8  EF51  F00C         	goto	l3073
  3562  0018BC                     u2670:
  3563  0018BC                     l3077:
  3564  0018BC  5013               	movf	___almod@divisor^0,w,c
  3565  0018BE  5C0F               	subwf	___almod@dividend^0,w,c
  3566  0018C0  5014               	movf	(___almod@divisor+1)^0,w,c
  3567  0018C2  5810               	subwfb	(___almod@dividend+1)^0,w,c
  3568  0018C4  5015               	movf	(___almod@divisor+2)^0,w,c
  3569  0018C6  5811               	subwfb	(___almod@dividend+2)^0,w,c
  3570  0018C8  5016               	movf	(___almod@divisor+3)^0,w,c
  3571  0018CA  5812               	subwfb	(___almod@dividend+3)^0,w,c
  3572  0018CC  A0D8               	btfss	status,0,c
  3573  0018CE  EF6B  F00C         	goto	u2681
  3574  0018D2  EF6D  F00C         	goto	u2680
  3575  0018D6                     u2681:
  3576  0018D6  EF75  F00C         	goto	l3081
  3577  0018DA                     u2680:
  3578  0018DA  5013               	movf	___almod@divisor^0,w,c
  3579  0018DC  5E0F               	subwf	___almod@dividend^0,f,c
  3580  0018DE  5014               	movf	(___almod@divisor+1)^0,w,c
  3581  0018E0  5A10               	subwfb	(___almod@dividend+1)^0,f,c
  3582  0018E2  5015               	movf	(___almod@divisor+2)^0,w,c
  3583  0018E4  5A11               	subwfb	(___almod@dividend+2)^0,f,c
  3584  0018E6  5016               	movf	(___almod@divisor+3)^0,w,c
  3585  0018E8  5A12               	subwfb	(___almod@dividend+3)^0,f,c
  3586  0018EA                     l3081:
  3587  0018EA  90D8               	bcf	status,0,c
  3588  0018EC  3216               	rrcf	(___almod@divisor+3)^0,f,c
  3589  0018EE  3215               	rrcf	(___almod@divisor+2)^0,f,c
  3590  0018F0  3214               	rrcf	(___almod@divisor+1)^0,f,c
  3591  0018F2  3213               	rrcf	___almod@divisor^0,f,c
  3592  0018F4  2E17               	decfsz	___almod@counter^0,f,c
  3593  0018F6  EF5E  F00C         	goto	l3077
  3594  0018FA                     l3085:
  3595  0018FA  5018               	movf	___almod@sign^0,w,c
  3596  0018FC  B4D8               	btfsc	status,2,c
  3597  0018FE  EF83  F00C         	goto	u2691
  3598  001902  EF85  F00C         	goto	u2690
  3599  001906                     u2691:
  3600  001906  EF8D  F00C         	goto	l3089
  3601  00190A                     u2690:
  3602  00190A  1E12               	comf	(___almod@dividend+3)^0,f,c
  3603  00190C  1E11               	comf	(___almod@dividend+2)^0,f,c
  3604  00190E  1E10               	comf	(___almod@dividend+1)^0,f,c
  3605  001910  6C0F               	negf	___almod@dividend^0,c
  3606  001912  0E00               	movlw	0
  3607  001914  2210               	addwfc	(___almod@dividend+1)^0,f,c
  3608  001916  2211               	addwfc	(___almod@dividend+2)^0,f,c
  3609  001918  2212               	addwfc	(___almod@dividend+3)^0,f,c
  3610  00191A                     l3089:
  3611  00191A  C00F  F00F         	movff	___almod@dividend,?___almod
  3612  00191E  C010  F010         	movff	___almod@dividend+1,?___almod+1
  3613  001922  C011  F011         	movff	___almod@dividend+2,?___almod+2
  3614  001926  C012  F012         	movff	___almod@dividend+3,?___almod+3
  3615  00192A  0012               	return		;funcret
  3616  00192C                     __end_of___almod:
  3617                           	callstack 0
  3618                           
  3619 ;; *************** function ___aldiv *****************
  3620 ;; Defined at:
  3621 ;;		line 7 in file "E:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;  dividend        4    0[COMRAM] long 
  3624 ;;  divisor         4    4[COMRAM] long 
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;  quotient        4   10[COMRAM] long 
  3627 ;;  sign            1    9[COMRAM] unsigned char 
  3628 ;;  counter         1    8[COMRAM] unsigned char 
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  4    0[COMRAM] long 
  3631 ;; Registers used:
  3632 ;;		wreg, status,2, status,0
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3638 ;;      Params:         8       0       0       0       0       0       0
  3639 ;;      Locals:         6       0       0       0       0       0       0
  3640 ;;      Temps:          0       0       0       0       0       0       0
  3641 ;;      Totals:        14       0       0       0       0       0       0
  3642 ;;Total ram usage:       14 bytes
  3643 ;; Hardware stack levels used: 1
  3644 ;; This function calls:
  3645 ;;		Nothing
  3646 ;; This function is called by:
  3647 ;;		_pwmFrequency
  3648 ;;		_atualizarTempoEstadia
  3649 ;;		_atualizarHorarioSaida
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           	psect	text25
  3654  00153C                     __ptext25:
  3655                           	callstack 0
  3656  00153C                     ___aldiv:
  3657                           	callstack 27
  3658  00153C  0E00               	movlw	0
  3659  00153E  6E0A               	movwf	___aldiv@sign^0,c
  3660  001540  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  3661  001542  EFA7  F00A         	goto	u2220
  3662  001546  EFA5  F00A         	goto	u2221
  3663  00154A                     u2221:
  3664  00154A  EFB1  F00A         	goto	l2681
  3665  00154E                     u2220:
  3666  00154E  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  3667  001550  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  3668  001552  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  3669  001554  6C05               	negf	___aldiv@divisor^0,c
  3670  001556  0E00               	movlw	0
  3671  001558  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  3672  00155A  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  3673  00155C  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  3674  00155E  0E01               	movlw	1
  3675  001560  6E0A               	movwf	___aldiv@sign^0,c
  3676  001562                     l2681:
  3677  001562  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  3678  001564  EFB8  F00A         	goto	u2230
  3679  001568  EFB6  F00A         	goto	u2231
  3680  00156C                     u2231:
  3681  00156C  EFC2  F00A         	goto	l2687
  3682  001570                     u2230:
  3683  001570  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  3684  001572  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  3685  001574  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  3686  001576  6C01               	negf	___aldiv@dividend^0,c
  3687  001578  0E00               	movlw	0
  3688  00157A  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  3689  00157C  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  3690  00157E  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  3691  001580  0E01               	movlw	1
  3692  001582  1A0A               	xorwf	___aldiv@sign^0,f,c
  3693  001584                     l2687:
  3694  001584  0E00               	movlw	0
  3695  001586  6E0B               	movwf	___aldiv@quotient^0,c
  3696  001588  0E00               	movlw	0
  3697  00158A  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  3698  00158C  0E00               	movlw	0
  3699  00158E  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  3700  001590  0E00               	movlw	0
  3701  001592  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  3702  001594  5005               	movf	___aldiv@divisor^0,w,c
  3703  001596  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  3704  001598  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  3705  00159A  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  3706  00159C  B4D8               	btfsc	status,2,c
  3707  00159E  EFD3  F00A         	goto	u2241
  3708  0015A2  EFD5  F00A         	goto	u2240
  3709  0015A6                     u2241:
  3710  0015A6  EF0B  F00B         	goto	l2709
  3711  0015AA                     u2240:
  3712  0015AA  0E01               	movlw	1
  3713  0015AC  6E09               	movwf	___aldiv@counter^0,c
  3714  0015AE  EFDF  F00A         	goto	l2695
  3715  0015B2                     l2693:
  3716  0015B2  90D8               	bcf	status,0,c
  3717  0015B4  3605               	rlcf	___aldiv@divisor^0,f,c
  3718  0015B6  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  3719  0015B8  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  3720  0015BA  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  3721  0015BC  2A09               	incf	___aldiv@counter^0,f,c
  3722  0015BE                     l2695:
  3723  0015BE  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  3724  0015C0  EFE4  F00A         	goto	u2251
  3725  0015C4  EFE6  F00A         	goto	u2250
  3726  0015C8                     u2251:
  3727  0015C8  EFD9  F00A         	goto	l2693
  3728  0015CC                     u2250:
  3729  0015CC                     l2697:
  3730  0015CC  90D8               	bcf	status,0,c
  3731  0015CE  360B               	rlcf	___aldiv@quotient^0,f,c
  3732  0015D0  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  3733  0015D2  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  3734  0015D4  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  3735  0015D6  5005               	movf	___aldiv@divisor^0,w,c
  3736  0015D8  5C01               	subwf	___aldiv@dividend^0,w,c
  3737  0015DA  5006               	movf	(___aldiv@divisor+1)^0,w,c
  3738  0015DC  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  3739  0015DE  5007               	movf	(___aldiv@divisor+2)^0,w,c
  3740  0015E0  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  3741  0015E2  5008               	movf	(___aldiv@divisor+3)^0,w,c
  3742  0015E4  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  3743  0015E6  A0D8               	btfss	status,0,c
  3744  0015E8  EFF8  F00A         	goto	u2261
  3745  0015EC  EFFA  F00A         	goto	u2260
  3746  0015F0                     u2261:
  3747  0015F0  EF03  F00B         	goto	l2705
  3748  0015F4                     u2260:
  3749  0015F4  5005               	movf	___aldiv@divisor^0,w,c
  3750  0015F6  5E01               	subwf	___aldiv@dividend^0,f,c
  3751  0015F8  5006               	movf	(___aldiv@divisor+1)^0,w,c
  3752  0015FA  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  3753  0015FC  5007               	movf	(___aldiv@divisor+2)^0,w,c
  3754  0015FE  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  3755  001600  5008               	movf	(___aldiv@divisor+3)^0,w,c
  3756  001602  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  3757  001604  800B               	bsf	___aldiv@quotient^0,0,c
  3758  001606                     l2705:
  3759  001606  90D8               	bcf	status,0,c
  3760  001608  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  3761  00160A  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  3762  00160C  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  3763  00160E  3205               	rrcf	___aldiv@divisor^0,f,c
  3764  001610  2E09               	decfsz	___aldiv@counter^0,f,c
  3765  001612  EFE6  F00A         	goto	l2697
  3766  001616                     l2709:
  3767  001616  500A               	movf	___aldiv@sign^0,w,c
  3768  001618  B4D8               	btfsc	status,2,c
  3769  00161A  EF11  F00B         	goto	u2271
  3770  00161E  EF13  F00B         	goto	u2270
  3771  001622                     u2271:
  3772  001622  EF1B  F00B         	goto	l2713
  3773  001626                     u2270:
  3774  001626  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  3775  001628  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  3776  00162A  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  3777  00162C  6C0B               	negf	___aldiv@quotient^0,c
  3778  00162E  0E00               	movlw	0
  3779  001630  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  3780  001632  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  3781  001634  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  3782  001636                     l2713:
  3783  001636  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  3784  00163A  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  3785  00163E  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  3786  001642  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  3787  001646  0012               	return		;funcret
  3788  001648                     __end_of___aldiv:
  3789                           	callstack 0
  3790                           
  3791 ;; *************** function _atualizarHorarioEntrada *****************
  3792 ;; Defined at:
  3793 ;;		line 127 in file "main.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;		None
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;		None
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      void 
  3800 ;; Registers used:
  3801 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3807 ;;      Params:         0       0       0       0       0       0       0
  3808 ;;      Locals:         2       0       0       0       0       0       0
  3809 ;;      Temps:          0       0       0       0       0       0       0
  3810 ;;      Totals:         2       0       0       0       0       0       0
  3811 ;;Total ram usage:        2 bytes
  3812 ;; Hardware stack levels used: 1
  3813 ;; Hardware stack levels required when called: 6
  3814 ;; This function calls:
  3815 ;;		___awdiv
  3816 ;;		___awmod
  3817 ;;		_bcd2dec
  3818 ;;		_dsReadData
  3819 ;;		_lcdChar
  3820 ;;		_lcdCommand
  3821 ;;		_lcdString
  3822 ;; This function is called by:
  3823 ;;		_main
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text26
  3828  000F84                     __ptext26:
  3829                           	callstack 0
  3830  000F84                     _atualizarHorarioEntrada:
  3831                           	callstack 24
  3832  000F84                     
  3833                           ;main.c: 128:     lcdCommand(0x01);
  3834  000F84  0E01               	movlw	1
  3835  000F86  ECF4  F012         	call	_lcdCommand
  3836  000F8A                     
  3837                           ;main.c: 129:     lcdString("In:  ");
  3838  000F8A  0E4B               	movlw	low STR_4
  3839  000F8C  6E0F               	movwf	lcdString@msg^0,c
  3840  000F8E  0E06               	movlw	high STR_4
  3841  000F90  6E10               	movwf	(lcdString@msg+1)^0,c
  3842  000F92  EC99  F00F         	call	_lcdString	;wreg free
  3843  000F96                     
  3844                           ;main.c: 130:     lcdChar((((bcd2dec(dsReadData(2)& 0x5f)) / 10) % 10 + 2) + 48);
  3845  000F96  0E00               	movlw	0
  3846  000F98  6E0F               	movwf	(dsReadData@address+1)^0,c
  3847  000F9A  0E02               	movlw	2
  3848  000F9C  6E0E               	movwf	dsReadData@address^0,c
  3849  000F9E  EC15  F010         	call	_dsReadData	;wreg free
  3850  000FA2  0E5F               	movlw	95
  3851  000FA4  140E               	andwf	?_dsReadData^0,w,c
  3852  000FA6  6E21               	movwf	bcd2dec@value^0,c
  3853  000FA8  6A22               	clrf	(bcd2dec@value+1)^0,c
  3854  000FAA  EC9E  F010         	call	_bcd2dec	;wreg free
  3855  000FAE  C021  F02B         	movff	?_bcd2dec,_atualizarHorarioEntrada$1430
  3856  000FB2  C022  F02C         	movff	?_bcd2dec+1,_atualizarHorarioEntrada$1430+1
  3857  000FB6                     
  3858                           ;main.c: 130:     lcdChar((((bcd2dec(dsReadData(2)& 0x5f)) / 10) % 10 + 2) + 48);
  3859  000FB6  0E00               	movlw	0
  3860  000FB8  6E16               	movwf	(___awdiv@divisor+1)^0,c
  3861  000FBA  0E0A               	movlw	10
  3862  000FBC  6E15               	movwf	___awdiv@divisor^0,c
  3863  000FBE  C02B  F013         	movff	_atualizarHorarioEntrada$1430,___awdiv@dividend
  3864  000FC2  C02C  F014         	movff	_atualizarHorarioEntrada$1430+1,___awdiv@dividend+1
  3865  000FC6  EC96  F00C         	call	___awdiv	;wreg free
  3866  000FCA  C013  F025         	movff	?___awdiv,___awmod@dividend
  3867  000FCE  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  3868  000FD2  0E00               	movlw	0
  3869  000FD4  6E28               	movwf	(___awmod@divisor+1)^0,c
  3870  000FD6  0E0A               	movlw	10
  3871  000FD8  6E27               	movwf	___awmod@divisor^0,c
  3872  000FDA  EC52  F00D         	call	___awmod	;wreg free
  3873  000FDE  5025               	movf	?___awmod^0,w,c
  3874  000FE0  0F32               	addlw	50
  3875  000FE2  ECE5  F012         	call	_lcdChar
  3876  000FE6                     
  3877                           ;main.c: 131:     lcdChar(((bcd2dec(dsReadData(2)& 0x5f)) % 10) + 48);
  3878  000FE6  0E00               	movlw	0
  3879  000FE8  6E0F               	movwf	(dsReadData@address+1)^0,c
  3880  000FEA  0E02               	movlw	2
  3881  000FEC  6E0E               	movwf	dsReadData@address^0,c
  3882  000FEE  EC15  F010         	call	_dsReadData	;wreg free
  3883  000FF2  0E5F               	movlw	95
  3884  000FF4  140E               	andwf	?_dsReadData^0,w,c
  3885  000FF6  6E21               	movwf	bcd2dec@value^0,c
  3886  000FF8  6A22               	clrf	(bcd2dec@value+1)^0,c
  3887  000FFA  EC9E  F010         	call	_bcd2dec	;wreg free
  3888  000FFE  C021  F025         	movff	?_bcd2dec,___awmod@dividend
  3889  001002  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
  3890  001006  0E00               	movlw	0
  3891  001008  6E28               	movwf	(___awmod@divisor+1)^0,c
  3892  00100A  0E0A               	movlw	10
  3893  00100C  6E27               	movwf	___awmod@divisor^0,c
  3894  00100E  EC52  F00D         	call	___awmod	;wreg free
  3895  001012  5025               	movf	?___awmod^0,w,c
  3896  001014  0F30               	addlw	48
  3897  001016  ECE5  F012         	call	_lcdChar
  3898  00101A                     
  3899                           ;main.c: 132:     lcdChar(':');
  3900  00101A  0E3A               	movlw	58
  3901  00101C  ECE5  F012         	call	_lcdChar
  3902  001020                     
  3903                           ;main.c: 133:     lcdChar((((bcd2dec(dsReadData(1)& 0x7f)) / 10) % 10) + 48);
  3904  001020  0E00               	movlw	0
  3905  001022  6E0F               	movwf	(dsReadData@address+1)^0,c
  3906  001024  0E01               	movlw	1
  3907  001026  6E0E               	movwf	dsReadData@address^0,c
  3908  001028  EC15  F010         	call	_dsReadData	;wreg free
  3909  00102C  0E7F               	movlw	127
  3910  00102E  140E               	andwf	?_dsReadData^0,w,c
  3911  001030  6E21               	movwf	bcd2dec@value^0,c
  3912  001032  6A22               	clrf	(bcd2dec@value+1)^0,c
  3913  001034  EC9E  F010         	call	_bcd2dec	;wreg free
  3914  001038  C021  F02B         	movff	?_bcd2dec,_atualizarHorarioEntrada$1430
  3915  00103C  C022  F02C         	movff	?_bcd2dec+1,_atualizarHorarioEntrada$1430+1
  3916  001040                     
  3917                           ;main.c: 133:     lcdChar((((bcd2dec(dsReadData(1)& 0x7f)) / 10) % 10) + 48);
  3918  001040  0E00               	movlw	0
  3919  001042  6E16               	movwf	(___awdiv@divisor+1)^0,c
  3920  001044  0E0A               	movlw	10
  3921  001046  6E15               	movwf	___awdiv@divisor^0,c
  3922  001048  C02B  F013         	movff	_atualizarHorarioEntrada$1430,___awdiv@dividend
  3923  00104C  C02C  F014         	movff	_atualizarHorarioEntrada$1430+1,___awdiv@dividend+1
  3924  001050  EC96  F00C         	call	___awdiv	;wreg free
  3925  001054  C013  F025         	movff	?___awdiv,___awmod@dividend
  3926  001058  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  3927  00105C  0E00               	movlw	0
  3928  00105E  6E28               	movwf	(___awmod@divisor+1)^0,c
  3929  001060  0E0A               	movlw	10
  3930  001062  6E27               	movwf	___awmod@divisor^0,c
  3931  001064  EC52  F00D         	call	___awmod	;wreg free
  3932  001068  5025               	movf	?___awmod^0,w,c
  3933  00106A  0F30               	addlw	48
  3934  00106C  ECE5  F012         	call	_lcdChar
  3935  001070                     
  3936                           ;main.c: 134:     lcdChar(((bcd2dec(dsReadData(1)& 0x7f)) % 10) + 48);
  3937  001070  0E00               	movlw	0
  3938  001072  6E0F               	movwf	(dsReadData@address+1)^0,c
  3939  001074  0E01               	movlw	1
  3940  001076  6E0E               	movwf	dsReadData@address^0,c
  3941  001078  EC15  F010         	call	_dsReadData	;wreg free
  3942  00107C  0E7F               	movlw	127
  3943  00107E  140E               	andwf	?_dsReadData^0,w,c
  3944  001080  6E21               	movwf	bcd2dec@value^0,c
  3945  001082  6A22               	clrf	(bcd2dec@value+1)^0,c
  3946  001084  EC9E  F010         	call	_bcd2dec	;wreg free
  3947  001088  C021  F025         	movff	?_bcd2dec,___awmod@dividend
  3948  00108C  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
  3949  001090  0E00               	movlw	0
  3950  001092  6E28               	movwf	(___awmod@divisor+1)^0,c
  3951  001094  0E0A               	movlw	10
  3952  001096  6E27               	movwf	___awmod@divisor^0,c
  3953  001098  EC52  F00D         	call	___awmod	;wreg free
  3954  00109C  5025               	movf	?___awmod^0,w,c
  3955  00109E  0F30               	addlw	48
  3956  0010A0  ECE5  F012         	call	_lcdChar
  3957  0010A4                     
  3958                           ;main.c: 135:     lcdChar(':');
  3959  0010A4  0E3A               	movlw	58
  3960  0010A6  ECE5  F012         	call	_lcdChar
  3961  0010AA                     
  3962                           ;main.c: 136:     lcdChar((((bcd2dec(dsReadData(0)& 0x7f)) / 10) % 10) + 48);
  3963  0010AA  0E00               	movlw	0
  3964  0010AC  6E0F               	movwf	(dsReadData@address+1)^0,c
  3965  0010AE  0E00               	movlw	0
  3966  0010B0  6E0E               	movwf	dsReadData@address^0,c
  3967  0010B2  EC15  F010         	call	_dsReadData	;wreg free
  3968  0010B6  0E7F               	movlw	127
  3969  0010B8  140E               	andwf	?_dsReadData^0,w,c
  3970  0010BA  6E21               	movwf	bcd2dec@value^0,c
  3971  0010BC  6A22               	clrf	(bcd2dec@value+1)^0,c
  3972  0010BE  EC9E  F010         	call	_bcd2dec	;wreg free
  3973  0010C2  C021  F02B         	movff	?_bcd2dec,_atualizarHorarioEntrada$1430
  3974  0010C6  C022  F02C         	movff	?_bcd2dec+1,_atualizarHorarioEntrada$1430+1
  3975  0010CA                     
  3976                           ;main.c: 136:     lcdChar((((bcd2dec(dsReadData(0)& 0x7f)) / 10) % 10) + 48);
  3977  0010CA  0E00               	movlw	0
  3978  0010CC  6E16               	movwf	(___awdiv@divisor+1)^0,c
  3979  0010CE  0E0A               	movlw	10
  3980  0010D0  6E15               	movwf	___awdiv@divisor^0,c
  3981  0010D2  C02B  F013         	movff	_atualizarHorarioEntrada$1430,___awdiv@dividend
  3982  0010D6  C02C  F014         	movff	_atualizarHorarioEntrada$1430+1,___awdiv@dividend+1
  3983  0010DA  EC96  F00C         	call	___awdiv	;wreg free
  3984  0010DE  C013  F025         	movff	?___awdiv,___awmod@dividend
  3985  0010E2  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  3986  0010E6  0E00               	movlw	0
  3987  0010E8  6E28               	movwf	(___awmod@divisor+1)^0,c
  3988  0010EA  0E0A               	movlw	10
  3989  0010EC  6E27               	movwf	___awmod@divisor^0,c
  3990  0010EE  EC52  F00D         	call	___awmod	;wreg free
  3991  0010F2  5025               	movf	?___awmod^0,w,c
  3992  0010F4  0F30               	addlw	48
  3993  0010F6  ECE5  F012         	call	_lcdChar
  3994  0010FA                     
  3995                           ;main.c: 137:     lcdChar(((bcd2dec(dsReadData(0)& 0x7f)) % 10) + 48);
  3996  0010FA  0E00               	movlw	0
  3997  0010FC  6E0F               	movwf	(dsReadData@address+1)^0,c
  3998  0010FE  0E00               	movlw	0
  3999  001100  6E0E               	movwf	dsReadData@address^0,c
  4000  001102  EC15  F010         	call	_dsReadData	;wreg free
  4001  001106  0E7F               	movlw	127
  4002  001108  140E               	andwf	?_dsReadData^0,w,c
  4003  00110A  6E21               	movwf	bcd2dec@value^0,c
  4004  00110C  6A22               	clrf	(bcd2dec@value+1)^0,c
  4005  00110E  EC9E  F010         	call	_bcd2dec	;wreg free
  4006  001112  C021  F025         	movff	?_bcd2dec,___awmod@dividend
  4007  001116  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
  4008  00111A  0E00               	movlw	0
  4009  00111C  6E28               	movwf	(___awmod@divisor+1)^0,c
  4010  00111E  0E0A               	movlw	10
  4011  001120  6E27               	movwf	___awmod@divisor^0,c
  4012  001122  EC52  F00D         	call	___awmod	;wreg free
  4013  001126  5025               	movf	?___awmod^0,w,c
  4014  001128  0F30               	addlw	48
  4015  00112A  ECE5  F012         	call	_lcdChar
  4016  00112E  0012               	return		;funcret
  4017  001130                     __end_of_atualizarHorarioEntrada:
  4018                           	callstack 0
  4019                           
  4020 ;; *************** function _lcdString *****************
  4021 ;; Defined at:
  4022 ;;		line 57 in file "lcd.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  msg             2   14[COMRAM] PTR unsigned char 
  4025 ;;		 -> STR_7(5), STR_6(14), STR_5(6), STR_4(6), 
  4026 ;;		 -> STR_3(7), STR_2(16), STR_1(11), 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;  i               2   18[COMRAM] int 
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  1    wreg      void 
  4031 ;; Registers used:
  4032 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4038 ;;      Params:         2       0       0       0       0       0       0
  4039 ;;      Locals:         2       0       0       0       0       0       0
  4040 ;;      Temps:          2       0       0       0       0       0       0
  4041 ;;      Totals:         6       0       0       0       0       0       0
  4042 ;;Total ram usage:        6 bytes
  4043 ;; Hardware stack levels used: 1
  4044 ;; Hardware stack levels required when called: 5
  4045 ;; This function calls:
  4046 ;;		_lcdChar
  4047 ;; This function is called by:
  4048 ;;		_main
  4049 ;;		_mostrarMenuInicial
  4050 ;;		_atualizarHorarioEntrada
  4051 ;;		_atualizarHorarioSaida
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text27
  4056  001F32                     __ptext27:
  4057                           	callstack 0
  4058  001F32                     _lcdString:
  4059                           	callstack 24
  4060  001F32                     
  4061                           ;lcd.c: 58:  int i = 0;
  4062  001F32  0E00               	movlw	0
  4063  001F34  6E14               	movwf	(lcdString@i+1)^0,c
  4064  001F36  0E00               	movlw	0
  4065  001F38  6E13               	movwf	lcdString@i^0,c
  4066                           
  4067                           ;lcd.c: 59:  while (msg[i] != 0) {
  4068  001F3A  EFAF  F00F         	goto	l2953
  4069  001F3E                     l2949:
  4070                           
  4071                           ;lcd.c: 60:   lcdChar(msg[i]);
  4072  001F3E  5013               	movf	lcdString@i^0,w,c
  4073  001F40  240F               	addwf	lcdString@msg^0,w,c
  4074  001F42  6E11               	movwf	??_lcdString^0,c
  4075  001F44  5014               	movf	(lcdString@i+1)^0,w,c
  4076  001F46  2010               	addwfc	(lcdString@msg+1)^0,w,c
  4077  001F48  6E12               	movwf	(??_lcdString+1)^0,c
  4078  001F4A  C011  FFF6         	movff	??_lcdString,tblptrl
  4079  001F4E  C012  FFF7         	movff	??_lcdString+1,tblptrh
  4080  001F52                     	if	0	;tblptru may be non-zero
  4081  001F52                     	endif
  4082  001F52                     	if	0	;tblptru may be non-zero
  4083  001F52                     	endif
  4084  001F52  0008               	tblrd		*
  4085  001F54  50F5               	movf	tablat,w,c
  4086  001F56  ECE5  F012         	call	_lcdChar
  4087  001F5A                     
  4088                           ;lcd.c: 61:   i++;
  4089  001F5A  4A13               	infsnz	lcdString@i^0,f,c
  4090  001F5C  2A14               	incf	(lcdString@i+1)^0,f,c
  4091  001F5E                     l2953:
  4092                           
  4093                           ;lcd.c: 59:  while (msg[i] != 0) {
  4094  001F5E  5013               	movf	lcdString@i^0,w,c
  4095  001F60  240F               	addwf	lcdString@msg^0,w,c
  4096  001F62  6E11               	movwf	??_lcdString^0,c
  4097  001F64  5014               	movf	(lcdString@i+1)^0,w,c
  4098  001F66  2010               	addwfc	(lcdString@msg+1)^0,w,c
  4099  001F68  6E12               	movwf	(??_lcdString+1)^0,c
  4100  001F6A  C011  FFF6         	movff	??_lcdString,tblptrl
  4101  001F6E  C012  FFF7         	movff	??_lcdString+1,tblptrh
  4102  001F72                     	if	0	;tblptru may be non-zero
  4103  001F72                     	endif
  4104  001F72                     	if	0	;tblptru may be non-zero
  4105  001F72                     	endif
  4106  001F72  0008               	tblrd		*
  4107  001F74  50F5               	movf	tablat,w,c
  4108  001F76  0900               	iorlw	0
  4109  001F78  A4D8               	btfss	status,2,c
  4110  001F7A  EFC1  F00F         	goto	u2591
  4111  001F7E  EFC3  F00F         	goto	u2590
  4112  001F82                     u2591:
  4113  001F82  EF9F  F00F         	goto	l2949
  4114  001F86                     u2590:
  4115  001F86  0012               	return		;funcret
  4116  001F88                     __end_of_lcdString:
  4117                           	callstack 0
  4118                           
  4119 ;; *************** function _lcdChar *****************
  4120 ;; Defined at:
  4121 ;;		line 52 in file "lcd.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;  value           1    wreg     unsigned char 
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;  value           1   13[COMRAM] unsigned char 
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  1    wreg      void 
  4128 ;; Registers used:
  4129 ;;		wreg, status,2, status,0, cstack
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4135 ;;      Params:         0       0       0       0       0       0       0
  4136 ;;      Locals:         1       0       0       0       0       0       0
  4137 ;;      Temps:          0       0       0       0       0       0       0
  4138 ;;      Totals:         1       0       0       0       0       0       0
  4139 ;;Total ram usage:        1 bytes
  4140 ;; Hardware stack levels used: 1
  4141 ;; Hardware stack levels required when called: 4
  4142 ;; This function calls:
  4143 ;;		_delayMicro
  4144 ;;		_pushByte
  4145 ;; This function is called by:
  4146 ;;		_lcdString
  4147 ;;		_mostrarMenuInicial
  4148 ;;		_atualizarHorarioEntrada
  4149 ;;		_atualizarHorarioSaida
  4150 ;;		_lcdNumber
  4151 ;;		_myLCDNumber
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           	psect	text28
  4156  0025CA                     __ptext28:
  4157                           	callstack 0
  4158  0025CA                     _lcdChar:
  4159                           	callstack 24
  4160                           
  4161                           ;incstack = 0
  4162                           ;lcdChar@value stored from wreg
  4163  0025CA  6E0E               	movwf	lcdChar@value^0,c
  4164  0025CC                     
  4165                           ;lcd.c: 53:  pushByte(value, 1);
  4166  0025CC  0E00               	movlw	0
  4167  0025CE  6E0B               	movwf	(pushByte@rs+1)^0,c
  4168  0025D0  0E01               	movlw	1
  4169  0025D2  6E0A               	movwf	pushByte@rs^0,c
  4170  0025D4  500E               	movf	lcdChar@value^0,w,c
  4171  0025D6  ECE9  F00E         	call	_pushByte
  4172  0025DA                     
  4173                           ;lcd.c: 54:  delayMicro(80);
  4174  0025DA  0E00               	movlw	0
  4175  0025DC  6E02               	movwf	(delayMicro@a+1)^0,c
  4176  0025DE  0E50               	movlw	80
  4177  0025E0  6E01               	movwf	delayMicro@a^0,c
  4178  0025E2  EC31  F013         	call	_delayMicro	;wreg free
  4179  0025E6  0012               	return		;funcret
  4180  0025E8                     __end_of_lcdChar:
  4181                           	callstack 0
  4182                           
  4183 ;; *************** function _lcdCommand *****************
  4184 ;; Defined at:
  4185 ;;		line 40 in file "lcd.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;  value           1    wreg     unsigned char 
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;  value           1   13[COMRAM] unsigned char 
  4190 ;; Return value:  Size  Location     Type
  4191 ;;                  1    wreg      void 
  4192 ;; Registers used:
  4193 ;;		wreg, status,2, status,0, cstack
  4194 ;; Tracked objects:
  4195 ;;		On entry : 0/0
  4196 ;;		On exit  : 0/0
  4197 ;;		Unchanged: 0/0
  4198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4199 ;;      Params:         0       0       0       0       0       0       0
  4200 ;;      Locals:         1       0       0       0       0       0       0
  4201 ;;      Temps:          0       0       0       0       0       0       0
  4202 ;;      Totals:         1       0       0       0       0       0       0
  4203 ;;Total ram usage:        1 bytes
  4204 ;; Hardware stack levels used: 1
  4205 ;; Hardware stack levels required when called: 4
  4206 ;; This function calls:
  4207 ;;		_delayMili
  4208 ;;		_pushByte
  4209 ;; This function is called by:
  4210 ;;		_lcdInit
  4211 ;;		_main
  4212 ;;		_mostrarMenuInicial
  4213 ;;		_atualizarHorarioEntrada
  4214 ;;		_atualizarHorarioSaida
  4215 ;;		_lcdPosition
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text29
  4220  0025E8                     __ptext29:
  4221                           	callstack 0
  4222  0025E8                     _lcdCommand:
  4223                           	callstack 25
  4224                           
  4225                           ;incstack = 0
  4226                           ;lcdCommand@value stored from wreg
  4227  0025E8  6E0E               	movwf	lcdCommand@value^0,c
  4228  0025EA                     
  4229                           ;lcd.c: 41:  pushByte(value, 0);
  4230  0025EA  0E00               	movlw	0
  4231  0025EC  6E0B               	movwf	(pushByte@rs+1)^0,c
  4232  0025EE  0E00               	movlw	0
  4233  0025F0  6E0A               	movwf	pushByte@rs^0,c
  4234  0025F2  500E               	movf	lcdCommand@value^0,w,c
  4235  0025F4  ECE9  F00E         	call	_pushByte
  4236                           
  4237                           ;lcd.c: 42:  delayMili(2);
  4238  0025F8  0E00               	movlw	0
  4239  0025FA  6E02               	movwf	(delayMili@a+1)^0,c
  4240  0025FC  0E02               	movlw	2
  4241  0025FE  6E01               	movwf	delayMili@a^0,c
  4242  002600  ECBD  F011         	call	_delayMili	;wreg free
  4243  002604  0012               	return		;funcret
  4244  002606                     __end_of_lcdCommand:
  4245                           	callstack 0
  4246                           
  4247 ;; *************** function _pushByte *****************
  4248 ;; Defined at:
  4249 ;;		line 31 in file "lcd.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;  value           1    wreg     unsigned char 
  4252 ;;  rs              2    9[COMRAM] int 
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;  value           1   12[COMRAM] unsigned char 
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  1    wreg      void 
  4257 ;; Registers used:
  4258 ;;		wreg, status,2, status,0, cstack
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4264 ;;      Params:         2       0       0       0       0       0       0
  4265 ;;      Locals:         1       0       0       0       0       0       0
  4266 ;;      Temps:          1       0       0       0       0       0       0
  4267 ;;      Totals:         4       0       0       0       0       0       0
  4268 ;;Total ram usage:        4 bytes
  4269 ;; Hardware stack levels used: 1
  4270 ;; Hardware stack levels required when called: 3
  4271 ;; This function calls:
  4272 ;;		_digitalWrite
  4273 ;;		_pulseEnablePin
  4274 ;;		_soWrite
  4275 ;; This function is called by:
  4276 ;;		_lcdCommand
  4277 ;;		_lcdChar
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           	psect	text30
  4282  001DD2                     __ptext30:
  4283                           	callstack 0
  4284  001DD2                     _pushByte:
  4285                           	callstack 24
  4286                           
  4287                           ;incstack = 0
  4288                           ;pushByte@value stored from wreg
  4289  001DD2  6E0D               	movwf	pushByte@value^0,c
  4290  001DD4                     
  4291                           ;lcd.c: 32:  soWrite(value >> 4);
  4292  001DD4  C00D  F00C         	movff	pushByte@value,??_pushByte
  4293  001DD8  3A0C               	swapf	??_pushByte^0,f,c
  4294  001DDA  0E0F               	movlw	15
  4295  001DDC  160C               	andwf	??_pushByte^0,f,c
  4296  001DDE  500C               	movf	??_pushByte^0,w,c
  4297  001DE0  6E07               	movwf	soWrite@value^0,c
  4298  001DE2  6A08               	clrf	(soWrite@value+1)^0,c
  4299  001DE4  ECEE  F00F         	call	_soWrite	;wreg free
  4300                           
  4301                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  4302  001DE8  0E00               	movlw	0
  4303  001DEA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4304  001DEC  0E1D               	movlw	29
  4305  001DEE  6E01               	movwf	digitalWrite@pin^0,c
  4306  001DF0  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  4307  001DF4  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  4308  001DF8  ECB9  F005         	call	_digitalWrite	;wreg free
  4309                           
  4310                           ;lcd.c: 34:  pulseEnablePin();
  4311  001DFC  EC7D  F010         	call	_pulseEnablePin	;wreg free
  4312                           
  4313                           ;lcd.c: 36:  soWrite(value & 0x0F);
  4314  001E00  C00D  F00C         	movff	pushByte@value,??_pushByte
  4315  001E04  0E0F               	movlw	15
  4316  001E06  160C               	andwf	??_pushByte^0,f,c
  4317  001E08  500C               	movf	??_pushByte^0,w,c
  4318  001E0A  6E07               	movwf	soWrite@value^0,c
  4319  001E0C  6A08               	clrf	(soWrite@value+1)^0,c
  4320  001E0E  ECEE  F00F         	call	_soWrite	;wreg free
  4321                           
  4322                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  4323  001E12  0E00               	movlw	0
  4324  001E14  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4325  001E16  0E1D               	movlw	29
  4326  001E18  6E01               	movwf	digitalWrite@pin^0,c
  4327  001E1A  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  4328  001E1E  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  4329  001E22  ECB9  F005         	call	_digitalWrite	;wreg free
  4330                           
  4331                           ;lcd.c: 38:  pulseEnablePin();
  4332  001E26  EC7D  F010         	call	_pulseEnablePin	;wreg free
  4333  001E2A  0012               	return		;funcret
  4334  001E2C                     __end_of_pushByte:
  4335                           	callstack 0
  4336                           
  4337 ;; *************** function _soWrite *****************
  4338 ;; Defined at:
  4339 ;;		line 18 in file "so.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  value           2    6[COMRAM] int 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;  i               1    8[COMRAM] unsigned char 
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  1    wreg      void 
  4346 ;; Registers used:
  4347 ;;		wreg, status,2, status,0, cstack
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4353 ;;      Params:         2       0       0       0       0       0       0
  4354 ;;      Locals:         1       0       0       0       0       0       0
  4355 ;;      Temps:          0       0       0       0       0       0       0
  4356 ;;      Totals:         3       0       0       0       0       0       0
  4357 ;;Total ram usage:        3 bytes
  4358 ;; Hardware stack levels used: 1
  4359 ;; Hardware stack levels required when called: 2
  4360 ;; This function calls:
  4361 ;;		_PulseClockData
  4362 ;;		_PulseEnClock
  4363 ;;		_digitalWrite
  4364 ;; This function is called by:
  4365 ;;		_kpDebounce
  4366 ;;		_pushNibble
  4367 ;;		_pushByte
  4368 ;;		_ssdUpdate
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text31
  4373  001FDC                     __ptext31:
  4374                           	callstack 0
  4375  001FDC                     _soWrite:
  4376                           	callstack 26
  4377  001FDC                     
  4378                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  4379  001FDC  0E00               	movlw	0
  4380  001FDE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4381  001FE0  0E08               	movlw	8
  4382  001FE2  6E01               	movwf	digitalWrite@pin^0,c
  4383  001FE4  0E00               	movlw	0
  4384  001FE6  6E04               	movwf	(digitalWrite@value+1)^0,c
  4385  001FE8  0E00               	movlw	0
  4386  001FEA  6E03               	movwf	digitalWrite@value^0,c
  4387  001FEC  ECB9  F005         	call	_digitalWrite	;wreg free
  4388  001FF0                     
  4389                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  4390  001FF0  0E00               	movlw	0
  4391  001FF2  6E09               	movwf	soWrite@i^0,c
  4392  001FF4                     l2579:
  4393                           
  4394                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  4395  001FF4  0E00               	movlw	0
  4396  001FF6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4397  001FF8  0E1E               	movlw	30
  4398  001FFA  6E01               	movwf	digitalWrite@pin^0,c
  4399  001FFC  0E80               	movlw	128
  4400  001FFE  1407               	andwf	soWrite@value^0,w,c
  4401  002000  6E03               	movwf	digitalWrite@value^0,c
  4402  002002  6A04               	clrf	(digitalWrite@value+1)^0,c
  4403  002004  ECB9  F005         	call	_digitalWrite	;wreg free
  4404                           
  4405                           ;so.c: 23:   PulseClockData();
  4406  002008  EC5C  F012         	call	_PulseClockData	;wreg free
  4407  00200C                     
  4408                           ;so.c: 24:   value <<= 1;
  4409  00200C  90D8               	bcf	status,0,c
  4410  00200E  3607               	rlcf	soWrite@value^0,f,c
  4411  002010  3608               	rlcf	(soWrite@value+1)^0,f,c
  4412  002012                     
  4413                           ;so.c: 25:  }
  4414  002012  2A09               	incf	soWrite@i^0,f,c
  4415  002014  0E07               	movlw	7
  4416  002016  6409               	cpfsgt	soWrite@i^0,c
  4417  002018  EF10  F010         	goto	u2131
  4418  00201C  EF12  F010         	goto	u2130
  4419  002020                     u2131:
  4420  002020  EFFA  F00F         	goto	l2579
  4421  002024                     u2130:
  4422  002024                     
  4423                           ;so.c: 26:  PulseEnClock();
  4424  002024  EC47  F012         	call	_PulseEnClock	;wreg free
  4425  002028  0012               	return		;funcret
  4426  00202A                     __end_of_soWrite:
  4427                           	callstack 0
  4428                           
  4429 ;; *************** function _PulseEnClock *****************
  4430 ;; Defined at:
  4431 ;;		line 9 in file "so.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;		None
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;		None
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      void 
  4438 ;; Registers used:
  4439 ;;		wreg, status,2, status,0, cstack
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4445 ;;      Params:         0       0       0       0       0       0       0
  4446 ;;      Locals:         0       0       0       0       0       0       0
  4447 ;;      Temps:          0       0       0       0       0       0       0
  4448 ;;      Totals:         0       0       0       0       0       0       0
  4449 ;;Total ram usage:        0 bytes
  4450 ;; Hardware stack levels used: 1
  4451 ;; Hardware stack levels required when called: 1
  4452 ;; This function calls:
  4453 ;;		_digitalWrite
  4454 ;; This function is called by:
  4455 ;;		_soWrite
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           	psect	text32
  4460  00248E                     __ptext32:
  4461                           	callstack 0
  4462  00248E                     _PulseEnClock:
  4463                           	callstack 26
  4464  00248E                     
  4465                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  4466  00248E  0E00               	movlw	0
  4467  002490  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4468  002492  0E1F               	movlw	31
  4469  002494  6E01               	movwf	digitalWrite@pin^0,c
  4470  002496  0E00               	movlw	0
  4471  002498  6E04               	movwf	(digitalWrite@value+1)^0,c
  4472  00249A  0E01               	movlw	1
  4473  00249C  6E03               	movwf	digitalWrite@value^0,c
  4474  00249E  ECB9  F005         	call	_digitalWrite	;wreg free
  4475                           
  4476                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  4477  0024A2  0E00               	movlw	0
  4478  0024A4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4479  0024A6  0E1F               	movlw	31
  4480  0024A8  6E01               	movwf	digitalWrite@pin^0,c
  4481  0024AA  0E00               	movlw	0
  4482  0024AC  6E04               	movwf	(digitalWrite@value+1)^0,c
  4483  0024AE  0E00               	movlw	0
  4484  0024B0  6E03               	movwf	digitalWrite@value^0,c
  4485  0024B2  ECB9  F005         	call	_digitalWrite	;wreg free
  4486  0024B6  0012               	return		;funcret
  4487  0024B8                     __end_of_PulseEnClock:
  4488                           	callstack 0
  4489                           
  4490 ;; *************** function _PulseClockData *****************
  4491 ;; Defined at:
  4492 ;;		line 14 in file "so.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;		None
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;		None
  4497 ;; Return value:  Size  Location     Type
  4498 ;;                  1    wreg      void 
  4499 ;; Registers used:
  4500 ;;		wreg, status,2, status,0, cstack
  4501 ;; Tracked objects:
  4502 ;;		On entry : 0/0
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4506 ;;      Params:         0       0       0       0       0       0       0
  4507 ;;      Locals:         0       0       0       0       0       0       0
  4508 ;;      Temps:          0       0       0       0       0       0       0
  4509 ;;      Totals:         0       0       0       0       0       0       0
  4510 ;;Total ram usage:        0 bytes
  4511 ;; Hardware stack levels used: 1
  4512 ;; Hardware stack levels required when called: 1
  4513 ;; This function calls:
  4514 ;;		_digitalWrite
  4515 ;; This function is called by:
  4516 ;;		_soWrite
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           	psect	text33
  4521  0024B8                     __ptext33:
  4522                           	callstack 0
  4523  0024B8                     _PulseClockData:
  4524                           	callstack 26
  4525  0024B8                     
  4526                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  4527  0024B8  0E00               	movlw	0
  4528  0024BA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4529  0024BC  0E08               	movlw	8
  4530  0024BE  6E01               	movwf	digitalWrite@pin^0,c
  4531  0024C0  0E00               	movlw	0
  4532  0024C2  6E04               	movwf	(digitalWrite@value+1)^0,c
  4533  0024C4  0E01               	movlw	1
  4534  0024C6  6E03               	movwf	digitalWrite@value^0,c
  4535  0024C8  ECB9  F005         	call	_digitalWrite	;wreg free
  4536                           
  4537                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  4538  0024CC  0E00               	movlw	0
  4539  0024CE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4540  0024D0  0E08               	movlw	8
  4541  0024D2  6E01               	movwf	digitalWrite@pin^0,c
  4542  0024D4  0E00               	movlw	0
  4543  0024D6  6E04               	movwf	(digitalWrite@value+1)^0,c
  4544  0024D8  0E00               	movlw	0
  4545  0024DA  6E03               	movwf	digitalWrite@value^0,c
  4546  0024DC  ECB9  F005         	call	_digitalWrite	;wreg free
  4547  0024E0  0012               	return		;funcret
  4548  0024E2                     __end_of_PulseClockData:
  4549                           	callstack 0
  4550                           
  4551 ;; *************** function _pulseEnablePin *****************
  4552 ;; Defined at:
  4553 ;;		line 18 in file "lcd.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;		None
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;		None
  4558 ;; Return value:  Size  Location     Type
  4559 ;;                  1    wreg      void 
  4560 ;; Registers used:
  4561 ;;		wreg, status,2, status,0, cstack
  4562 ;; Tracked objects:
  4563 ;;		On entry : 0/0
  4564 ;;		On exit  : 0/0
  4565 ;;		Unchanged: 0/0
  4566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4567 ;;      Params:         0       0       0       0       0       0       0
  4568 ;;      Locals:         0       0       0       0       0       0       0
  4569 ;;      Temps:          0       0       0       0       0       0       0
  4570 ;;      Totals:         0       0       0       0       0       0       0
  4571 ;;Total ram usage:        0 bytes
  4572 ;; Hardware stack levels used: 1
  4573 ;; Hardware stack levels required when called: 1
  4574 ;; This function calls:
  4575 ;;		_delayMicro
  4576 ;;		_digitalWrite
  4577 ;; This function is called by:
  4578 ;;		_pushNibble
  4579 ;;		_pushByte
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           	psect	text34
  4584  0020FA                     __ptext34:
  4585                           	callstack 0
  4586  0020FA                     _pulseEnablePin:
  4587                           	callstack 25
  4588  0020FA                     
  4589                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  4590  0020FA  0E00               	movlw	0
  4591  0020FC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4592  0020FE  0E1C               	movlw	28
  4593  002100  6E01               	movwf	digitalWrite@pin^0,c
  4594  002102  0E00               	movlw	0
  4595  002104  6E04               	movwf	(digitalWrite@value+1)^0,c
  4596  002106  0E01               	movlw	1
  4597  002108  6E03               	movwf	digitalWrite@value^0,c
  4598  00210A  ECB9  F005         	call	_digitalWrite	;wreg free
  4599  00210E                     
  4600                           ;lcd.c: 20:  delayMicro(5);
  4601  00210E  0E00               	movlw	0
  4602  002110  6E02               	movwf	(delayMicro@a+1)^0,c
  4603  002112  0E05               	movlw	5
  4604  002114  6E01               	movwf	delayMicro@a^0,c
  4605  002116  EC31  F013         	call	_delayMicro	;wreg free
  4606  00211A                     
  4607                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  4608  00211A  0E00               	movlw	0
  4609  00211C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4610  00211E  0E1C               	movlw	28
  4611  002120  6E01               	movwf	digitalWrite@pin^0,c
  4612  002122  0E00               	movlw	0
  4613  002124  6E04               	movwf	(digitalWrite@value+1)^0,c
  4614  002126  0E00               	movlw	0
  4615  002128  6E03               	movwf	digitalWrite@value^0,c
  4616  00212A  ECB9  F005         	call	_digitalWrite	;wreg free
  4617                           
  4618                           ;lcd.c: 22:  delayMicro(5);
  4619  00212E  0E00               	movlw	0
  4620  002130  6E02               	movwf	(delayMicro@a+1)^0,c
  4621  002132  0E05               	movlw	5
  4622  002134  6E01               	movwf	delayMicro@a^0,c
  4623  002136  EC31  F013         	call	_delayMicro	;wreg free
  4624  00213A  0012               	return		;funcret
  4625  00213C                     __end_of_pulseEnablePin:
  4626                           	callstack 0
  4627                           
  4628 ;; *************** function _delayMicro *****************
  4629 ;; Defined at:
  4630 ;;		line 5 in file "lcd.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;  a               2    0[COMRAM] int 
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;  i               2    0        volatile int 
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  1    wreg      void 
  4637 ;; Registers used:
  4638 ;;		None
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4644 ;;      Params:         2       0       0       0       0       0       0
  4645 ;;      Locals:         0       0       0       0       0       0       0
  4646 ;;      Temps:          0       0       0       0       0       0       0
  4647 ;;      Totals:         2       0       0       0       0       0       0
  4648 ;;Total ram usage:        2 bytes
  4649 ;; Hardware stack levels used: 1
  4650 ;; This function calls:
  4651 ;;		Nothing
  4652 ;; This function is called by:
  4653 ;;		_pulseEnablePin
  4654 ;;		_lcdChar
  4655 ;;		_lcdInit
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text35
  4660  002662                     __ptext35:
  4661                           	callstack 0
  4662  002662                     _delayMicro:
  4663                           	callstack 25
  4664  002662  0012               	return		;funcret
  4665  002664                     __end_of_delayMicro:
  4666                           	callstack 0
  4667                           
  4668 ;; *************** function _delayMili *****************
  4669 ;; Defined at:
  4670 ;;		line 10 in file "lcd.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;  a               2    0[COMRAM] int 
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;  i               2    3[COMRAM] volatile int 
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  1    wreg      void 
  4677 ;; Registers used:
  4678 ;;		wreg, status,2, status,0
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/0
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4684 ;;      Params:         2       0       0       0       0       0       0
  4685 ;;      Locals:         2       0       0       0       0       0       0
  4686 ;;      Temps:          1       0       0       0       0       0       0
  4687 ;;      Totals:         5       0       0       0       0       0       0
  4688 ;;Total ram usage:        5 bytes
  4689 ;; Hardware stack levels used: 1
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		_lcdCommand
  4694 ;;		_lcdInit
  4695 ;; This function uses a non-reentrant model
  4696 ;;
  4697                           
  4698                           	psect	text36
  4699  00237A                     __ptext36:
  4700                           	callstack 0
  4701  00237A                     _delayMili:
  4702                           	callstack 28
  4703  00237A                     
  4704                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  4705  00237A  0E00               	movlw	0
  4706  00237C  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  4707  00237E  0E00               	movlw	0
  4708  002380  6E04               	movwf	delayMili@i^0,c	;volatile
  4709  002382  EFC5  F011         	goto	l2669
  4710  002386                     l2667:
  4711                           
  4712                           ;lcd.c: 15:  }
  4713  002386  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  4714  002388  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  4715  00238A                     l2669:
  4716  00238A  5001               	movf	delayMili@a^0,w,c
  4717  00238C  5C04               	subwf	delayMili@i^0,w,c	;volatile
  4718  00238E  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  4719  002390  0A80               	xorlw	128
  4720  002392  6E03               	movwf	??_delayMili^0,c
  4721  002394  5002               	movf	(delayMili@a+1)^0,w,c
  4722  002396  0A80               	xorlw	128
  4723  002398  5803               	subwfb	??_delayMili^0,w,c
  4724  00239A  A0D8               	btfss	status,0,c
  4725  00239C  EFD2  F011         	goto	u2211
  4726  0023A0  EFD4  F011         	goto	u2210
  4727  0023A4                     u2211:
  4728  0023A4  EFC3  F011         	goto	l2667
  4729  0023A8                     u2210:
  4730  0023A8  0012               	return		;funcret
  4731  0023AA                     __end_of_delayMili:
  4732                           	callstack 0
  4733                           
  4734 ;; *************** function _dsReadData *****************
  4735 ;; Defined at:
  4736 ;;		line 29 in file "ds1307.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;  address         2   13[COMRAM] int 
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;  result          2   16[COMRAM] int 
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  2   13[COMRAM] int 
  4743 ;; Registers used:
  4744 ;;		wreg, status,2, status,0, cstack
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4750 ;;      Params:         2       0       0       0       0       0       0
  4751 ;;      Locals:         2       0       0       0       0       0       0
  4752 ;;      Temps:          1       0       0       0       0       0       0
  4753 ;;      Totals:         5       0       0       0       0       0       0
  4754 ;;Total ram usage:        5 bytes
  4755 ;; Hardware stack levels used: 1
  4756 ;; Hardware stack levels required when called: 4
  4757 ;; This function calls:
  4758 ;;		_i2cReadByte
  4759 ;;		_i2cWriteByte
  4760 ;; This function is called by:
  4761 ;;		_mostrarMenuInicial
  4762 ;;		_atualizarHorarioEntrada
  4763 ;;		_atualizarHorarioSaida
  4764 ;;		_dsStartClock
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           	psect	text37
  4769  00202A                     __ptext37:
  4770                           	callstack 0
  4771  00202A                     _dsReadData:
  4772                           	callstack 25
  4773  00202A                     
  4774                           ;ds1307.c: 30:  int result;;ds1307.c: 31:  i2cWriteByte(1,0,(0x68<<1) | 0);
  4775  00202A  0E00               	movlw	0
  4776  00202C  6E08               	movwf	i2cWriteByte@send_stop^0,c
  4777  00202E  0ED0               	movlw	208
  4778  002030  6E09               	movwf	i2cWriteByte@byte^0,c
  4779  002032  0E01               	movlw	1
  4780  002034  ECB9  F00E         	call	_i2cWriteByte
  4781                           
  4782                           ;ds1307.c: 32:  i2cWriteByte(0,0,address);
  4783  002038  0E00               	movlw	0
  4784  00203A  6E08               	movwf	i2cWriteByte@send_stop^0,c
  4785  00203C  C00E  F009         	movff	dsReadData@address,i2cWriteByte@byte
  4786  002040  0E00               	movlw	0
  4787  002042  ECB9  F00E         	call	_i2cWriteByte
  4788                           
  4789                           ;ds1307.c: 33:  i2cWriteByte(1,0, (0x68<<1) | 1);
  4790  002046  0E00               	movlw	0
  4791  002048  6E08               	movwf	i2cWriteByte@send_stop^0,c
  4792  00204A  0ED1               	movlw	209
  4793  00204C  6E09               	movwf	i2cWriteByte@byte^0,c
  4794  00204E  0E01               	movlw	1
  4795  002050  ECB9  F00E         	call	_i2cWriteByte
  4796                           
  4797                           ;ds1307.c: 34:  result = i2cReadByte(1,1 );
  4798  002054  0E01               	movlw	1
  4799  002056  6E08               	movwf	i2cReadByte@send_stop^0,c
  4800  002058  0E01               	movlw	1
  4801  00205A  ECC4  F00F         	call	_i2cReadByte
  4802  00205E  6E10               	movwf	??_dsReadData^0,c
  4803  002060  5010               	movf	??_dsReadData^0,w,c
  4804  002062  6E11               	movwf	dsReadData@result^0,c
  4805  002064  6A12               	clrf	(dsReadData@result+1)^0,c
  4806  002066                     
  4807                           ;ds1307.c: 35:  return result;
  4808  002066  C011  F00E         	movff	dsReadData@result,?_dsReadData
  4809  00206A  C012  F00F         	movff	dsReadData@result+1,?_dsReadData+1
  4810  00206E  0012               	return		;funcret
  4811  002070                     __end_of_dsReadData:
  4812                           	callstack 0
  4813                           
  4814 ;; *************** function _i2cWriteByte *****************
  4815 ;; Defined at:
  4816 ;;		line 113 in file "i2c.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;  send_start      1    wreg     unsigned char 
  4819 ;;  send_stop       1    7[COMRAM] unsigned char 
  4820 ;;  byte            1    8[COMRAM] unsigned char 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;  send_start      1    9[COMRAM] unsigned char 
  4823 ;;  bit             1   10[COMRAM] unsigned char 
  4824 ;;  nack            1    0        unsigned char 
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  1    wreg      unsigned char 
  4827 ;; Registers used:
  4828 ;;		wreg, status,2, status,0, cstack
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4834 ;;      Params:         2       0       0       0       0       0       0
  4835 ;;      Locals:         2       0       0       0       0       0       0
  4836 ;;      Temps:          0       0       0       0       0       0       0
  4837 ;;      Totals:         4       0       0       0       0       0       0
  4838 ;;Total ram usage:        4 bytes
  4839 ;; Hardware stack levels used: 1
  4840 ;; Hardware stack levels required when called: 3
  4841 ;; This function calls:
  4842 ;;		_i2c_read_bit
  4843 ;;		_i2c_start
  4844 ;;		_i2c_stop
  4845 ;;		_i2c_write_bit
  4846 ;; This function is called by:
  4847 ;;		_dsReadData
  4848 ;;		_dsWriteData
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           	psect	text38
  4853  001D72                     __ptext38:
  4854                           	callstack 0
  4855  001D72                     _i2cWriteByte:
  4856                           	callstack 25
  4857                           
  4858                           ;incstack = 0
  4859                           ;i2cWriteByte@send_start stored from wreg
  4860  001D72  6E0A               	movwf	i2cWriteByte@send_start^0,c
  4861  001D74                     
  4862                           ;i2c.c: 114:  unsigned char bit;;i2c.c: 115:  unsigned char nack;;i2c.c: 116:  if (send_
      +                          start) {
  4863  001D74  500A               	movf	i2cWriteByte@send_start^0,w,c
  4864  001D76  B4D8               	btfsc	status,2,c
  4865  001D78  EFC0  F00E         	goto	u2281
  4866  001D7C  EFC2  F00E         	goto	u2280
  4867  001D80                     u2281:
  4868  001D80  EFC4  F00E         	goto	l2721
  4869  001D84                     u2280:
  4870  001D84                     
  4871                           ;i2c.c: 117:   i2c_start();
  4872  001D84  EC38  F010         	call	_i2c_start	;wreg free
  4873  001D88                     l2721:
  4874                           
  4875                           ;i2c.c: 119:  for (bit = 0; bit < 8; bit++) {
  4876  001D88  0E00               	movlw	0
  4877  001D8A  6E0B               	movwf	i2cWriteByte@bit^0,c
  4878  001D8C                     l2727:
  4879                           
  4880                           ;i2c.c: 120:   i2c_write_bit((byte & 0x80) != 0);
  4881  001D8C  BE09               	btfsc	i2cWriteByte@byte^0,7,c
  4882  001D8E  EFCB  F00E         	goto	u2291
  4883  001D92  EFCE  F00E         	goto	u2290
  4884  001D96                     u2291:
  4885  001D96  0E01               	movlw	1
  4886  001D98  EFCF  F00E         	goto	u2300
  4887  001D9C                     u2290:
  4888  001D9C  0E00               	movlw	0
  4889  001D9E                     u2300:
  4890  001D9E  EC42  F00F         	call	_i2c_write_bit
  4891  001DA2                     
  4892                           ;i2c.c: 121:   byte <<= 1;
  4893  001DA2  90D8               	bcf	status,0,c
  4894  001DA4  3609               	rlcf	i2cWriteByte@byte^0,f,c
  4895  001DA6                     
  4896                           ;i2c.c: 122:  }
  4897  001DA6  2A0B               	incf	i2cWriteByte@bit^0,f,c
  4898  001DA8  0E07               	movlw	7
  4899  001DAA  640B               	cpfsgt	i2cWriteByte@bit^0,c
  4900  001DAC  EFDA  F00E         	goto	u2311
  4901  001DB0  EFDC  F00E         	goto	u2310
  4902  001DB4                     u2311:
  4903  001DB4  EFC6  F00E         	goto	l2727
  4904  001DB8                     u2310:
  4905  001DB8  ECA4  F011         	call	_i2c_read_bit	;wreg free
  4906  001DBC                     
  4907                           ;i2c.c: 124:  if (send_stop) {
  4908  001DBC  5008               	movf	i2cWriteByte@send_stop^0,w,c
  4909  001DBE  B4D8               	btfsc	status,2,c
  4910  001DC0  EFE4  F00E         	goto	u2321
  4911  001DC4  EFE6  F00E         	goto	u2320
  4912  001DC8                     u2321:
  4913  001DC8  EFE8  F00E         	goto	l125
  4914  001DCC                     u2320:
  4915  001DCC                     
  4916                           ;i2c.c: 125:   i2c_stop();
  4917  001DCC  ECEC  F011         	call	_i2c_stop	;wreg free
  4918  001DD0                     l125:
  4919  001DD0  0012               	return		;funcret
  4920  001DD2                     __end_of_i2cWriteByte:
  4921                           	callstack 0
  4922                           
  4923 ;; *************** function _i2c_start *****************
  4924 ;; Defined at:
  4925 ;;		line 52 in file "i2c.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;		None
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;		None
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  1    wreg      void 
  4932 ;; Registers used:
  4933 ;;		wreg, status,2, status,0, cstack
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4939 ;;      Params:         0       0       0       0       0       0       0
  4940 ;;      Locals:         0       0       0       0       0       0       0
  4941 ;;      Temps:          0       0       0       0       0       0       0
  4942 ;;      Totals:         0       0       0       0       0       0       0
  4943 ;;Total ram usage:        0 bytes
  4944 ;; Hardware stack levels used: 1
  4945 ;; Hardware stack levels required when called: 2
  4946 ;; This function calls:
  4947 ;;		_I2C_delay
  4948 ;;		_clear_SCL
  4949 ;;		_clear_SDA
  4950 ;;		_read_SCL
  4951 ;;		_read_SDA
  4952 ;; This function is called by:
  4953 ;;		_i2cWriteByte
  4954 ;; This function uses a non-reentrant model
  4955 ;;
  4956                           
  4957                           	psect	text39
  4958  002070                     __ptext39:
  4959                           	callstack 0
  4960  002070                     _i2c_start:
  4961                           	callstack 25
  4962  002070                     
  4963                           ;i2c.c: 54:  if (started) {
  4964  002070  503F               	movf	_started^0,w,c
  4965  002072  B4D8               	btfsc	status,2,c
  4966  002074  EF3E  F010         	goto	u2141
  4967  002078  EF40  F010         	goto	u2140
  4968  00207C                     u2141:
  4969  00207C  EF50  F010         	goto	l2605
  4970  002080                     u2140:
  4971  002080                     
  4972                           ;i2c.c: 55:   read_SDA();
  4973  002080  EC38  F011         	call	_read_SDA	;wreg free
  4974  002084                     
  4975                           ;i2c.c: 56:   I2C_delay();
  4976  002084  EC32  F013         	call	_I2C_delay	;wreg free
  4977  002088                     l2601:
  4978  002088  EC54  F011         	call	_read_SCL	;wreg free
  4979  00208C  0900               	iorlw	0
  4980  00208E  B4D8               	btfsc	status,2,c
  4981  002090  EF4C  F010         	goto	u2151
  4982  002094  EF4E  F010         	goto	u2150
  4983  002098                     u2151:
  4984  002098  EF44  F010         	goto	l2601
  4985  00209C                     u2150:
  4986  00209C                     
  4987                           ;i2c.c: 59:   I2C_delay();
  4988  00209C  EC32  F013         	call	_I2C_delay	;wreg free
  4989  0020A0                     l2605:
  4990                           
  4991                           ;i2c.c: 61:  if (read_SDA() == 0) {
  4992  0020A0  EC38  F011         	call	_read_SDA	;wreg free
  4993  0020A4                     
  4994                           ;i2c.c: 65:  clear_SDA();
  4995  0020A4  EC71  F012         	call	_clear_SDA	;wreg free
  4996  0020A8                     
  4997                           ;i2c.c: 66:  I2C_delay();
  4998  0020A8  EC32  F013         	call	_I2C_delay	;wreg free
  4999  0020AC                     
  5000                           ;i2c.c: 67:  clear_SCL();
  5001  0020AC  EC86  F012         	call	_clear_SCL	;wreg free
  5002  0020B0                     
  5003                           ;i2c.c: 68:  started = 1;
  5004  0020B0  0E01               	movlw	1
  5005  0020B2  6E3F               	movwf	_started^0,c
  5006  0020B4  0012               	return		;funcret
  5007  0020B6                     __end_of_i2c_start:
  5008                           	callstack 0
  5009                           
  5010 ;; *************** function _i2cReadByte *****************
  5011 ;; Defined at:
  5012 ;;		line 131 in file "i2c.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;  nack            1    wreg     unsigned char 
  5015 ;;  send_stop       1    7[COMRAM] unsigned char 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;  nack            1    9[COMRAM] unsigned char 
  5018 ;;  bit             2   10[COMRAM] unsigned int 
  5019 ;;  byte            1   12[COMRAM] unsigned char 
  5020 ;; Return value:  Size  Location     Type
  5021 ;;                  1    wreg      unsigned char 
  5022 ;; Registers used:
  5023 ;;		wreg, status,2, status,0, cstack
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5029 ;;      Params:         1       0       0       0       0       0       0
  5030 ;;      Locals:         4       0       0       0       0       0       0
  5031 ;;      Temps:          1       0       0       0       0       0       0
  5032 ;;      Totals:         6       0       0       0       0       0       0
  5033 ;;Total ram usage:        6 bytes
  5034 ;; Hardware stack levels used: 1
  5035 ;; Hardware stack levels required when called: 3
  5036 ;; This function calls:
  5037 ;;		_i2c_read_bit
  5038 ;;		_i2c_stop
  5039 ;;		_i2c_write_bit
  5040 ;; This function is called by:
  5041 ;;		_dsReadData
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045                           	psect	text40
  5046  001F88                     __ptext40:
  5047                           	callstack 0
  5048  001F88                     _i2cReadByte:
  5049                           	callstack 25
  5050                           
  5051                           ;incstack = 0
  5052                           ;i2cReadByte@nack stored from wreg
  5053  001F88  6E0A               	movwf	i2cReadByte@nack^0,c
  5054  001F8A                     
  5055                           ;i2c.c: 132:  unsigned char byte = 0;
  5056  001F8A  0E00               	movlw	0
  5057  001F8C  6E0D               	movwf	i2cReadByte@byte^0,c
  5058                           
  5059                           ;i2c.c: 133:  unsigned bit;;i2c.c: 134:  for (bit = 0; bit < 8; bit++) {
  5060  001F8E  0E00               	movlw	0
  5061  001F90  6E0C               	movwf	(i2cReadByte@bit+1)^0,c
  5062  001F92  0E00               	movlw	0
  5063  001F94  6E0B               	movwf	i2cReadByte@bit^0,c
  5064  001F96                     l2749:
  5065                           
  5066                           ;i2c.c: 135:   byte = (byte << 1) | i2c_read_bit();
  5067  001F96  ECA4  F011         	call	_i2c_read_bit	;wreg free
  5068  001F9A  6E09               	movwf	??_i2cReadByte^0,c
  5069  001F9C  500D               	movf	i2cReadByte@byte^0,w,c
  5070  001F9E  240D               	addwf	i2cReadByte@byte^0,w,c
  5071  001FA0  1009               	iorwf	??_i2cReadByte^0,w,c
  5072  001FA2  6E0D               	movwf	i2cReadByte@byte^0,c
  5073  001FA4                     
  5074                           ;i2c.c: 136:  }
  5075  001FA4  4A0B               	infsnz	i2cReadByte@bit^0,f,c
  5076  001FA6  2A0C               	incf	(i2cReadByte@bit+1)^0,f,c
  5077  001FA8  500C               	movf	(i2cReadByte@bit+1)^0,w,c
  5078  001FAA  E109               	bnz	u2330
  5079  001FAC  0E08               	movlw	8
  5080  001FAE  5C0B               	subwf	i2cReadByte@bit^0,w,c
  5081  001FB0  A0D8               	btfss	status,0,c
  5082  001FB2  EFDD  F00F         	goto	u2331
  5083  001FB6  EFDF  F00F         	goto	u2330
  5084  001FBA                     u2331:
  5085  001FBA  EFCB  F00F         	goto	l2749
  5086  001FBE                     u2330:
  5087  001FBE                     
  5088                           ;i2c.c: 137:  i2c_write_bit(nack);
  5089  001FBE  500A               	movf	i2cReadByte@nack^0,w,c
  5090  001FC0  EC42  F00F         	call	_i2c_write_bit
  5091  001FC4                     
  5092                           ;i2c.c: 138:  if (send_stop) {
  5093  001FC4  5008               	movf	i2cReadByte@send_stop^0,w,c
  5094  001FC6  B4D8               	btfsc	status,2,c
  5095  001FC8  EFE8  F00F         	goto	u2341
  5096  001FCC  EFEA  F00F         	goto	u2340
  5097  001FD0                     u2341:
  5098  001FD0  EFEC  F00F         	goto	l2761
  5099  001FD4                     u2340:
  5100  001FD4                     
  5101                           ;i2c.c: 139:   i2c_stop();
  5102  001FD4  ECEC  F011         	call	_i2c_stop	;wreg free
  5103  001FD8                     l2761:
  5104                           
  5105                           ;i2c.c: 141:  return byte;
  5106  001FD8  500D               	movf	i2cReadByte@byte^0,w,c
  5107  001FDA  0012               	return		;funcret
  5108  001FDC                     __end_of_i2cReadByte:
  5109                           	callstack 0
  5110                           
  5111 ;; *************** function _i2c_write_bit *****************
  5112 ;; Defined at:
  5113 ;;		line 84 in file "i2c.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;  bit             1    wreg     unsigned char 
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;  bit             1    6[COMRAM] unsigned char 
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  1    wreg      void 
  5120 ;; Registers used:
  5121 ;;		wreg, status,2, status,0, cstack
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5127 ;;      Params:         0       0       0       0       0       0       0
  5128 ;;      Locals:         1       0       0       0       0       0       0
  5129 ;;      Temps:          0       0       0       0       0       0       0
  5130 ;;      Totals:         1       0       0       0       0       0       0
  5131 ;;Total ram usage:        1 bytes
  5132 ;; Hardware stack levels used: 1
  5133 ;; Hardware stack levels required when called: 2
  5134 ;; This function calls:
  5135 ;;		_I2C_delay
  5136 ;;		_clear_SCL
  5137 ;;		_clear_SDA
  5138 ;;		_read_SCL
  5139 ;;		_read_SDA
  5140 ;; This function is called by:
  5141 ;;		_i2cWriteByte
  5142 ;;		_i2cReadByte
  5143 ;; This function uses a non-reentrant model
  5144 ;;
  5145                           
  5146                           	psect	text41
  5147  001E84                     __ptext41:
  5148                           	callstack 0
  5149  001E84                     _i2c_write_bit:
  5150                           	callstack 25
  5151                           
  5152                           ;incstack = 0
  5153                           ;i2c_write_bit@bit stored from wreg
  5154  001E84  6E07               	movwf	i2c_write_bit@bit^0,c
  5155  001E86                     
  5156                           ;i2c.c: 85:  if (bit) {
  5157  001E86  5007               	movf	i2c_write_bit@bit^0,w,c
  5158  001E88  B4D8               	btfsc	status,2,c
  5159  001E8A  EF49  F00F         	goto	u2171
  5160  001E8E  EF4B  F00F         	goto	u2170
  5161  001E92                     u2171:
  5162  001E92  EF4F  F00F         	goto	l2633
  5163  001E96                     u2170:
  5164  001E96                     
  5165                           ;i2c.c: 86:   read_SDA();
  5166  001E96  EC38  F011         	call	_read_SDA	;wreg free
  5167                           
  5168                           ;i2c.c: 87:  } else {
  5169  001E9A  EF51  F00F         	goto	l2635
  5170  001E9E                     l2633:
  5171                           
  5172                           ;i2c.c: 88:   clear_SDA();
  5173  001E9E  EC71  F012         	call	_clear_SDA	;wreg free
  5174  001EA2                     l2635:
  5175                           
  5176                           ;i2c.c: 90:  I2C_delay();
  5177  001EA2  EC32  F013         	call	_I2C_delay	;wreg free
  5178  001EA6                     l2637:
  5179  001EA6  EC54  F011         	call	_read_SCL	;wreg free
  5180  001EAA  0900               	iorlw	0
  5181  001EAC  B4D8               	btfsc	status,2,c
  5182  001EAE  EF5B  F00F         	goto	u2181
  5183  001EB2  EF5D  F00F         	goto	u2180
  5184  001EB6                     u2181:
  5185  001EB6  EF53  F00F         	goto	l2637
  5186  001EBA                     u2180:
  5187  001EBA                     
  5188                           ;i2c.c: 92:  if (bit && read_SDA() == 0) {
  5189  001EBA  5007               	movf	i2c_write_bit@bit^0,w,c
  5190  001EBC  B4D8               	btfsc	status,2,c
  5191  001EBE  EF63  F00F         	goto	u2191
  5192  001EC2  EF65  F00F         	goto	u2190
  5193  001EC6                     u2191:
  5194  001EC6  EF67  F00F         	goto	l2643
  5195  001ECA                     u2190:
  5196  001ECA  EC38  F011         	call	_read_SDA	;wreg free
  5197  001ECE                     l2643:
  5198                           
  5199                           ;i2c.c: 95:  I2C_delay();
  5200  001ECE  EC32  F013         	call	_I2C_delay	;wreg free
  5201  001ED2                     
  5202                           ;i2c.c: 96:  clear_SCL();
  5203  001ED2  EC86  F012         	call	_clear_SCL	;wreg free
  5204  001ED6                     
  5205                           ;i2c.c: 97:  I2C_delay();
  5206  001ED6  EC32  F013         	call	_I2C_delay	;wreg free
  5207  001EDA  0012               	return		;funcret
  5208  001EDC                     __end_of_i2c_write_bit:
  5209                           	callstack 0
  5210                           
  5211 ;; *************** function _i2c_stop *****************
  5212 ;; Defined at:
  5213 ;;		line 71 in file "i2c.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;		None
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;		None
  5218 ;; Return value:  Size  Location     Type
  5219 ;;                  1    wreg      void 
  5220 ;; Registers used:
  5221 ;;		wreg, status,2, status,0, cstack
  5222 ;; Tracked objects:
  5223 ;;		On entry : 0/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5227 ;;      Params:         0       0       0       0       0       0       0
  5228 ;;      Locals:         0       0       0       0       0       0       0
  5229 ;;      Temps:          0       0       0       0       0       0       0
  5230 ;;      Totals:         0       0       0       0       0       0       0
  5231 ;;Total ram usage:        0 bytes
  5232 ;; Hardware stack levels used: 1
  5233 ;; Hardware stack levels required when called: 2
  5234 ;; This function calls:
  5235 ;;		_I2C_delay
  5236 ;;		_clear_SDA
  5237 ;;		_read_SCL
  5238 ;;		_read_SDA
  5239 ;; This function is called by:
  5240 ;;		_i2cWriteByte
  5241 ;;		_i2cReadByte
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245                           	psect	text42
  5246  0023D8                     __ptext42:
  5247                           	callstack 0
  5248  0023D8                     _i2c_stop:
  5249                           	callstack 25
  5250  0023D8                     
  5251                           ;i2c.c: 73:  clear_SDA();
  5252  0023D8  EC71  F012         	call	_clear_SDA	;wreg free
  5253  0023DC                     
  5254                           ;i2c.c: 74:  I2C_delay();
  5255  0023DC  EC32  F013         	call	_I2C_delay	;wreg free
  5256  0023E0                     l2619:
  5257  0023E0  EC54  F011         	call	_read_SCL	;wreg free
  5258  0023E4  0900               	iorlw	0
  5259  0023E6  B4D8               	btfsc	status,2,c
  5260  0023E8  EFF8  F011         	goto	u2161
  5261  0023EC  EFFA  F011         	goto	u2160
  5262  0023F0                     u2161:
  5263  0023F0  EFF0  F011         	goto	l2619
  5264  0023F4                     u2160:
  5265  0023F4                     
  5266                           ;i2c.c: 76:  I2C_delay();
  5267  0023F4  EC32  F013         	call	_I2C_delay	;wreg free
  5268  0023F8                     
  5269                           ;i2c.c: 77:  if (read_SDA() == 0) {
  5270  0023F8  EC38  F011         	call	_read_SDA	;wreg free
  5271  0023FC                     
  5272                           ;i2c.c: 80:  I2C_delay();
  5273  0023FC  EC32  F013         	call	_I2C_delay	;wreg free
  5274  002400                     
  5275                           ;i2c.c: 81:  started = 0;
  5276  002400  0E00               	movlw	0
  5277  002402  6E3F               	movwf	_started^0,c
  5278  002404  0012               	return		;funcret
  5279  002406                     __end_of_i2c_stop:
  5280                           	callstack 0
  5281                           
  5282 ;; *************** function _clear_SDA *****************
  5283 ;; Defined at:
  5284 ;;		line 45 in file "i2c.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;		None
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;		None
  5289 ;; Return value:  Size  Location     Type
  5290 ;;                  1    wreg      void 
  5291 ;; Registers used:
  5292 ;;		wreg, status,2, status,0, cstack
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5298 ;;      Params:         0       0       0       0       0       0       0
  5299 ;;      Locals:         0       0       0       0       0       0       0
  5300 ;;      Temps:          0       0       0       0       0       0       0
  5301 ;;      Totals:         0       0       0       0       0       0       0
  5302 ;;Total ram usage:        0 bytes
  5303 ;; Hardware stack levels used: 1
  5304 ;; Hardware stack levels required when called: 1
  5305 ;; This function calls:
  5306 ;;		_digitalWrite
  5307 ;;		_pinMode
  5308 ;; This function is called by:
  5309 ;;		_i2c_start
  5310 ;;		_i2c_stop
  5311 ;;		_i2c_write_bit
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           	psect	text43
  5316  0024E2                     __ptext43:
  5317                           	callstack 0
  5318  0024E2                     _clear_SDA:
  5319                           	callstack 25
  5320  0024E2                     
  5321                           ;i2c.c: 47:  pinMode(PIN_B4,0);
  5322  0024E2  0E00               	movlw	0
  5323  0024E4  6E02               	movwf	(pinMode@pin+1)^0,c
  5324  0024E6  0E0C               	movlw	12
  5325  0024E8  6E01               	movwf	pinMode@pin^0,c
  5326  0024EA  0E00               	movlw	0
  5327  0024EC  6E04               	movwf	(pinMode@type+1)^0,c
  5328  0024EE  0E00               	movlw	0
  5329  0024F0  6E03               	movwf	pinMode@type^0,c
  5330  0024F2  EC92  F004         	call	_pinMode	;wreg free
  5331                           
  5332                           ;i2c.c: 48:  digitalWrite(PIN_B4,0);
  5333  0024F6  0E00               	movlw	0
  5334  0024F8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5335  0024FA  0E0C               	movlw	12
  5336  0024FC  6E01               	movwf	digitalWrite@pin^0,c
  5337  0024FE  0E00               	movlw	0
  5338  002500  6E04               	movwf	(digitalWrite@value+1)^0,c
  5339  002502  0E00               	movlw	0
  5340  002504  6E03               	movwf	digitalWrite@value^0,c
  5341  002506  ECB9  F005         	call	_digitalWrite	;wreg free
  5342  00250A  0012               	return		;funcret
  5343  00250C                     __end_of_clear_SDA:
  5344                           	callstack 0
  5345                           
  5346 ;; *************** function _i2c_read_bit *****************
  5347 ;; Defined at:
  5348 ;;		line 100 in file "i2c.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;		None
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;  bit             1    6[COMRAM] unsigned char 
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  1    wreg      unsigned char 
  5355 ;; Registers used:
  5356 ;;		wreg, status,2, status,0, cstack
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5362 ;;      Params:         0       0       0       0       0       0       0
  5363 ;;      Locals:         1       0       0       0       0       0       0
  5364 ;;      Temps:          0       0       0       0       0       0       0
  5365 ;;      Totals:         1       0       0       0       0       0       0
  5366 ;;Total ram usage:        1 bytes
  5367 ;; Hardware stack levels used: 1
  5368 ;; Hardware stack levels required when called: 2
  5369 ;; This function calls:
  5370 ;;		_I2C_delay
  5371 ;;		_clear_SCL
  5372 ;;		_read_SCL
  5373 ;;		_read_SDA
  5374 ;; This function is called by:
  5375 ;;		_i2cWriteByte
  5376 ;;		_i2cReadByte
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           	psect	text44
  5381  002348                     __ptext44:
  5382                           	callstack 0
  5383  002348                     _i2c_read_bit:
  5384                           	callstack 25
  5385  002348                     
  5386                           ;i2c.c: 101:  unsigned char bit;;i2c.c: 102:  read_SDA();
  5387  002348  EC38  F011         	call	_read_SDA	;wreg free
  5388  00234C                     
  5389                           ;i2c.c: 103:  I2C_delay();
  5390  00234C  EC32  F013         	call	_I2C_delay	;wreg free
  5391  002350                     l2653:
  5392  002350  EC54  F011         	call	_read_SCL	;wreg free
  5393  002354  0900               	iorlw	0
  5394  002356  B4D8               	btfsc	status,2,c
  5395  002358  EFB0  F011         	goto	u2201
  5396  00235C  EFB2  F011         	goto	u2200
  5397  002360                     u2201:
  5398  002360  EFA8  F011         	goto	l2653
  5399  002364                     u2200:
  5400  002364                     
  5401                           ;i2c.c: 105:  bit = read_SDA();
  5402  002364  EC38  F011         	call	_read_SDA	;wreg free
  5403  002368  6E07               	movwf	i2c_read_bit@bit^0,c
  5404  00236A                     
  5405                           ;i2c.c: 106:  I2C_delay();
  5406  00236A  EC32  F013         	call	_I2C_delay	;wreg free
  5407  00236E                     
  5408                           ;i2c.c: 107:  clear_SCL();
  5409  00236E  EC86  F012         	call	_clear_SCL	;wreg free
  5410                           
  5411                           ;i2c.c: 108:  I2C_delay();
  5412  002372  EC32  F013         	call	_I2C_delay	;wreg free
  5413  002376                     
  5414                           ;i2c.c: 109:  return bit;
  5415  002376  5007               	movf	i2c_read_bit@bit^0,w,c
  5416  002378  0012               	return		;funcret
  5417  00237A                     __end_of_i2c_read_bit:
  5418                           	callstack 0
  5419                           
  5420 ;; *************** function _read_SDA *****************
  5421 ;; Defined at:
  5422 ;;		line 34 in file "i2c.c"
  5423 ;; Parameters:    Size  Location     Type
  5424 ;;		None
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;		None
  5427 ;; Return value:  Size  Location     Type
  5428 ;;                  1    wreg      unsigned char 
  5429 ;; Registers used:
  5430 ;;		wreg, status,2, status,0, cstack
  5431 ;; Tracked objects:
  5432 ;;		On entry : 0/0
  5433 ;;		On exit  : 0/0
  5434 ;;		Unchanged: 0/0
  5435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5436 ;;      Params:         0       0       0       0       0       0       0
  5437 ;;      Locals:         0       0       0       0       0       0       0
  5438 ;;      Temps:          0       0       0       0       0       0       0
  5439 ;;      Totals:         0       0       0       0       0       0       0
  5440 ;;Total ram usage:        0 bytes
  5441 ;; Hardware stack levels used: 1
  5442 ;; Hardware stack levels required when called: 1
  5443 ;; This function calls:
  5444 ;;		_digitalRead
  5445 ;;		_pinMode
  5446 ;; This function is called by:
  5447 ;;		_i2c_start
  5448 ;;		_i2c_stop
  5449 ;;		_i2c_write_bit
  5450 ;;		_i2c_read_bit
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           
  5454                           	psect	text45
  5455  002270                     __ptext45:
  5456                           	callstack 0
  5457  002270                     _read_SDA:
  5458                           	callstack 25
  5459  002270                     
  5460                           ;i2c.c: 36:  pinMode(PIN_B4,1);
  5461  002270  0E00               	movlw	0
  5462  002272  6E02               	movwf	(pinMode@pin+1)^0,c
  5463  002274  0E0C               	movlw	12
  5464  002276  6E01               	movwf	pinMode@pin^0,c
  5465  002278  0E00               	movlw	0
  5466  00227A  6E04               	movwf	(pinMode@type+1)^0,c
  5467  00227C  0E01               	movlw	1
  5468  00227E  6E03               	movwf	pinMode@type^0,c
  5469  002280  EC92  F004         	call	_pinMode	;wreg free
  5470                           
  5471                           ;i2c.c: 37:  return !!digitalRead(PIN_B4);
  5472  002284  0E00               	movlw	0
  5473  002286  6E02               	movwf	(digitalRead@pin+1)^0,c
  5474  002288  0E0C               	movlw	12
  5475  00228A  6E01               	movwf	digitalRead@pin^0,c
  5476  00228C  EC4E  F009         	call	_digitalRead	;wreg free
  5477  002290  5001               	movf	?_digitalRead^0,w,c
  5478  002292  1002               	iorwf	(?_digitalRead+1)^0,w,c
  5479  002294  A4D8               	btfss	status,2,c
  5480  002296  EF4F  F011         	goto	u2111
  5481  00229A  EF52  F011         	goto	u2110
  5482  00229E                     u2111:
  5483  00229E  0E01               	movlw	1
  5484  0022A0  EF53  F011         	goto	u2120
  5485  0022A4                     u2110:
  5486  0022A4  0E00               	movlw	0
  5487  0022A6                     u2120:
  5488  0022A6  0012               	return		;funcret
  5489  0022A8                     __end_of_read_SDA:
  5490                           	callstack 0
  5491                           
  5492 ;; *************** function _read_SCL *****************
  5493 ;; Defined at:
  5494 ;;		line 29 in file "i2c.c"
  5495 ;; Parameters:    Size  Location     Type
  5496 ;;		None
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;		None
  5499 ;; Return value:  Size  Location     Type
  5500 ;;                  1    wreg      unsigned char 
  5501 ;; Registers used:
  5502 ;;		wreg, status,2, status,0, cstack
  5503 ;; Tracked objects:
  5504 ;;		On entry : 0/0
  5505 ;;		On exit  : 0/0
  5506 ;;		Unchanged: 0/0
  5507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5508 ;;      Params:         0       0       0       0       0       0       0
  5509 ;;      Locals:         0       0       0       0       0       0       0
  5510 ;;      Temps:          0       0       0       0       0       0       0
  5511 ;;      Totals:         0       0       0       0       0       0       0
  5512 ;;Total ram usage:        0 bytes
  5513 ;; Hardware stack levels used: 1
  5514 ;; Hardware stack levels required when called: 1
  5515 ;; This function calls:
  5516 ;;		_digitalRead
  5517 ;;		_pinMode
  5518 ;; This function is called by:
  5519 ;;		_i2c_start
  5520 ;;		_i2c_stop
  5521 ;;		_i2c_write_bit
  5522 ;;		_i2c_read_bit
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           	psect	text46
  5527  0022A8                     __ptext46:
  5528                           	callstack 0
  5529  0022A8                     _read_SCL:
  5530                           	callstack 25
  5531  0022A8                     
  5532                           ;i2c.c: 31:  pinMode(PIN_B3,1);
  5533  0022A8  0E00               	movlw	0
  5534  0022AA  6E02               	movwf	(pinMode@pin+1)^0,c
  5535  0022AC  0E0B               	movlw	11
  5536  0022AE  6E01               	movwf	pinMode@pin^0,c
  5537  0022B0  0E00               	movlw	0
  5538  0022B2  6E04               	movwf	(pinMode@type+1)^0,c
  5539  0022B4  0E01               	movlw	1
  5540  0022B6  6E03               	movwf	pinMode@type^0,c
  5541  0022B8  EC92  F004         	call	_pinMode	;wreg free
  5542                           
  5543                           ;i2c.c: 32:  return !!digitalRead(PIN_B3);
  5544  0022BC  0E00               	movlw	0
  5545  0022BE  6E02               	movwf	(digitalRead@pin+1)^0,c
  5546  0022C0  0E0B               	movlw	11
  5547  0022C2  6E01               	movwf	digitalRead@pin^0,c
  5548  0022C4  EC4E  F009         	call	_digitalRead	;wreg free
  5549  0022C8  5001               	movf	?_digitalRead^0,w,c
  5550  0022CA  1002               	iorwf	(?_digitalRead+1)^0,w,c
  5551  0022CC  A4D8               	btfss	status,2,c
  5552  0022CE  EF6B  F011         	goto	u2091
  5553  0022D2  EF6E  F011         	goto	u2090
  5554  0022D6                     u2091:
  5555  0022D6  0E01               	movlw	1
  5556  0022D8  EF6F  F011         	goto	u2100
  5557  0022DC                     u2090:
  5558  0022DC  0E00               	movlw	0
  5559  0022DE                     u2100:
  5560  0022DE  0012               	return		;funcret
  5561  0022E0                     __end_of_read_SCL:
  5562                           	callstack 0
  5563                           
  5564 ;; *************** function _digitalRead *****************
  5565 ;; Defined at:
  5566 ;;		line 39 in file "io.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;  pin             2    0[COMRAM] int 
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;		None
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  2    0[COMRAM] int 
  5573 ;; Registers used:
  5574 ;;		wreg, status,2, status,0
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5580 ;;      Params:         2       0       0       0       0       0       0
  5581 ;;      Locals:         0       0       0       0       0       0       0
  5582 ;;      Temps:          3       0       0       0       0       0       0
  5583 ;;      Totals:         5       0       0       0       0       0       0
  5584 ;;Total ram usage:        5 bytes
  5585 ;; Hardware stack levels used: 1
  5586 ;; This function calls:
  5587 ;;		Nothing
  5588 ;; This function is called by:
  5589 ;;		_read_SCL
  5590 ;;		_read_SDA
  5591 ;;		_kpDebounce
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           	psect	text47
  5596  00129C                     __ptext47:
  5597                           	callstack 0
  5598  00129C                     _digitalRead:
  5599                           	callstack 28
  5600  00129C                     
  5601                           ;io.c: 40:     if(pin <8){
  5602  00129C  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5603  00129E  EF5C  F009         	goto	u1990
  5604  0012A2  5002               	movf	(digitalRead@pin+1)^0,w,c
  5605  0012A4  E107               	bnz	u1991
  5606  0012A6  0E08               	movlw	8
  5607  0012A8  5C01               	subwf	digitalRead@pin^0,w,c
  5608  0012AA  B0D8               	btfsc	status,0,c
  5609  0012AC  EF5A  F009         	goto	u1991
  5610  0012B0  EF5C  F009         	goto	u1990
  5611  0012B4                     u1991:
  5612  0012B4  EF70  F009         	goto	l2525
  5613  0012B8                     u1990:
  5614  0012B8                     
  5615                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  5616  0012B8  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5617  0012BC  0E01               	movlw	1
  5618  0012BE  6E04               	movwf	(??_digitalRead+1)^0,c
  5619  0012C0  2A03               	incf	??_digitalRead^0,f,c
  5620  0012C2  EF65  F009         	goto	u2004
  5621  0012C6                     u2005:
  5622  0012C6  90D8               	bcf	status,0,c
  5623  0012C8  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5624  0012CA                     u2004:
  5625  0012CA  2E03               	decfsz	??_digitalRead^0,f,c
  5626  0012CC  EF63  F009         	goto	u2005
  5627  0012D0  5004               	movf	(??_digitalRead+1)^0,w,c
  5628  0012D2  1480               	andwf	128,w,c	;volatile
  5629  0012D4  6E05               	movwf	(??_digitalRead+2)^0,c
  5630  0012D6  5005               	movf	(??_digitalRead+2)^0,w,c
  5631  0012D8  6E01               	movwf	?_digitalRead^0,c
  5632  0012DA  6A02               	clrf	(?_digitalRead+1)^0,c
  5633  0012DC  EF02  F00A         	goto	l177
  5634  0012E0                     l2525:
  5635  0012E0  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5636  0012E2  EF7E  F009         	goto	u2010
  5637  0012E6  5002               	movf	(digitalRead@pin+1)^0,w,c
  5638  0012E8  E107               	bnz	u2011
  5639  0012EA  0E10               	movlw	16
  5640  0012EC  5C01               	subwf	digitalRead@pin^0,w,c
  5641  0012EE  B0D8               	btfsc	status,0,c
  5642  0012F0  EF7C  F009         	goto	u2011
  5643  0012F4  EF7E  F009         	goto	u2010
  5644  0012F8                     u2011:
  5645  0012F8  EF94  F009         	goto	l2533
  5646  0012FC                     u2010:
  5647  0012FC                     
  5648                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  5649  0012FC  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5650  001300  0EF8               	movlw	-8
  5651  001302  2603               	addwf	??_digitalRead^0,f,c
  5652  001304  0E01               	movlw	1
  5653  001306  6E04               	movwf	(??_digitalRead+1)^0,c
  5654  001308  2A03               	incf	??_digitalRead^0,f,c
  5655  00130A  EF89  F009         	goto	u2024
  5656  00130E                     u2025:
  5657  00130E  90D8               	bcf	status,0,c
  5658  001310  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5659  001312                     u2024:
  5660  001312  2E03               	decfsz	??_digitalRead^0,f,c
  5661  001314  EF87  F009         	goto	u2025
  5662  001318  5004               	movf	(??_digitalRead+1)^0,w,c
  5663  00131A  1481               	andwf	129,w,c	;volatile
  5664  00131C  6E05               	movwf	(??_digitalRead+2)^0,c
  5665  00131E  5005               	movf	(??_digitalRead+2)^0,w,c
  5666  001320  6E01               	movwf	?_digitalRead^0,c
  5667  001322  6A02               	clrf	(?_digitalRead+1)^0,c
  5668  001324  EF02  F00A         	goto	l177
  5669  001328                     l2533:
  5670  001328  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5671  00132A  EFA2  F009         	goto	u2030
  5672  00132E  5002               	movf	(digitalRead@pin+1)^0,w,c
  5673  001330  E107               	bnz	u2031
  5674  001332  0E18               	movlw	24
  5675  001334  5C01               	subwf	digitalRead@pin^0,w,c
  5676  001336  B0D8               	btfsc	status,0,c
  5677  001338  EFA0  F009         	goto	u2031
  5678  00133C  EFA2  F009         	goto	u2030
  5679  001340                     u2031:
  5680  001340  EFB8  F009         	goto	l2541
  5681  001344                     u2030:
  5682  001344                     
  5683                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  5684  001344  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5685  001348  0EF0               	movlw	-16
  5686  00134A  2603               	addwf	??_digitalRead^0,f,c
  5687  00134C  0E01               	movlw	1
  5688  00134E  6E04               	movwf	(??_digitalRead+1)^0,c
  5689  001350  2A03               	incf	??_digitalRead^0,f,c
  5690  001352  EFAD  F009         	goto	u2044
  5691  001356                     u2045:
  5692  001356  90D8               	bcf	status,0,c
  5693  001358  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5694  00135A                     u2044:
  5695  00135A  2E03               	decfsz	??_digitalRead^0,f,c
  5696  00135C  EFAB  F009         	goto	u2045
  5697  001360  5004               	movf	(??_digitalRead+1)^0,w,c
  5698  001362  1482               	andwf	130,w,c	;volatile
  5699  001364  6E05               	movwf	(??_digitalRead+2)^0,c
  5700  001366  5005               	movf	(??_digitalRead+2)^0,w,c
  5701  001368  6E01               	movwf	?_digitalRead^0,c
  5702  00136A  6A02               	clrf	(?_digitalRead+1)^0,c
  5703  00136C  EF02  F00A         	goto	l177
  5704  001370                     l2541:
  5705  001370  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5706  001372  EFC6  F009         	goto	u2050
  5707  001376  5002               	movf	(digitalRead@pin+1)^0,w,c
  5708  001378  E107               	bnz	u2051
  5709  00137A  0E20               	movlw	32
  5710  00137C  5C01               	subwf	digitalRead@pin^0,w,c
  5711  00137E  B0D8               	btfsc	status,0,c
  5712  001380  EFC4  F009         	goto	u2051
  5713  001384  EFC6  F009         	goto	u2050
  5714  001388                     u2051:
  5715  001388  EFDC  F009         	goto	l2549
  5716  00138C                     u2050:
  5717  00138C                     
  5718                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  5719  00138C  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5720  001390  0EE8               	movlw	-24
  5721  001392  2603               	addwf	??_digitalRead^0,f,c
  5722  001394  0E01               	movlw	1
  5723  001396  6E04               	movwf	(??_digitalRead+1)^0,c
  5724  001398  2A03               	incf	??_digitalRead^0,f,c
  5725  00139A  EFD1  F009         	goto	u2064
  5726  00139E                     u2065:
  5727  00139E  90D8               	bcf	status,0,c
  5728  0013A0  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5729  0013A2                     u2064:
  5730  0013A2  2E03               	decfsz	??_digitalRead^0,f,c
  5731  0013A4  EFCF  F009         	goto	u2065
  5732  0013A8  5004               	movf	(??_digitalRead+1)^0,w,c
  5733  0013AA  1483               	andwf	131,w,c	;volatile
  5734  0013AC  6E05               	movwf	(??_digitalRead+2)^0,c
  5735  0013AE  5005               	movf	(??_digitalRead+2)^0,w,c
  5736  0013B0  6E01               	movwf	?_digitalRead^0,c
  5737  0013B2  6A02               	clrf	(?_digitalRead+1)^0,c
  5738  0013B4  EF02  F00A         	goto	l177
  5739  0013B8                     l2549:
  5740  0013B8  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5741  0013BA  EFEA  F009         	goto	u2070
  5742  0013BE  5002               	movf	(digitalRead@pin+1)^0,w,c
  5743  0013C0  E107               	bnz	u2071
  5744  0013C2  0E28               	movlw	40
  5745  0013C4  5C01               	subwf	digitalRead@pin^0,w,c
  5746  0013C6  B0D8               	btfsc	status,0,c
  5747  0013C8  EFE8  F009         	goto	u2071
  5748  0013CC  EFEA  F009         	goto	u2070
  5749  0013D0                     u2071:
  5750  0013D0  EF00  F00A         	goto	l182
  5751  0013D4                     u2070:
  5752  0013D4                     
  5753                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  5754  0013D4  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5755  0013D8  0EE0               	movlw	-32
  5756  0013DA  2603               	addwf	??_digitalRead^0,f,c
  5757  0013DC  0E01               	movlw	1
  5758  0013DE  6E04               	movwf	(??_digitalRead+1)^0,c
  5759  0013E0  2A03               	incf	??_digitalRead^0,f,c
  5760  0013E2  EFF5  F009         	goto	u2084
  5761  0013E6                     u2085:
  5762  0013E6  90D8               	bcf	status,0,c
  5763  0013E8  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5764  0013EA                     u2084:
  5765  0013EA  2E03               	decfsz	??_digitalRead^0,f,c
  5766  0013EC  EFF3  F009         	goto	u2085
  5767  0013F0  5004               	movf	(??_digitalRead+1)^0,w,c
  5768  0013F2  1484               	andwf	132,w,c	;volatile
  5769  0013F4  6E05               	movwf	(??_digitalRead+2)^0,c
  5770  0013F6  5005               	movf	(??_digitalRead+2)^0,w,c
  5771  0013F8  6E01               	movwf	?_digitalRead^0,c
  5772  0013FA  6A02               	clrf	(?_digitalRead+1)^0,c
  5773  0013FC  EF02  F00A         	goto	l177
  5774  001400                     l182:
  5775  001400                     
  5776                           ;io.c: 51:     return -1;
  5777  001400  6801               	setf	?_digitalRead^0,c
  5778  001402  6802               	setf	(?_digitalRead+1)^0,c
  5779  001404                     l177:
  5780  001404  0012               	return		;funcret
  5781  001406                     __end_of_digitalRead:
  5782                           	callstack 0
  5783                           
  5784 ;; *************** function _clear_SCL *****************
  5785 ;; Defined at:
  5786 ;;		line 39 in file "i2c.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;		None
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;		None
  5791 ;; Return value:  Size  Location     Type
  5792 ;;                  1    wreg      void 
  5793 ;; Registers used:
  5794 ;;		wreg, status,2, status,0, cstack
  5795 ;; Tracked objects:
  5796 ;;		On entry : 0/0
  5797 ;;		On exit  : 0/0
  5798 ;;		Unchanged: 0/0
  5799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5800 ;;      Params:         0       0       0       0       0       0       0
  5801 ;;      Locals:         0       0       0       0       0       0       0
  5802 ;;      Temps:          0       0       0       0       0       0       0
  5803 ;;      Totals:         0       0       0       0       0       0       0
  5804 ;;Total ram usage:        0 bytes
  5805 ;; Hardware stack levels used: 1
  5806 ;; Hardware stack levels required when called: 1
  5807 ;; This function calls:
  5808 ;;		_digitalWrite
  5809 ;;		_pinMode
  5810 ;; This function is called by:
  5811 ;;		_i2c_start
  5812 ;;		_i2c_write_bit
  5813 ;;		_i2c_read_bit
  5814 ;; This function uses a non-reentrant model
  5815 ;;
  5816                           
  5817                           	psect	text48
  5818  00250C                     __ptext48:
  5819                           	callstack 0
  5820  00250C                     _clear_SCL:
  5821                           	callstack 25
  5822  00250C                     
  5823                           ;i2c.c: 41:  pinMode(PIN_B3,0);
  5824  00250C  0E00               	movlw	0
  5825  00250E  6E02               	movwf	(pinMode@pin+1)^0,c
  5826  002510  0E0B               	movlw	11
  5827  002512  6E01               	movwf	pinMode@pin^0,c
  5828  002514  0E00               	movlw	0
  5829  002516  6E04               	movwf	(pinMode@type+1)^0,c
  5830  002518  0E00               	movlw	0
  5831  00251A  6E03               	movwf	pinMode@type^0,c
  5832  00251C  EC92  F004         	call	_pinMode	;wreg free
  5833                           
  5834                           ;i2c.c: 42:  digitalWrite(PIN_B3,0);
  5835  002520  0E00               	movlw	0
  5836  002522  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5837  002524  0E0B               	movlw	11
  5838  002526  6E01               	movwf	digitalWrite@pin^0,c
  5839  002528  0E00               	movlw	0
  5840  00252A  6E04               	movwf	(digitalWrite@value+1)^0,c
  5841  00252C  0E00               	movlw	0
  5842  00252E  6E03               	movwf	digitalWrite@value^0,c
  5843  002530  ECB9  F005         	call	_digitalWrite	;wreg free
  5844  002534  0012               	return		;funcret
  5845  002536                     __end_of_clear_SCL:
  5846                           	callstack 0
  5847                           
  5848 ;; *************** function _pinMode *****************
  5849 ;; Defined at:
  5850 ;;		line 54 in file "io.c"
  5851 ;; Parameters:    Size  Location     Type
  5852 ;;  pin             2    0[COMRAM] int 
  5853 ;;  type            2    2[COMRAM] int 
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;		None
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  1    wreg      void 
  5858 ;; Registers used:
  5859 ;;		wreg, status,2, status,0
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5865 ;;      Params:         4       0       0       0       0       0       0
  5866 ;;      Locals:         0       0       0       0       0       0       0
  5867 ;;      Temps:          2       0       0       0       0       0       0
  5868 ;;      Totals:         6       0       0       0       0       0       0
  5869 ;;Total ram usage:        6 bytes
  5870 ;; Hardware stack levels used: 1
  5871 ;; This function calls:
  5872 ;;		Nothing
  5873 ;; This function is called by:
  5874 ;;		_read_SCL
  5875 ;;		_read_SDA
  5876 ;;		_clear_SCL
  5877 ;;		_clear_SDA
  5878 ;;		_kpInit
  5879 ;;		_lcdInit
  5880 ;;		_soInit
  5881 ;;		_ssdInit
  5882 ;;		_adcInit
  5883 ;;		_i2cInit
  5884 ;;		_rgbInit
  5885 ;; This function uses a non-reentrant model
  5886 ;;
  5887                           
  5888                           	psect	text49
  5889  000924                     __ptext49:
  5890                           	callstack 0
  5891  000924                     _pinMode:
  5892                           	callstack 25
  5893  000924                     
  5894                           ;io.c: 56:     if(pin <8){
  5895  000924  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5896  000926  EFA0  F004         	goto	u1790
  5897  00092A  5002               	movf	(pinMode@pin+1)^0,w,c
  5898  00092C  E107               	bnz	u1791
  5899  00092E  0E08               	movlw	8
  5900  000930  5C01               	subwf	pinMode@pin^0,w,c
  5901  000932  B0D8               	btfsc	status,0,c
  5902  000934  EF9E  F004         	goto	u1791
  5903  000938  EFA0  F004         	goto	u1790
  5904  00093C                     u1791:
  5905  00093C  EFCA  F004         	goto	l2485
  5906  000940                     u1790:
  5907  000940                     
  5908                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  5909  000940  5003               	movf	pinMode@type^0,w,c
  5910  000942  1004               	iorwf	(pinMode@type+1)^0,w,c
  5911  000944  B4D8               	btfsc	status,2,c
  5912  000946  EFA7  F004         	goto	u1801
  5913  00094A  EFA9  F004         	goto	u1800
  5914  00094E                     u1801:
  5915  00094E  EFB9  F004         	goto	l2483
  5916  000952                     u1800:
  5917  000952  C001  F005         	movff	pinMode@pin,??_pinMode
  5918  000956  0E01               	movlw	1
  5919  000958  6E06               	movwf	(??_pinMode+1)^0,c
  5920  00095A  2A05               	incf	??_pinMode^0,f,c
  5921  00095C  EFB2  F004         	goto	u1814
  5922  000960                     u1815:
  5923  000960  90D8               	bcf	status,0,c
  5924  000962  3606               	rlcf	(??_pinMode+1)^0,f,c
  5925  000964                     u1814:
  5926  000964  2E05               	decfsz	??_pinMode^0,f,c
  5927  000966  EFB0  F004         	goto	u1815
  5928  00096A  5006               	movf	(??_pinMode+1)^0,w,c
  5929  00096C  1292               	iorwf	146,f,c	;volatile
  5930  00096E  EFB8  F005         	goto	l207
  5931  000972                     l2483:
  5932  000972  C001  F005         	movff	pinMode@pin,??_pinMode
  5933  000976  0E01               	movlw	1
  5934  000978  6E06               	movwf	(??_pinMode+1)^0,c
  5935  00097A  2A05               	incf	??_pinMode^0,f,c
  5936  00097C  EFC2  F004         	goto	u1824
  5937  000980                     u1825:
  5938  000980  90D8               	bcf	status,0,c
  5939  000982  3606               	rlcf	(??_pinMode+1)^0,f,c
  5940  000984                     u1824:
  5941  000984  2E05               	decfsz	??_pinMode^0,f,c
  5942  000986  EFC0  F004         	goto	u1825
  5943  00098A  5006               	movf	(??_pinMode+1)^0,w,c
  5944  00098C  0AFF               	xorlw	255
  5945  00098E  1692               	andwf	146,f,c	;volatile
  5946  000990  EFB8  F005         	goto	l207
  5947  000994                     l2485:
  5948  000994  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5949  000996  EFD8  F004         	goto	u1830
  5950  00099A  5002               	movf	(pinMode@pin+1)^0,w,c
  5951  00099C  E107               	bnz	u1831
  5952  00099E  0E10               	movlw	16
  5953  0009A0  5C01               	subwf	pinMode@pin^0,w,c
  5954  0009A2  B0D8               	btfsc	status,0,c
  5955  0009A4  EFD6  F004         	goto	u1831
  5956  0009A8  EFD8  F004         	goto	u1830
  5957  0009AC                     u1831:
  5958  0009AC  EF06  F005         	goto	l2493
  5959  0009B0                     u1830:
  5960  0009B0                     
  5961                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  5962  0009B0  5003               	movf	pinMode@type^0,w,c
  5963  0009B2  1004               	iorwf	(pinMode@type+1)^0,w,c
  5964  0009B4  B4D8               	btfsc	status,2,c
  5965  0009B6  EFDF  F004         	goto	u1841
  5966  0009BA  EFE1  F004         	goto	u1840
  5967  0009BE                     u1841:
  5968  0009BE  EFF3  F004         	goto	l2491
  5969  0009C2                     u1840:
  5970  0009C2  C001  F005         	movff	pinMode@pin,??_pinMode
  5971  0009C6  0EF8               	movlw	-8
  5972  0009C8  2605               	addwf	??_pinMode^0,f,c
  5973  0009CA  0E01               	movlw	1
  5974  0009CC  6E06               	movwf	(??_pinMode+1)^0,c
  5975  0009CE  2A05               	incf	??_pinMode^0,f,c
  5976  0009D0  EFEC  F004         	goto	u1854
  5977  0009D4                     u1855:
  5978  0009D4  90D8               	bcf	status,0,c
  5979  0009D6  3606               	rlcf	(??_pinMode+1)^0,f,c
  5980  0009D8                     u1854:
  5981  0009D8  2E05               	decfsz	??_pinMode^0,f,c
  5982  0009DA  EFEA  F004         	goto	u1855
  5983  0009DE  5006               	movf	(??_pinMode+1)^0,w,c
  5984  0009E0  1293               	iorwf	147,f,c	;volatile
  5985  0009E2  EFB8  F005         	goto	l207
  5986  0009E6                     l2491:
  5987  0009E6  C001  F005         	movff	pinMode@pin,??_pinMode
  5988  0009EA  0EF8               	movlw	-8
  5989  0009EC  2605               	addwf	??_pinMode^0,f,c
  5990  0009EE  0E01               	movlw	1
  5991  0009F0  6E06               	movwf	(??_pinMode+1)^0,c
  5992  0009F2  2A05               	incf	??_pinMode^0,f,c
  5993  0009F4  EFFE  F004         	goto	u1864
  5994  0009F8                     u1865:
  5995  0009F8  90D8               	bcf	status,0,c
  5996  0009FA  3606               	rlcf	(??_pinMode+1)^0,f,c
  5997  0009FC                     u1864:
  5998  0009FC  2E05               	decfsz	??_pinMode^0,f,c
  5999  0009FE  EFFC  F004         	goto	u1865
  6000  000A02  5006               	movf	(??_pinMode+1)^0,w,c
  6001  000A04  0AFF               	xorlw	255
  6002  000A06  1693               	andwf	147,f,c	;volatile
  6003  000A08  EFB8  F005         	goto	l207
  6004  000A0C                     l2493:
  6005  000A0C  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  6006  000A0E  EF14  F005         	goto	u1870
  6007  000A12  5002               	movf	(pinMode@pin+1)^0,w,c
  6008  000A14  E107               	bnz	u1871
  6009  000A16  0E18               	movlw	24
  6010  000A18  5C01               	subwf	pinMode@pin^0,w,c
  6011  000A1A  B0D8               	btfsc	status,0,c
  6012  000A1C  EF12  F005         	goto	u1871
  6013  000A20  EF14  F005         	goto	u1870
  6014  000A24                     u1871:
  6015  000A24  EF42  F005         	goto	l2501
  6016  000A28                     u1870:
  6017  000A28                     
  6018                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  6019  000A28  5003               	movf	pinMode@type^0,w,c
  6020  000A2A  1004               	iorwf	(pinMode@type+1)^0,w,c
  6021  000A2C  B4D8               	btfsc	status,2,c
  6022  000A2E  EF1B  F005         	goto	u1881
  6023  000A32  EF1D  F005         	goto	u1880
  6024  000A36                     u1881:
  6025  000A36  EF2F  F005         	goto	l2499
  6026  000A3A                     u1880:
  6027  000A3A  C001  F005         	movff	pinMode@pin,??_pinMode
  6028  000A3E  0EF0               	movlw	-16
  6029  000A40  2605               	addwf	??_pinMode^0,f,c
  6030  000A42  0E01               	movlw	1
  6031  000A44  6E06               	movwf	(??_pinMode+1)^0,c
  6032  000A46  2A05               	incf	??_pinMode^0,f,c
  6033  000A48  EF28  F005         	goto	u1894
  6034  000A4C                     u1895:
  6035  000A4C  90D8               	bcf	status,0,c
  6036  000A4E  3606               	rlcf	(??_pinMode+1)^0,f,c
  6037  000A50                     u1894:
  6038  000A50  2E05               	decfsz	??_pinMode^0,f,c
  6039  000A52  EF26  F005         	goto	u1895
  6040  000A56  5006               	movf	(??_pinMode+1)^0,w,c
  6041  000A58  1294               	iorwf	148,f,c	;volatile
  6042  000A5A  EFB8  F005         	goto	l207
  6043  000A5E                     l2499:
  6044  000A5E  C001  F005         	movff	pinMode@pin,??_pinMode
  6045  000A62  0EF0               	movlw	-16
  6046  000A64  2605               	addwf	??_pinMode^0,f,c
  6047  000A66  0E01               	movlw	1
  6048  000A68  6E06               	movwf	(??_pinMode+1)^0,c
  6049  000A6A  2A05               	incf	??_pinMode^0,f,c
  6050  000A6C  EF3A  F005         	goto	u1904
  6051  000A70                     u1905:
  6052  000A70  90D8               	bcf	status,0,c
  6053  000A72  3606               	rlcf	(??_pinMode+1)^0,f,c
  6054  000A74                     u1904:
  6055  000A74  2E05               	decfsz	??_pinMode^0,f,c
  6056  000A76  EF38  F005         	goto	u1905
  6057  000A7A  5006               	movf	(??_pinMode+1)^0,w,c
  6058  000A7C  0AFF               	xorlw	255
  6059  000A7E  1694               	andwf	148,f,c	;volatile
  6060  000A80  EFB8  F005         	goto	l207
  6061  000A84                     l2501:
  6062  000A84  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  6063  000A86  EF50  F005         	goto	u1910
  6064  000A8A  5002               	movf	(pinMode@pin+1)^0,w,c
  6065  000A8C  E107               	bnz	u1911
  6066  000A8E  0E20               	movlw	32
  6067  000A90  5C01               	subwf	pinMode@pin^0,w,c
  6068  000A92  B0D8               	btfsc	status,0,c
  6069  000A94  EF4E  F005         	goto	u1911
  6070  000A98  EF50  F005         	goto	u1910
  6071  000A9C                     u1911:
  6072  000A9C  EF7E  F005         	goto	l2509
  6073  000AA0                     u1910:
  6074  000AA0                     
  6075                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  6076  000AA0  5003               	movf	pinMode@type^0,w,c
  6077  000AA2  1004               	iorwf	(pinMode@type+1)^0,w,c
  6078  000AA4  B4D8               	btfsc	status,2,c
  6079  000AA6  EF57  F005         	goto	u1921
  6080  000AAA  EF59  F005         	goto	u1920
  6081  000AAE                     u1921:
  6082  000AAE  EF6B  F005         	goto	l2507
  6083  000AB2                     u1920:
  6084  000AB2  C001  F005         	movff	pinMode@pin,??_pinMode
  6085  000AB6  0EE8               	movlw	-24
  6086  000AB8  2605               	addwf	??_pinMode^0,f,c
  6087  000ABA  0E01               	movlw	1
  6088  000ABC  6E06               	movwf	(??_pinMode+1)^0,c
  6089  000ABE  2A05               	incf	??_pinMode^0,f,c
  6090  000AC0  EF64  F005         	goto	u1934
  6091  000AC4                     u1935:
  6092  000AC4  90D8               	bcf	status,0,c
  6093  000AC6  3606               	rlcf	(??_pinMode+1)^0,f,c
  6094  000AC8                     u1934:
  6095  000AC8  2E05               	decfsz	??_pinMode^0,f,c
  6096  000ACA  EF62  F005         	goto	u1935
  6097  000ACE  5006               	movf	(??_pinMode+1)^0,w,c
  6098  000AD0  1295               	iorwf	149,f,c	;volatile
  6099  000AD2  EFB8  F005         	goto	l207
  6100  000AD6                     l2507:
  6101  000AD6  C001  F005         	movff	pinMode@pin,??_pinMode
  6102  000ADA  0EE8               	movlw	-24
  6103  000ADC  2605               	addwf	??_pinMode^0,f,c
  6104  000ADE  0E01               	movlw	1
  6105  000AE0  6E06               	movwf	(??_pinMode+1)^0,c
  6106  000AE2  2A05               	incf	??_pinMode^0,f,c
  6107  000AE4  EF76  F005         	goto	u1944
  6108  000AE8                     u1945:
  6109  000AE8  90D8               	bcf	status,0,c
  6110  000AEA  3606               	rlcf	(??_pinMode+1)^0,f,c
  6111  000AEC                     u1944:
  6112  000AEC  2E05               	decfsz	??_pinMode^0,f,c
  6113  000AEE  EF74  F005         	goto	u1945
  6114  000AF2  5006               	movf	(??_pinMode+1)^0,w,c
  6115  000AF4  0AFF               	xorlw	255
  6116  000AF6  1695               	andwf	149,f,c	;volatile
  6117  000AF8  EFB8  F005         	goto	l207
  6118  000AFC                     l2509:
  6119  000AFC  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  6120  000AFE  EF8C  F005         	goto	u1950
  6121  000B02  5002               	movf	(pinMode@pin+1)^0,w,c
  6122  000B04  E107               	bnz	u1951
  6123  000B06  0E28               	movlw	40
  6124  000B08  5C01               	subwf	pinMode@pin^0,w,c
  6125  000B0A  B0D8               	btfsc	status,0,c
  6126  000B0C  EF8A  F005         	goto	u1951
  6127  000B10  EF8C  F005         	goto	u1950
  6128  000B14                     u1951:
  6129  000B14  EFB8  F005         	goto	l207
  6130  000B18                     u1950:
  6131  000B18                     
  6132                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  6133  000B18  5003               	movf	pinMode@type^0,w,c
  6134  000B1A  1004               	iorwf	(pinMode@type+1)^0,w,c
  6135  000B1C  B4D8               	btfsc	status,2,c
  6136  000B1E  EF93  F005         	goto	u1961
  6137  000B22  EF95  F005         	goto	u1960
  6138  000B26                     u1961:
  6139  000B26  EFA7  F005         	goto	l2515
  6140  000B2A                     u1960:
  6141  000B2A  C001  F005         	movff	pinMode@pin,??_pinMode
  6142  000B2E  0EE0               	movlw	-32
  6143  000B30  2605               	addwf	??_pinMode^0,f,c
  6144  000B32  0E01               	movlw	1
  6145  000B34  6E06               	movwf	(??_pinMode+1)^0,c
  6146  000B36  2A05               	incf	??_pinMode^0,f,c
  6147  000B38  EFA0  F005         	goto	u1974
  6148  000B3C                     u1975:
  6149  000B3C  90D8               	bcf	status,0,c
  6150  000B3E  3606               	rlcf	(??_pinMode+1)^0,f,c
  6151  000B40                     u1974:
  6152  000B40  2E05               	decfsz	??_pinMode^0,f,c
  6153  000B42  EF9E  F005         	goto	u1975
  6154  000B46  5006               	movf	(??_pinMode+1)^0,w,c
  6155  000B48  1296               	iorwf	150,f,c	;volatile
  6156  000B4A  EFB8  F005         	goto	l207
  6157  000B4E                     l2515:
  6158  000B4E  C001  F005         	movff	pinMode@pin,??_pinMode
  6159  000B52  0EE0               	movlw	-32
  6160  000B54  2605               	addwf	??_pinMode^0,f,c
  6161  000B56  0E01               	movlw	1
  6162  000B58  6E06               	movwf	(??_pinMode+1)^0,c
  6163  000B5A  2A05               	incf	??_pinMode^0,f,c
  6164  000B5C  EFB2  F005         	goto	u1984
  6165  000B60                     u1985:
  6166  000B60  90D8               	bcf	status,0,c
  6167  000B62  3606               	rlcf	(??_pinMode+1)^0,f,c
  6168  000B64                     u1984:
  6169  000B64  2E05               	decfsz	??_pinMode^0,f,c
  6170  000B66  EFB0  F005         	goto	u1985
  6171  000B6A  5006               	movf	(??_pinMode+1)^0,w,c
  6172  000B6C  0AFF               	xorlw	255
  6173  000B6E  1696               	andwf	150,f,c	;volatile
  6174  000B70                     l207:
  6175  000B70  0012               	return		;funcret
  6176  000B72                     __end_of_pinMode:
  6177                           	callstack 0
  6178                           
  6179 ;; *************** function _digitalWrite *****************
  6180 ;; Defined at:
  6181 ;;		line 14 in file "io.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;  pin             2    0[COMRAM] int 
  6184 ;;  value           2    2[COMRAM] int 
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;		None
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  1    wreg      void 
  6189 ;; Registers used:
  6190 ;;		wreg, status,2, status,0
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6196 ;;      Params:         4       0       0       0       0       0       0
  6197 ;;      Locals:         0       0       0       0       0       0       0
  6198 ;;      Temps:          2       0       0       0       0       0       0
  6199 ;;      Totals:         6       0       0       0       0       0       0
  6200 ;;Total ram usage:        6 bytes
  6201 ;; Hardware stack levels used: 1
  6202 ;; This function calls:
  6203 ;;		Nothing
  6204 ;; This function is called by:
  6205 ;;		_clear_SCL
  6206 ;;		_clear_SDA
  6207 ;;		_pulseEnablePin
  6208 ;;		_pushNibble
  6209 ;;		_pushByte
  6210 ;;		_PulseEnClock
  6211 ;;		_PulseClockData
  6212 ;;		_soWrite
  6213 ;;		_ssdUpdate
  6214 ;;		_rgbColor
  6215 ;;		_turnOn
  6216 ;;		_turnOff
  6217 ;; This function uses a non-reentrant model
  6218 ;;
  6219                           
  6220                           	psect	text50
  6221  000B72                     __ptext50:
  6222                           	callstack 0
  6223  000B72                     _digitalWrite:
  6224                           	callstack 27
  6225  000B72                     
  6226                           ;io.c: 16:     if(pin <8){
  6227  000B72  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6228  000B74  EFC7  F005         	goto	u1590
  6229  000B78  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6230  000B7A  E107               	bnz	u1591
  6231  000B7C  0E08               	movlw	8
  6232  000B7E  5C01               	subwf	digitalWrite@pin^0,w,c
  6233  000B80  B0D8               	btfsc	status,0,c
  6234  000B82  EFC5  F005         	goto	u1591
  6235  000B86  EFC7  F005         	goto	u1590
  6236  000B8A                     u1591:
  6237  000B8A  EFF1  F005         	goto	l2445
  6238  000B8E                     u1590:
  6239  000B8E                     
  6240                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  6241  000B8E  5003               	movf	digitalWrite@value^0,w,c
  6242  000B90  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6243  000B92  B4D8               	btfsc	status,2,c
  6244  000B94  EFCE  F005         	goto	u1601
  6245  000B98  EFD0  F005         	goto	u1600
  6246  000B9C                     u1601:
  6247  000B9C  EFE0  F005         	goto	l2443
  6248  000BA0                     u1600:
  6249  000BA0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6250  000BA4  0E01               	movlw	1
  6251  000BA6  6E06               	movwf	(??_digitalWrite+1)^0,c
  6252  000BA8  2A05               	incf	??_digitalWrite^0,f,c
  6253  000BAA  EFD9  F005         	goto	u1614
  6254  000BAE                     u1615:
  6255  000BAE  90D8               	bcf	status,0,c
  6256  000BB0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6257  000BB2                     u1614:
  6258  000BB2  2E05               	decfsz	??_digitalWrite^0,f,c
  6259  000BB4  EFD7  F005         	goto	u1615
  6260  000BB8  5006               	movf	(??_digitalWrite+1)^0,w,c
  6261  000BBA  1280               	iorwf	128,f,c	;volatile
  6262  000BBC  EFDF  F006         	goto	l173
  6263  000BC0                     l2443:
  6264  000BC0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6265  000BC4  0E01               	movlw	1
  6266  000BC6  6E06               	movwf	(??_digitalWrite+1)^0,c
  6267  000BC8  2A05               	incf	??_digitalWrite^0,f,c
  6268  000BCA  EFE9  F005         	goto	u1624
  6269  000BCE                     u1625:
  6270  000BCE  90D8               	bcf	status,0,c
  6271  000BD0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6272  000BD2                     u1624:
  6273  000BD2  2E05               	decfsz	??_digitalWrite^0,f,c
  6274  000BD4  EFE7  F005         	goto	u1625
  6275  000BD8  5006               	movf	(??_digitalWrite+1)^0,w,c
  6276  000BDA  0AFF               	xorlw	255
  6277  000BDC  1680               	andwf	128,f,c	;volatile
  6278  000BDE  EFDF  F006         	goto	l173
  6279  000BE2                     l2445:
  6280  000BE2  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6281  000BE4  EFFF  F005         	goto	u1630
  6282  000BE8  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6283  000BEA  E107               	bnz	u1631
  6284  000BEC  0E10               	movlw	16
  6285  000BEE  5C01               	subwf	digitalWrite@pin^0,w,c
  6286  000BF0  B0D8               	btfsc	status,0,c
  6287  000BF2  EFFD  F005         	goto	u1631
  6288  000BF6  EFFF  F005         	goto	u1630
  6289  000BFA                     u1631:
  6290  000BFA  EF2D  F006         	goto	l2453
  6291  000BFE                     u1630:
  6292  000BFE                     
  6293                           ;io.c: 20:         pin -=8;
  6294  000BFE  0EF8               	movlw	248
  6295  000C00  2601               	addwf	digitalWrite@pin^0,f,c
  6296  000C02  0EFF               	movlw	255
  6297  000C04  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  6298                           
  6299                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  6300  000C06  5003               	movf	digitalWrite@value^0,w,c
  6301  000C08  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6302  000C0A  B4D8               	btfsc	status,2,c
  6303  000C0C  EF0A  F006         	goto	u1641
  6304  000C10  EF0C  F006         	goto	u1640
  6305  000C14                     u1641:
  6306  000C14  EF1C  F006         	goto	l2451
  6307  000C18                     u1640:
  6308  000C18  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6309  000C1C  0E01               	movlw	1
  6310  000C1E  6E06               	movwf	(??_digitalWrite+1)^0,c
  6311  000C20  2A05               	incf	??_digitalWrite^0,f,c
  6312  000C22  EF15  F006         	goto	u1654
  6313  000C26                     u1655:
  6314  000C26  90D8               	bcf	status,0,c
  6315  000C28  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6316  000C2A                     u1654:
  6317  000C2A  2E05               	decfsz	??_digitalWrite^0,f,c
  6318  000C2C  EF13  F006         	goto	u1655
  6319  000C30  5006               	movf	(??_digitalWrite+1)^0,w,c
  6320  000C32  1281               	iorwf	129,f,c	;volatile
  6321  000C34  EFDF  F006         	goto	l173
  6322  000C38                     l2451:
  6323  000C38  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6324  000C3C  0E01               	movlw	1
  6325  000C3E  6E06               	movwf	(??_digitalWrite+1)^0,c
  6326  000C40  2A05               	incf	??_digitalWrite^0,f,c
  6327  000C42  EF25  F006         	goto	u1664
  6328  000C46                     u1665:
  6329  000C46  90D8               	bcf	status,0,c
  6330  000C48  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6331  000C4A                     u1664:
  6332  000C4A  2E05               	decfsz	??_digitalWrite^0,f,c
  6333  000C4C  EF23  F006         	goto	u1665
  6334  000C50  5006               	movf	(??_digitalWrite+1)^0,w,c
  6335  000C52  0AFF               	xorlw	255
  6336  000C54  1681               	andwf	129,f,c	;volatile
  6337  000C56  EFDF  F006         	goto	l173
  6338  000C5A                     l2453:
  6339  000C5A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6340  000C5C  EF3B  F006         	goto	u1670
  6341  000C60  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6342  000C62  E107               	bnz	u1671
  6343  000C64  0E18               	movlw	24
  6344  000C66  5C01               	subwf	digitalWrite@pin^0,w,c
  6345  000C68  B0D8               	btfsc	status,0,c
  6346  000C6A  EF39  F006         	goto	u1671
  6347  000C6E  EF3B  F006         	goto	u1670
  6348  000C72                     u1671:
  6349  000C72  EF69  F006         	goto	l2461
  6350  000C76                     u1670:
  6351  000C76                     
  6352                           ;io.c: 24:         pin -=16;
  6353  000C76  0EF0               	movlw	240
  6354  000C78  2601               	addwf	digitalWrite@pin^0,f,c
  6355  000C7A  0EFF               	movlw	255
  6356  000C7C  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  6357                           
  6358                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  6359  000C7E  5003               	movf	digitalWrite@value^0,w,c
  6360  000C80  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6361  000C82  B4D8               	btfsc	status,2,c
  6362  000C84  EF46  F006         	goto	u1681
  6363  000C88  EF48  F006         	goto	u1680
  6364  000C8C                     u1681:
  6365  000C8C  EF58  F006         	goto	l2459
  6366  000C90                     u1680:
  6367  000C90  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6368  000C94  0E01               	movlw	1
  6369  000C96  6E06               	movwf	(??_digitalWrite+1)^0,c
  6370  000C98  2A05               	incf	??_digitalWrite^0,f,c
  6371  000C9A  EF51  F006         	goto	u1694
  6372  000C9E                     u1695:
  6373  000C9E  90D8               	bcf	status,0,c
  6374  000CA0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6375  000CA2                     u1694:
  6376  000CA2  2E05               	decfsz	??_digitalWrite^0,f,c
  6377  000CA4  EF4F  F006         	goto	u1695
  6378  000CA8  5006               	movf	(??_digitalWrite+1)^0,w,c
  6379  000CAA  1282               	iorwf	130,f,c	;volatile
  6380  000CAC  EFDF  F006         	goto	l173
  6381  000CB0                     l2459:
  6382  000CB0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6383  000CB4  0E01               	movlw	1
  6384  000CB6  6E06               	movwf	(??_digitalWrite+1)^0,c
  6385  000CB8  2A05               	incf	??_digitalWrite^0,f,c
  6386  000CBA  EF61  F006         	goto	u1704
  6387  000CBE                     u1705:
  6388  000CBE  90D8               	bcf	status,0,c
  6389  000CC0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6390  000CC2                     u1704:
  6391  000CC2  2E05               	decfsz	??_digitalWrite^0,f,c
  6392  000CC4  EF5F  F006         	goto	u1705
  6393  000CC8  5006               	movf	(??_digitalWrite+1)^0,w,c
  6394  000CCA  0AFF               	xorlw	255
  6395  000CCC  1682               	andwf	130,f,c	;volatile
  6396  000CCE  EFDF  F006         	goto	l173
  6397  000CD2                     l2461:
  6398  000CD2  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6399  000CD4  EF77  F006         	goto	u1710
  6400  000CD8  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6401  000CDA  E107               	bnz	u1711
  6402  000CDC  0E20               	movlw	32
  6403  000CDE  5C01               	subwf	digitalWrite@pin^0,w,c
  6404  000CE0  B0D8               	btfsc	status,0,c
  6405  000CE2  EF75  F006         	goto	u1711
  6406  000CE6  EF77  F006         	goto	u1710
  6407  000CEA                     u1711:
  6408  000CEA  EFA5  F006         	goto	l2469
  6409  000CEE                     u1710:
  6410  000CEE                     
  6411                           ;io.c: 28:         pin -=24;
  6412  000CEE  0EE8               	movlw	232
  6413  000CF0  2601               	addwf	digitalWrite@pin^0,f,c
  6414  000CF2  0EFF               	movlw	255
  6415  000CF4  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  6416                           
  6417                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  6418  000CF6  5003               	movf	digitalWrite@value^0,w,c
  6419  000CF8  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6420  000CFA  B4D8               	btfsc	status,2,c
  6421  000CFC  EF82  F006         	goto	u1721
  6422  000D00  EF84  F006         	goto	u1720
  6423  000D04                     u1721:
  6424  000D04  EF94  F006         	goto	l2467
  6425  000D08                     u1720:
  6426  000D08  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6427  000D0C  0E01               	movlw	1
  6428  000D0E  6E06               	movwf	(??_digitalWrite+1)^0,c
  6429  000D10  2A05               	incf	??_digitalWrite^0,f,c
  6430  000D12  EF8D  F006         	goto	u1734
  6431  000D16                     u1735:
  6432  000D16  90D8               	bcf	status,0,c
  6433  000D18  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6434  000D1A                     u1734:
  6435  000D1A  2E05               	decfsz	??_digitalWrite^0,f,c
  6436  000D1C  EF8B  F006         	goto	u1735
  6437  000D20  5006               	movf	(??_digitalWrite+1)^0,w,c
  6438  000D22  1283               	iorwf	131,f,c	;volatile
  6439  000D24  EFDF  F006         	goto	l173
  6440  000D28                     l2467:
  6441  000D28  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6442  000D2C  0E01               	movlw	1
  6443  000D2E  6E06               	movwf	(??_digitalWrite+1)^0,c
  6444  000D30  2A05               	incf	??_digitalWrite^0,f,c
  6445  000D32  EF9D  F006         	goto	u1744
  6446  000D36                     u1745:
  6447  000D36  90D8               	bcf	status,0,c
  6448  000D38  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6449  000D3A                     u1744:
  6450  000D3A  2E05               	decfsz	??_digitalWrite^0,f,c
  6451  000D3C  EF9B  F006         	goto	u1745
  6452  000D40  5006               	movf	(??_digitalWrite+1)^0,w,c
  6453  000D42  0AFF               	xorlw	255
  6454  000D44  1683               	andwf	131,f,c	;volatile
  6455  000D46  EFDF  F006         	goto	l173
  6456  000D4A                     l2469:
  6457  000D4A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6458  000D4C  EFB3  F006         	goto	u1750
  6459  000D50  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6460  000D52  E107               	bnz	u1751
  6461  000D54  0E28               	movlw	40
  6462  000D56  5C01               	subwf	digitalWrite@pin^0,w,c
  6463  000D58  B0D8               	btfsc	status,0,c
  6464  000D5A  EFB1  F006         	goto	u1751
  6465  000D5E  EFB3  F006         	goto	u1750
  6466  000D62                     u1751:
  6467  000D62  EFDF  F006         	goto	l173
  6468  000D66                     u1750:
  6469  000D66                     
  6470                           ;io.c: 32:         pin -=32;
  6471  000D66  0EE0               	movlw	224
  6472  000D68  2601               	addwf	digitalWrite@pin^0,f,c
  6473  000D6A  0EFF               	movlw	255
  6474  000D6C  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  6475                           
  6476                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  6477  000D6E  5003               	movf	digitalWrite@value^0,w,c
  6478  000D70  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6479  000D72  B4D8               	btfsc	status,2,c
  6480  000D74  EFBE  F006         	goto	u1761
  6481  000D78  EFC0  F006         	goto	u1760
  6482  000D7C                     u1761:
  6483  000D7C  EFD0  F006         	goto	l2475
  6484  000D80                     u1760:
  6485  000D80  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6486  000D84  0E01               	movlw	1
  6487  000D86  6E06               	movwf	(??_digitalWrite+1)^0,c
  6488  000D88  2A05               	incf	??_digitalWrite^0,f,c
  6489  000D8A  EFC9  F006         	goto	u1774
  6490  000D8E                     u1775:
  6491  000D8E  90D8               	bcf	status,0,c
  6492  000D90  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6493  000D92                     u1774:
  6494  000D92  2E05               	decfsz	??_digitalWrite^0,f,c
  6495  000D94  EFC7  F006         	goto	u1775
  6496  000D98  5006               	movf	(??_digitalWrite+1)^0,w,c
  6497  000D9A  1284               	iorwf	132,f,c	;volatile
  6498  000D9C  EFDF  F006         	goto	l173
  6499  000DA0                     l2475:
  6500  000DA0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6501  000DA4  0E01               	movlw	1
  6502  000DA6  6E06               	movwf	(??_digitalWrite+1)^0,c
  6503  000DA8  2A05               	incf	??_digitalWrite^0,f,c
  6504  000DAA  EFD9  F006         	goto	u1784
  6505  000DAE                     u1785:
  6506  000DAE  90D8               	bcf	status,0,c
  6507  000DB0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6508  000DB2                     u1784:
  6509  000DB2  2E05               	decfsz	??_digitalWrite^0,f,c
  6510  000DB4  EFD7  F006         	goto	u1785
  6511  000DB8  5006               	movf	(??_digitalWrite+1)^0,w,c
  6512  000DBA  0AFF               	xorlw	255
  6513  000DBC  1684               	andwf	132,f,c	;volatile
  6514  000DBE                     l173:
  6515  000DBE  0012               	return		;funcret
  6516  000DC0                     __end_of_digitalWrite:
  6517                           	callstack 0
  6518                           
  6519 ;; *************** function _I2C_delay *****************
  6520 ;; Defined at:
  6521 ;;		line 22 in file "i2c.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;		None
  6524 ;; Auto vars:     Size  Location     Type
  6525 ;;  i               2    0        int 
  6526 ;;  v               2    0        volatile int 
  6527 ;; Return value:  Size  Location     Type
  6528 ;;                  1    wreg      void 
  6529 ;; Registers used:
  6530 ;;		None
  6531 ;; Tracked objects:
  6532 ;;		On entry : 0/0
  6533 ;;		On exit  : 0/0
  6534 ;;		Unchanged: 0/0
  6535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6536 ;;      Params:         0       0       0       0       0       0       0
  6537 ;;      Locals:         0       0       0       0       0       0       0
  6538 ;;      Temps:          0       0       0       0       0       0       0
  6539 ;;      Totals:         0       0       0       0       0       0       0
  6540 ;;Total ram usage:        0 bytes
  6541 ;; Hardware stack levels used: 1
  6542 ;; This function calls:
  6543 ;;		Nothing
  6544 ;; This function is called by:
  6545 ;;		_i2c_start
  6546 ;;		_i2c_stop
  6547 ;;		_i2c_write_bit
  6548 ;;		_i2c_read_bit
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552                           	psect	text51
  6553  002664                     __ptext51:
  6554                           	callstack 0
  6555  002664                     _I2C_delay:
  6556                           	callstack 26
  6557  002664  0012               	return		;funcret
  6558  002666                     __end_of_I2C_delay:
  6559                           	callstack 0
  6560                           
  6561 ;; *************** function _bcd2dec *****************
  6562 ;; Defined at:
  6563 ;;		line 12 in file "ds1307.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;  value           2   32[COMRAM] int 
  6566 ;; Auto vars:     Size  Location     Type
  6567 ;;		None
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  2   32[COMRAM] int 
  6570 ;; Registers used:
  6571 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6577 ;;      Params:         2       0       0       0       0       0       0
  6578 ;;      Locals:         0       0       0       0       0       0       0
  6579 ;;      Temps:          2       0       0       0       0       0       0
  6580 ;;      Totals:         4       0       0       0       0       0       0
  6581 ;;Total ram usage:        4 bytes
  6582 ;; Hardware stack levels used: 1
  6583 ;; Hardware stack levels required when called: 1
  6584 ;; This function calls:
  6585 ;;		___awdiv
  6586 ;;		___wmul
  6587 ;; This function is called by:
  6588 ;;		_mostrarMenuInicial
  6589 ;;		_atualizarHorarioEntrada
  6590 ;;		_atualizarHorarioSaida
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593                           
  6594                           	psect	text52
  6595  00213C                     __ptext52:
  6596                           	callstack 0
  6597  00213C                     _bcd2dec:
  6598                           	callstack 28
  6599  00213C                     
  6600                           ;ds1307.c: 13:  return ((value / 16 * 10) + (value % 16));
  6601  00213C  0E0F               	movlw	15
  6602  00213E  1421               	andwf	bcd2dec@value^0,w,c
  6603  002140  6E23               	movwf	??_bcd2dec^0,c
  6604  002142  0E00               	movlw	0
  6605  002144  1422               	andwf	(bcd2dec@value+1)^0,w,c
  6606  002146  6E24               	movwf	(??_bcd2dec+1)^0,c
  6607  002148  0E00               	movlw	0
  6608  00214A  6E16               	movwf	(___awdiv@divisor+1)^0,c
  6609  00214C  0E10               	movlw	16
  6610  00214E  6E15               	movwf	___awdiv@divisor^0,c
  6611  002150  C021  F013         	movff	bcd2dec@value,___awdiv@dividend
  6612  002154  C022  F014         	movff	bcd2dec@value+1,___awdiv@dividend+1
  6613  002158  EC96  F00C         	call	___awdiv	;wreg free
  6614  00215C  C013  F01B         	movff	?___awdiv,___wmul@multiplier
  6615  002160  C014  F01C         	movff	?___awdiv+1,___wmul@multiplier+1
  6616  002164  0E00               	movlw	0
  6617  002166  6E1E               	movwf	(___wmul@multiplicand+1)^0,c
  6618  002168  0E0A               	movlw	10
  6619  00216A  6E1D               	movwf	___wmul@multiplicand^0,c
  6620  00216C  ECC1  F012         	call	___wmul	;wreg free
  6621  002170  5023               	movf	??_bcd2dec^0,w,c
  6622  002172  241B               	addwf	?___wmul^0,w,c
  6623  002174  6E21               	movwf	?_bcd2dec^0,c
  6624  002176  5024               	movf	(??_bcd2dec+1)^0,w,c
  6625  002178  201C               	addwfc	(?___wmul+1)^0,w,c
  6626  00217A  6E22               	movwf	(?_bcd2dec+1)^0,c
  6627  00217C  0012               	return		;funcret
  6628  00217E                     __end_of_bcd2dec:
  6629                           	callstack 0
  6630                           
  6631 ;; *************** function ___awdiv *****************
  6632 ;; Defined at:
  6633 ;;		line 7 in file "E:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;  dividend        2   18[COMRAM] int 
  6636 ;;  divisor         2   20[COMRAM] int 
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;  quotient        2   24[COMRAM] int 
  6639 ;;  sign            1   23[COMRAM] unsigned char 
  6640 ;;  counter         1   22[COMRAM] unsigned char 
  6641 ;; Return value:  Size  Location     Type
  6642 ;;                  2   18[COMRAM] int 
  6643 ;; Registers used:
  6644 ;;		wreg, status,2, status,0
  6645 ;; Tracked objects:
  6646 ;;		On entry : 0/0
  6647 ;;		On exit  : 0/0
  6648 ;;		Unchanged: 0/0
  6649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6650 ;;      Params:         4       0       0       0       0       0       0
  6651 ;;      Locals:         4       0       0       0       0       0       0
  6652 ;;      Temps:          0       0       0       0       0       0       0
  6653 ;;      Totals:         8       0       0       0       0       0       0
  6654 ;;Total ram usage:        8 bytes
  6655 ;; Hardware stack levels used: 1
  6656 ;; This function calls:
  6657 ;;		Nothing
  6658 ;; This function is called by:
  6659 ;;		_bcd2dec
  6660 ;;		_mostrarMenuInicial
  6661 ;;		_atualizarHorarioEntrada
  6662 ;;		_atualizarTempoEstadia
  6663 ;;		_atualizarHorarioSaida
  6664 ;;		_dec2bcd
  6665 ;;		_lcdNumber
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           
  6669                           	psect	text53
  6670  00192C                     __ptext53:
  6671                           	callstack 0
  6672  00192C                     ___awdiv:
  6673                           	callstack 28
  6674  00192C  0E00               	movlw	0
  6675  00192E  6E18               	movwf	___awdiv@sign^0,c
  6676  001930  BE16               	btfsc	(___awdiv@divisor+1)^0,7,c
  6677  001932  EF9F  F00C         	goto	u2350
  6678  001936  EF9D  F00C         	goto	u2351
  6679  00193A                     u2351:
  6680  00193A  EFA5  F00C         	goto	l2791
  6681  00193E                     u2350:
  6682  00193E  6C15               	negf	___awdiv@divisor^0,c
  6683  001940  1E16               	comf	(___awdiv@divisor+1)^0,f,c
  6684  001942  B0D8               	btfsc	status,0,c
  6685  001944  2A16               	incf	(___awdiv@divisor+1)^0,f,c
  6686  001946  0E01               	movlw	1
  6687  001948  6E18               	movwf	___awdiv@sign^0,c
  6688  00194A                     l2791:
  6689  00194A  BE14               	btfsc	(___awdiv@dividend+1)^0,7,c
  6690  00194C  EFAC  F00C         	goto	u2360
  6691  001950  EFAA  F00C         	goto	u2361
  6692  001954                     u2361:
  6693  001954  EFB2  F00C         	goto	l2797
  6694  001958                     u2360:
  6695  001958  6C13               	negf	___awdiv@dividend^0,c
  6696  00195A  1E14               	comf	(___awdiv@dividend+1)^0,f,c
  6697  00195C  B0D8               	btfsc	status,0,c
  6698  00195E  2A14               	incf	(___awdiv@dividend+1)^0,f,c
  6699  001960  0E01               	movlw	1
  6700  001962  1A18               	xorwf	___awdiv@sign^0,f,c
  6701  001964                     l2797:
  6702  001964  0E00               	movlw	0
  6703  001966  6E1A               	movwf	(___awdiv@quotient+1)^0,c
  6704  001968  0E00               	movlw	0
  6705  00196A  6E19               	movwf	___awdiv@quotient^0,c
  6706  00196C  5015               	movf	___awdiv@divisor^0,w,c
  6707  00196E  1016               	iorwf	(___awdiv@divisor+1)^0,w,c
  6708  001970  B4D8               	btfsc	status,2,c
  6709  001972  EFBD  F00C         	goto	u2371
  6710  001976  EFBF  F00C         	goto	u2370
  6711  00197A                     u2371:
  6712  00197A  EFE7  F00C         	goto	l2819
  6713  00197E                     u2370:
  6714  00197E  0E01               	movlw	1
  6715  001980  6E17               	movwf	___awdiv@counter^0,c
  6716  001982  EFC7  F00C         	goto	l2805
  6717  001986                     l2803:
  6718  001986  90D8               	bcf	status,0,c
  6719  001988  3615               	rlcf	___awdiv@divisor^0,f,c
  6720  00198A  3616               	rlcf	(___awdiv@divisor+1)^0,f,c
  6721  00198C  2A17               	incf	___awdiv@counter^0,f,c
  6722  00198E                     l2805:
  6723  00198E  AE16               	btfss	(___awdiv@divisor+1)^0,7,c
  6724  001990  EFCC  F00C         	goto	u2381
  6725  001994  EFCE  F00C         	goto	u2380
  6726  001998                     u2381:
  6727  001998  EFC3  F00C         	goto	l2803
  6728  00199C                     u2380:
  6729  00199C                     l2807:
  6730  00199C  90D8               	bcf	status,0,c
  6731  00199E  3619               	rlcf	___awdiv@quotient^0,f,c
  6732  0019A0  361A               	rlcf	(___awdiv@quotient+1)^0,f,c
  6733  0019A2  5015               	movf	___awdiv@divisor^0,w,c
  6734  0019A4  5C13               	subwf	___awdiv@dividend^0,w,c
  6735  0019A6  5016               	movf	(___awdiv@divisor+1)^0,w,c
  6736  0019A8  5814               	subwfb	(___awdiv@dividend+1)^0,w,c
  6737  0019AA  A0D8               	btfss	status,0,c
  6738  0019AC  EFDA  F00C         	goto	u2391
  6739  0019B0  EFDC  F00C         	goto	u2390
  6740  0019B4                     u2391:
  6741  0019B4  EFE1  F00C         	goto	l2815
  6742  0019B8                     u2390:
  6743  0019B8  5015               	movf	___awdiv@divisor^0,w,c
  6744  0019BA  5E13               	subwf	___awdiv@dividend^0,f,c
  6745  0019BC  5016               	movf	(___awdiv@divisor+1)^0,w,c
  6746  0019BE  5A14               	subwfb	(___awdiv@dividend+1)^0,f,c
  6747  0019C0  8019               	bsf	___awdiv@quotient^0,0,c
  6748  0019C2                     l2815:
  6749  0019C2  90D8               	bcf	status,0,c
  6750  0019C4  3216               	rrcf	(___awdiv@divisor+1)^0,f,c
  6751  0019C6  3215               	rrcf	___awdiv@divisor^0,f,c
  6752  0019C8  2E17               	decfsz	___awdiv@counter^0,f,c
  6753  0019CA  EFCE  F00C         	goto	l2807
  6754  0019CE                     l2819:
  6755  0019CE  5018               	movf	___awdiv@sign^0,w,c
  6756  0019D0  B4D8               	btfsc	status,2,c
  6757  0019D2  EFED  F00C         	goto	u2401
  6758  0019D6  EFEF  F00C         	goto	u2400
  6759  0019DA                     u2401:
  6760  0019DA  EFF3  F00C         	goto	l2823
  6761  0019DE                     u2400:
  6762  0019DE  6C19               	negf	___awdiv@quotient^0,c
  6763  0019E0  1E1A               	comf	(___awdiv@quotient+1)^0,f,c
  6764  0019E2  B0D8               	btfsc	status,0,c
  6765  0019E4  2A1A               	incf	(___awdiv@quotient+1)^0,f,c
  6766  0019E6                     l2823:
  6767  0019E6  C019  F013         	movff	___awdiv@quotient,?___awdiv
  6768  0019EA  C01A  F014         	movff	___awdiv@quotient+1,?___awdiv+1
  6769  0019EE  0012               	return		;funcret
  6770  0019F0                     __end_of___awdiv:
  6771                           	callstack 0
  6772                           
  6773 ;; *************** function ___awmod *****************
  6774 ;; Defined at:
  6775 ;;		line 7 in file "E:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;  dividend        2   36[COMRAM] int 
  6778 ;;  divisor         2   38[COMRAM] int 
  6779 ;; Auto vars:     Size  Location     Type
  6780 ;;  sign            1   41[COMRAM] unsigned char 
  6781 ;;  counter         1   40[COMRAM] unsigned char 
  6782 ;; Return value:  Size  Location     Type
  6783 ;;                  2   36[COMRAM] int 
  6784 ;; Registers used:
  6785 ;;		wreg, status,2, status,0
  6786 ;; Tracked objects:
  6787 ;;		On entry : 0/0
  6788 ;;		On exit  : 0/0
  6789 ;;		Unchanged: 0/0
  6790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6791 ;;      Params:         4       0       0       0       0       0       0
  6792 ;;      Locals:         2       0       0       0       0       0       0
  6793 ;;      Temps:          0       0       0       0       0       0       0
  6794 ;;      Totals:         6       0       0       0       0       0       0
  6795 ;;Total ram usage:        6 bytes
  6796 ;; Hardware stack levels used: 1
  6797 ;; This function calls:
  6798 ;;		Nothing
  6799 ;; This function is called by:
  6800 ;;		_mostrarMenuInicial
  6801 ;;		_atualizarHorarioEntrada
  6802 ;;		_atualizarTempoEstadia
  6803 ;;		_atualizarHorarioSaida
  6804 ;;		_dec2bcd
  6805 ;;		_lcdNumber
  6806 ;;		_myLCDNumber
  6807 ;; This function uses a non-reentrant model
  6808 ;;
  6809                           
  6810                           	psect	text54
  6811  001AA4                     __ptext54:
  6812                           	callstack 0
  6813  001AA4                     ___awmod:
  6814                           	callstack 29
  6815  001AA4  0E00               	movlw	0
  6816  001AA6  6E2A               	movwf	___awmod@sign^0,c
  6817  001AA8  BE26               	btfsc	(___awmod@dividend+1)^0,7,c
  6818  001AAA  EF5B  F00D         	goto	u2700
  6819  001AAE  EF59  F00D         	goto	u2701
  6820  001AB2                     u2701:
  6821  001AB2  EF61  F00D         	goto	l3101
  6822  001AB6                     u2700:
  6823  001AB6  6C25               	negf	___awmod@dividend^0,c
  6824  001AB8  1E26               	comf	(___awmod@dividend+1)^0,f,c
  6825  001ABA  B0D8               	btfsc	status,0,c
  6826  001ABC  2A26               	incf	(___awmod@dividend+1)^0,f,c
  6827  001ABE  0E01               	movlw	1
  6828  001AC0  6E2A               	movwf	___awmod@sign^0,c
  6829  001AC2                     l3101:
  6830  001AC2  BE28               	btfsc	(___awmod@divisor+1)^0,7,c
  6831  001AC4  EF68  F00D         	goto	u2710
  6832  001AC8  EF66  F00D         	goto	u2711
  6833  001ACC                     u2711:
  6834  001ACC  EF6C  F00D         	goto	l3105
  6835  001AD0                     u2710:
  6836  001AD0  6C27               	negf	___awmod@divisor^0,c
  6837  001AD2  1E28               	comf	(___awmod@divisor+1)^0,f,c
  6838  001AD4  B0D8               	btfsc	status,0,c
  6839  001AD6  2A28               	incf	(___awmod@divisor+1)^0,f,c
  6840  001AD8                     l3105:
  6841  001AD8  5027               	movf	___awmod@divisor^0,w,c
  6842  001ADA  1028               	iorwf	(___awmod@divisor+1)^0,w,c
  6843  001ADC  B4D8               	btfsc	status,2,c
  6844  001ADE  EF73  F00D         	goto	u2721
  6845  001AE2  EF75  F00D         	goto	u2720
  6846  001AE6                     u2721:
  6847  001AE6  EF99  F00D         	goto	l3121
  6848  001AEA                     u2720:
  6849  001AEA  0E01               	movlw	1
  6850  001AEC  6E29               	movwf	___awmod@counter^0,c
  6851  001AEE  EF7D  F00D         	goto	l3111
  6852  001AF2                     l3109:
  6853  001AF2  90D8               	bcf	status,0,c
  6854  001AF4  3627               	rlcf	___awmod@divisor^0,f,c
  6855  001AF6  3628               	rlcf	(___awmod@divisor+1)^0,f,c
  6856  001AF8  2A29               	incf	___awmod@counter^0,f,c
  6857  001AFA                     l3111:
  6858  001AFA  AE28               	btfss	(___awmod@divisor+1)^0,7,c
  6859  001AFC  EF82  F00D         	goto	u2731
  6860  001B00  EF84  F00D         	goto	u2730
  6861  001B04                     u2731:
  6862  001B04  EF79  F00D         	goto	l3109
  6863  001B08                     u2730:
  6864  001B08                     l3113:
  6865  001B08  5027               	movf	___awmod@divisor^0,w,c
  6866  001B0A  5C25               	subwf	___awmod@dividend^0,w,c
  6867  001B0C  5028               	movf	(___awmod@divisor+1)^0,w,c
  6868  001B0E  5826               	subwfb	(___awmod@dividend+1)^0,w,c
  6869  001B10  A0D8               	btfss	status,0,c
  6870  001B12  EF8D  F00D         	goto	u2741
  6871  001B16  EF8F  F00D         	goto	u2740
  6872  001B1A                     u2741:
  6873  001B1A  EF93  F00D         	goto	l3117
  6874  001B1E                     u2740:
  6875  001B1E  5027               	movf	___awmod@divisor^0,w,c
  6876  001B20  5E25               	subwf	___awmod@dividend^0,f,c
  6877  001B22  5028               	movf	(___awmod@divisor+1)^0,w,c
  6878  001B24  5A26               	subwfb	(___awmod@dividend+1)^0,f,c
  6879  001B26                     l3117:
  6880  001B26  90D8               	bcf	status,0,c
  6881  001B28  3228               	rrcf	(___awmod@divisor+1)^0,f,c
  6882  001B2A  3227               	rrcf	___awmod@divisor^0,f,c
  6883  001B2C  2E29               	decfsz	___awmod@counter^0,f,c
  6884  001B2E  EF84  F00D         	goto	l3113
  6885  001B32                     l3121:
  6886  001B32  502A               	movf	___awmod@sign^0,w,c
  6887  001B34  B4D8               	btfsc	status,2,c
  6888  001B36  EF9F  F00D         	goto	u2751
  6889  001B3A  EFA1  F00D         	goto	u2750
  6890  001B3E                     u2751:
  6891  001B3E  EFA5  F00D         	goto	l3125
  6892  001B42                     u2750:
  6893  001B42  6C25               	negf	___awmod@dividend^0,c
  6894  001B44  1E26               	comf	(___awmod@dividend+1)^0,f,c
  6895  001B46  B0D8               	btfsc	status,0,c
  6896  001B48  2A26               	incf	(___awmod@dividend+1)^0,f,c
  6897  001B4A                     l3125:
  6898  001B4A  C025  F025         	movff	___awmod@dividend,?___awmod
  6899  001B4E  C026  F026         	movff	___awmod@dividend+1,?___awmod+1
  6900  001B52  0012               	return		;funcret
  6901  001B54                     __end_of___awmod:
  6902                           	callstack 0
  6903                           
  6904 ;; *************** function _ativarBuzzer *****************
  6905 ;; Defined at:
  6906 ;;		line 140 in file "main.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;		None
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;		None
  6911 ;; Return value:  Size  Location     Type
  6912 ;;                  1    wreg      void 
  6913 ;; Registers used:
  6914 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6915 ;; Tracked objects:
  6916 ;;		On entry : 0/0
  6917 ;;		On exit  : 0/0
  6918 ;;		Unchanged: 0/0
  6919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6920 ;;      Params:         0       0       0       0       0       0       0
  6921 ;;      Locals:         0       0       0       0       0       0       0
  6922 ;;      Temps:          0       0       0       0       0       0       0
  6923 ;;      Totals:         0       0       0       0       0       0       0
  6924 ;;Total ram usage:        0 bytes
  6925 ;; Hardware stack levels used: 1
  6926 ;; Hardware stack levels required when called: 2
  6927 ;; This function calls:
  6928 ;;		_atrasar
  6929 ;;		_pwmSet
  6930 ;; This function is called by:
  6931 ;;		_main
  6932 ;; This function uses a non-reentrant model
  6933 ;;
  6934                           
  6935                           	psect	text55
  6936  002462                     __ptext55:
  6937                           	callstack 0
  6938  002462                     _ativarBuzzer:
  6939                           	callstack 28
  6940  002462                     
  6941                           ;main.c: 141:     pwmSet(100);
  6942  002462  0E64               	movlw	100
  6943  002464  EC20  F00E         	call	_pwmSet
  6944  002468                     
  6945                           ;main.c: 142:     atrasar(15);
  6946  002468  0E0F               	movlw	15
  6947  00246A  EC88  F00E         	call	_atrasar
  6948  00246E                     
  6949                           ;main.c: 143:     pwmSet(0);
  6950  00246E  0E00               	movlw	0
  6951  002470  EC20  F00E         	call	_pwmSet
  6952                           
  6953                           ;main.c: 144:     atrasar(15);
  6954  002474  0E0F               	movlw	15
  6955  002476  EC88  F00E         	call	_atrasar
  6956  00247A                     
  6957                           ;main.c: 145:     pwmSet(100);
  6958  00247A  0E64               	movlw	100
  6959  00247C  EC20  F00E         	call	_pwmSet
  6960  002480                     
  6961                           ;main.c: 146:     atrasar(15);
  6962  002480  0E0F               	movlw	15
  6963  002482  EC88  F00E         	call	_atrasar
  6964                           
  6965                           ;main.c: 147:     pwmSet(0);
  6966  002486  0E00               	movlw	0
  6967  002488  EC20  F00E         	call	_pwmSet
  6968  00248C  0012               	return		;funcret
  6969  00248E                     __end_of_ativarBuzzer:
  6970                           	callstack 0
  6971                           
  6972 ;; *************** function _pwmSet *****************
  6973 ;; Defined at:
  6974 ;;		line 24 in file "pwm.c"
  6975 ;; Parameters:    Size  Location     Type
  6976 ;;  porcento        1    wreg     unsigned char 
  6977 ;; Auto vars:     Size  Location     Type
  6978 ;;  porcento        1   34[COMRAM] unsigned char 
  6979 ;;  val             2   35[COMRAM] unsigned int 
  6980 ;; Return value:  Size  Location     Type
  6981 ;;                  1    wreg      void 
  6982 ;; Registers used:
  6983 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6984 ;; Tracked objects:
  6985 ;;		On entry : 0/0
  6986 ;;		On exit  : 0/0
  6987 ;;		Unchanged: 0/0
  6988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6989 ;;      Params:         0       0       0       0       0       0       0
  6990 ;;      Locals:         3       0       0       0       0       0       0
  6991 ;;      Temps:          2       0       0       0       0       0       0
  6992 ;;      Totals:         5       0       0       0       0       0       0
  6993 ;;Total ram usage:        5 bytes
  6994 ;; Hardware stack levels used: 1
  6995 ;; Hardware stack levels required when called: 1
  6996 ;; This function calls:
  6997 ;;		___lwdiv
  6998 ;;		___wmul
  6999 ;; This function is called by:
  7000 ;;		_ativarBuzzer
  7001 ;; This function uses a non-reentrant model
  7002 ;;
  7003                           
  7004                           	psect	text56
  7005  001C40                     __ptext56:
  7006                           	callstack 0
  7007  001C40                     _pwmSet:
  7008                           	callstack 28
  7009                           
  7010                           ;incstack = 0
  7011                           ;pwmSet@porcento stored from wreg
  7012  001C40  6E23               	movwf	pwmSet@porcento^0,c
  7013  001C42                     
  7014                           ;pwm.c: 24: void pwmSet(unsigned char porcento);pwm.c: 25: {;pwm.c: 31:  unsigned int va
      +                          l = ((unsigned int)porcento) *(PR2+1);
  7015  001C42  0E01               	movlw	1
  7016  001C44  24CB               	addwf	203,w,c	;volatile
  7017  001C46  6E1B               	movwf	___wmul@multiplier^0,c
  7018  001C48  6A1C               	clrf	(___wmul@multiplier+1)^0,c
  7019  001C4A  0E00               	movlw	0
  7020  001C4C  221C               	addwfc	(___wmul@multiplier+1)^0,f,c
  7021  001C4E  C023  F01D         	movff	pwmSet@porcento,___wmul@multiplicand
  7022  001C52  6A1E               	clrf	(___wmul@multiplicand+1)^0,c
  7023  001C54  ECC1  F012         	call	___wmul	;wreg free
  7024  001C58  C01B  F024         	movff	?___wmul,pwmSet@val
  7025  001C5C  C01C  F025         	movff	?___wmul+1,pwmSet@val+1
  7026  001C60                     
  7027                           ;pwm.c: 33:     val = val / 25;
  7028  001C60  C024  F001         	movff	pwmSet@val,___lwdiv@dividend
  7029  001C64  C025  F002         	movff	pwmSet@val+1,___lwdiv@dividend+1
  7030  001C68  0E00               	movlw	0
  7031  001C6A  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  7032  001C6C  0E19               	movlw	25
  7033  001C6E  6E03               	movwf	___lwdiv@divisor^0,c
  7034  001C70  ECE6  F00D         	call	___lwdiv	;wreg free
  7035  001C74  C001  F024         	movff	?___lwdiv,pwmSet@val
  7036  001C78  C002  F025         	movff	?___lwdiv+1,pwmSet@val+1
  7037  001C7C                     
  7038                           ;pwm.c: 35:  val &= 0x03ff;
  7039  001C7C  0EFF               	movlw	255
  7040  001C7E  1624               	andwf	pwmSet@val^0,f,c
  7041  001C80  0E03               	movlw	3
  7042  001C82  1625               	andwf	(pwmSet@val+1)^0,f,c
  7043  001C84                     
  7044                           ;pwm.c: 37:  CCPR2L = val >> 2;
  7045  001C84  C024  F021         	movff	pwmSet@val,??_pwmSet
  7046  001C88  C025  F022         	movff	pwmSet@val+1,??_pwmSet+1
  7047  001C8C  90D8               	bcf	status,0,c
  7048  001C8E  3222               	rrcf	(??_pwmSet+1)^0,f,c
  7049  001C90  3221               	rrcf	??_pwmSet^0,f,c
  7050  001C92  90D8               	bcf	status,0,c
  7051  001C94  3222               	rrcf	(??_pwmSet+1)^0,f,c
  7052  001C96  3221               	rrcf	??_pwmSet^0,f,c
  7053  001C98  5021               	movf	??_pwmSet^0,w,c
  7054  001C9A  6EBB               	movwf	187,c	;volatile
  7055  001C9C                     
  7056                           ;pwm.c: 39:  CCP2CON |= (val & 0x0003) << 4;
  7057  001C9C  C024  F021         	movff	pwmSet@val,??_pwmSet	;volatile
  7058  001CA0  0E03               	movlw	3
  7059  001CA2  1621               	andwf	??_pwmSet^0,f,c
  7060  001CA4  3821               	swapf	??_pwmSet^0,w,c
  7061  001CA6  0BF0               	andlw	240
  7062  001CA8  12BA               	iorwf	186,f,c	;volatile
  7063  001CAA  0012               	return		;funcret
  7064  001CAC                     __end_of_pwmSet:
  7065                           	callstack 0
  7066                           
  7067 ;; *************** function ___wmul *****************
  7068 ;; Defined at:
  7069 ;;		line 15 in file "E:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;  multiplier      2   26[COMRAM] unsigned int 
  7072 ;;  multiplicand    2   28[COMRAM] unsigned int 
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;  product         2   30[COMRAM] unsigned int 
  7075 ;; Return value:  Size  Location     Type
  7076 ;;                  2   26[COMRAM] unsigned int 
  7077 ;; Registers used:
  7078 ;;		wreg, status,2, status,0, prodl, prodh
  7079 ;; Tracked objects:
  7080 ;;		On entry : 0/0
  7081 ;;		On exit  : 0/0
  7082 ;;		Unchanged: 0/0
  7083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7084 ;;      Params:         4       0       0       0       0       0       0
  7085 ;;      Locals:         2       0       0       0       0       0       0
  7086 ;;      Temps:          0       0       0       0       0       0       0
  7087 ;;      Totals:         6       0       0       0       0       0       0
  7088 ;;Total ram usage:        6 bytes
  7089 ;; Hardware stack levels used: 1
  7090 ;; This function calls:
  7091 ;;		Nothing
  7092 ;; This function is called by:
  7093 ;;		_bcd2dec
  7094 ;;		_pwmSet
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           
  7098                           	psect	text57
  7099  002582                     __ptext57:
  7100                           	callstack 0
  7101  002582                     ___wmul:
  7102                           	callstack 28
  7103  002582  501B               	movf	___wmul@multiplier^0,w,c
  7104  002584  021D               	mulwf	___wmul@multiplicand^0,c
  7105  002586  CFF3 F01F          	movff	prodl,___wmul@product
  7106  00258A  CFF4 F020          	movff	prodh,___wmul@product+1
  7107  00258E  501B               	movf	___wmul@multiplier^0,w,c
  7108  002590  021E               	mulwf	(___wmul@multiplicand+1)^0,c
  7109  002592  50F3               	movf	243,w,c
  7110  002594  2620               	addwf	(___wmul@product+1)^0,f,c
  7111  002596  501C               	movf	(___wmul@multiplier+1)^0,w,c
  7112  002598  021D               	mulwf	___wmul@multiplicand^0,c
  7113  00259A  50F3               	movf	243,w,c
  7114  00259C  2620               	addwf	(___wmul@product+1)^0,f,c
  7115  00259E  C01F  F01B         	movff	___wmul@product,?___wmul
  7116  0025A2  C020  F01C         	movff	___wmul@product+1,?___wmul+1
  7117  0025A6  0012               	return		;funcret
  7118  0025A8                     __end_of___wmul:
  7119                           	callstack 0
  7120                           
  7121 ;; *************** function ___lwdiv *****************
  7122 ;; Defined at:
  7123 ;;		line 7 in file "E:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;  dividend        2    0[COMRAM] unsigned int 
  7126 ;;  divisor         2    2[COMRAM] unsigned int 
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;  quotient        2    4[COMRAM] unsigned int 
  7129 ;;  counter         1    6[COMRAM] unsigned char 
  7130 ;; Return value:  Size  Location     Type
  7131 ;;                  2    0[COMRAM] unsigned int 
  7132 ;; Registers used:
  7133 ;;		wreg, status,2, status,0
  7134 ;; Tracked objects:
  7135 ;;		On entry : 0/0
  7136 ;;		On exit  : 0/0
  7137 ;;		Unchanged: 0/0
  7138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7139 ;;      Params:         4       0       0       0       0       0       0
  7140 ;;      Locals:         3       0       0       0       0       0       0
  7141 ;;      Temps:          0       0       0       0       0       0       0
  7142 ;;      Totals:         7       0       0       0       0       0       0
  7143 ;;Total ram usage:        7 bytes
  7144 ;; Hardware stack levels used: 1
  7145 ;; This function calls:
  7146 ;;		Nothing
  7147 ;; This function is called by:
  7148 ;;		_pwmSet
  7149 ;;		_atualizarHorarioSaida
  7150 ;; This function uses a non-reentrant model
  7151 ;;
  7152                           
  7153                           	psect	text58
  7154  001BCC                     __ptext58:
  7155                           	callstack 0
  7156  001BCC                     ___lwdiv:
  7157                           	callstack 29
  7158  001BCC  0E00               	movlw	0
  7159  001BCE  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  7160  001BD0  0E00               	movlw	0
  7161  001BD2  6E05               	movwf	___lwdiv@quotient^0,c
  7162  001BD4  5003               	movf	___lwdiv@divisor^0,w,c
  7163  001BD6  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7164  001BD8  B4D8               	btfsc	status,2,c
  7165  001BDA  EFF1  F00D         	goto	u2411
  7166  001BDE  EFF3  F00D         	goto	u2410
  7167  001BE2                     u2411:
  7168  001BE2  EF1B  F00E         	goto	l1115
  7169  001BE6                     u2410:
  7170  001BE6  0E01               	movlw	1
  7171  001BE8  6E07               	movwf	___lwdiv@counter^0,c
  7172  001BEA  EFFB  F00D         	goto	l2835
  7173  001BEE                     l2833:
  7174  001BEE  90D8               	bcf	status,0,c
  7175  001BF0  3603               	rlcf	___lwdiv@divisor^0,f,c
  7176  001BF2  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7177  001BF4  2A07               	incf	___lwdiv@counter^0,f,c
  7178  001BF6                     l2835:
  7179  001BF6  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  7180  001BF8  EF00  F00E         	goto	u2421
  7181  001BFC  EF02  F00E         	goto	u2420
  7182  001C00                     u2421:
  7183  001C00  EFF7  F00D         	goto	l2833
  7184  001C04                     u2420:
  7185  001C04                     l2837:
  7186  001C04  90D8               	bcf	status,0,c
  7187  001C06  3605               	rlcf	___lwdiv@quotient^0,f,c
  7188  001C08  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7189  001C0A  5003               	movf	___lwdiv@divisor^0,w,c
  7190  001C0C  5C01               	subwf	___lwdiv@dividend^0,w,c
  7191  001C0E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  7192  001C10  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7193  001C12  A0D8               	btfss	status,0,c
  7194  001C14  EF0E  F00E         	goto	u2431
  7195  001C18  EF10  F00E         	goto	u2430
  7196  001C1C                     u2431:
  7197  001C1C  EF15  F00E         	goto	l2845
  7198  001C20                     u2430:
  7199  001C20  5003               	movf	___lwdiv@divisor^0,w,c
  7200  001C22  5E01               	subwf	___lwdiv@dividend^0,f,c
  7201  001C24  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  7202  001C26  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7203  001C28  8005               	bsf	___lwdiv@quotient^0,0,c
  7204  001C2A                     l2845:
  7205  001C2A  90D8               	bcf	status,0,c
  7206  001C2C  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7207  001C2E  3203               	rrcf	___lwdiv@divisor^0,f,c
  7208  001C30  2E07               	decfsz	___lwdiv@counter^0,f,c
  7209  001C32  EF02  F00E         	goto	l2837
  7210  001C36                     l1115:
  7211  001C36  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  7212  001C3A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7213  001C3E  0012               	return		;funcret
  7214  001C40                     __end_of___lwdiv:
  7215                           	callstack 0
  7216                           
  7217 ;; *************** function _atrasar *****************
  7218 ;; Defined at:
  7219 ;;		line 3 in file "delay.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;  delay           1    wreg     unsigned char 
  7222 ;; Auto vars:     Size  Location     Type
  7223 ;;  delay           1    0[COMRAM] unsigned char 
  7224 ;;  k               1    4[COMRAM] unsigned char 
  7225 ;;  j               1    3[COMRAM] unsigned char 
  7226 ;;  i               1    2[COMRAM] unsigned char 
  7227 ;;  t               1    1[COMRAM] unsigned char 
  7228 ;; Return value:  Size  Location     Type
  7229 ;;                  1    wreg      void 
  7230 ;; Registers used:
  7231 ;;		wreg, status,2, status,0
  7232 ;; Tracked objects:
  7233 ;;		On entry : 0/0
  7234 ;;		On exit  : 0/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7237 ;;      Params:         0       0       0       0       0       0       0
  7238 ;;      Locals:         5       0       0       0       0       0       0
  7239 ;;      Temps:          0       0       0       0       0       0       0
  7240 ;;      Totals:         5       0       0       0       0       0       0
  7241 ;;Total ram usage:        5 bytes
  7242 ;; Hardware stack levels used: 1
  7243 ;; This function calls:
  7244 ;;		Nothing
  7245 ;; This function is called by:
  7246 ;;		_ativarBuzzer
  7247 ;;		_atualizarHorarioSaida
  7248 ;; This function uses a non-reentrant model
  7249 ;;
  7250                           
  7251                           	psect	text59
  7252  001D10                     __ptext59:
  7253                           	callstack 0
  7254  001D10                     _atrasar:
  7255                           	callstack 29
  7256                           
  7257                           ;incstack = 0
  7258                           ;atrasar@delay stored from wreg
  7259  001D10  6E01               	movwf	atrasar@delay^0,c
  7260  001D12                     
  7261                           ;delay.c: 4:     unsigned char i, j, k, t;;delay.c: 15:     for(t = 0; t < delay; t++){
  7262  001D12  0E00               	movlw	0
  7263  001D14  6E02               	movwf	atrasar@t^0,c
  7264  001D16  EFAF  F00E         	goto	l2883
  7265  001D1A                     l2851:
  7266                           
  7267                           ;delay.c: 16:         for(i = 0; i < 100; i++){
  7268  001D1A  0E00               	movlw	0
  7269  001D1C  6E03               	movwf	atrasar@i^0,c
  7270  001D1E                     l2857:
  7271                           
  7272                           ;delay.c: 17:             for(j = 0; j < 41; j++){
  7273  001D1E  0E00               	movlw	0
  7274  001D20  6E04               	movwf	atrasar@j^0,c
  7275  001D22                     l2863:
  7276                           
  7277                           ;delay.c: 18:                 for(k = 0; k < 3; k++);
  7278  001D22  0E00               	movlw	0
  7279  001D24  6E05               	movwf	atrasar@k^0,c
  7280  001D26                     l2869:
  7281  001D26  2A05               	incf	atrasar@k^0,f,c
  7282  001D28  0E02               	movlw	2
  7283  001D2A  6405               	cpfsgt	atrasar@k^0,c
  7284  001D2C  EF9A  F00E         	goto	u2441
  7285  001D30  EF9C  F00E         	goto	u2440
  7286  001D34                     u2441:
  7287  001D34  EF93  F00E         	goto	l2869
  7288  001D38                     u2440:
  7289  001D38                     
  7290                           ;delay.c: 19:             }
  7291  001D38  2A04               	incf	atrasar@j^0,f,c
  7292  001D3A  0E28               	movlw	40
  7293  001D3C  6404               	cpfsgt	atrasar@j^0,c
  7294  001D3E  EFA3  F00E         	goto	u2451
  7295  001D42  EFA5  F00E         	goto	u2450
  7296  001D46                     u2451:
  7297  001D46  EF91  F00E         	goto	l2863
  7298  001D4A                     u2450:
  7299  001D4A                     
  7300                           ;delay.c: 20:         }
  7301  001D4A  2A03               	incf	atrasar@i^0,f,c
  7302  001D4C  0E63               	movlw	99
  7303  001D4E  6403               	cpfsgt	atrasar@i^0,c
  7304  001D50  EFAC  F00E         	goto	u2461
  7305  001D54  EFAE  F00E         	goto	u2460
  7306  001D58                     u2461:
  7307  001D58  EF8F  F00E         	goto	l2857
  7308  001D5C                     u2460:
  7309  001D5C                     
  7310                           ;delay.c: 21:     }
  7311  001D5C  2A02               	incf	atrasar@t^0,f,c
  7312  001D5E                     l2883:
  7313  001D5E  5001               	movf	atrasar@delay^0,w,c
  7314  001D60  5C02               	subwf	atrasar@t^0,w,c
  7315  001D62  A0D8               	btfss	status,0,c
  7316  001D64  EFB6  F00E         	goto	u2471
  7317  001D68  EFB8  F00E         	goto	u2470
  7318  001D6C                     u2471:
  7319  001D6C  EF8D  F00E         	goto	l2851
  7320  001D70                     u2470:
  7321  001D70  0012               	return		;funcret
  7322  001D72                     __end_of_atrasar:
  7323                           	callstack 0
  7324                           
  7325 ;; *************** function _acenderLedNaSequencia *****************
  7326 ;; Defined at:
  7327 ;;		line 208 in file "main.c"
  7328 ;; Parameters:    Size  Location     Type
  7329 ;;		None
  7330 ;; Auto vars:     Size  Location     Type
  7331 ;;		None
  7332 ;; Return value:  Size  Location     Type
  7333 ;;                  1    wreg      void 
  7334 ;; Registers used:
  7335 ;;		wreg, status,2, status,0, cstack
  7336 ;; Tracked objects:
  7337 ;;		On entry : 0/0
  7338 ;;		On exit  : 0/0
  7339 ;;		Unchanged: 0/0
  7340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7341 ;;      Params:         0       0       0       0       0       0       0
  7342 ;;      Locals:         0       0       0       0       0       0       0
  7343 ;;      Temps:          0       0       0       0       0       0       0
  7344 ;;      Totals:         0       0       0       0       0       0       0
  7345 ;;Total ram usage:        0 bytes
  7346 ;; Hardware stack levels used: 1
  7347 ;; Hardware stack levels required when called: 2
  7348 ;; This function calls:
  7349 ;;		_delay
  7350 ;;		_ledParaDireita
  7351 ;;		_ledParaEsquerda
  7352 ;; This function is called by:
  7353 ;;		_main
  7354 ;; This function uses a non-reentrant model
  7355 ;;
  7356                           
  7357                           	psect	text60
  7358  002646                     __ptext60:
  7359                           	callstack 0
  7360  002646                     _acenderLedNaSequencia:
  7361                           	callstack 28
  7362  002646                     
  7363                           ;main.c: 209:     ledParaDireita();
  7364  002646  EC1A  F012         	call	_ledParaDireita	;wreg free
  7365                           
  7366                           ;main.c: 210:     delay();
  7367  00264A  EC5B  F010         	call	_delay	;wreg free
  7368                           
  7369                           ;main.c: 211:     ledParaEsquerda();
  7370  00264E  EC03  F012         	call	_ledParaEsquerda	;wreg free
  7371  002652  0012               	return		;funcret
  7372  002654                     __end_of_acenderLedNaSequencia:
  7373                           	callstack 0
  7374                           
  7375 ;; *************** function _ledParaEsquerda *****************
  7376 ;; Defined at:
  7377 ;;		line 235 in file "main.c"
  7378 ;; Parameters:    Size  Location     Type
  7379 ;;		None
  7380 ;; Auto vars:     Size  Location     Type
  7381 ;;  x               1    3[COMRAM] unsigned char 
  7382 ;;  k               1    2[COMRAM] unsigned char 
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  1    wreg      void 
  7385 ;; Registers used:
  7386 ;;		wreg, status,2, status,0, cstack
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7392 ;;      Params:         0       0       0       0       0       0       0
  7393 ;;      Locals:         2       0       0       0       0       0       0
  7394 ;;      Temps:          0       0       0       0       0       0       0
  7395 ;;      Totals:         2       0       0       0       0       0       0
  7396 ;;Total ram usage:        2 bytes
  7397 ;; Hardware stack levels used: 1
  7398 ;; Hardware stack levels required when called: 1
  7399 ;; This function calls:
  7400 ;;		_delay
  7401 ;; This function is called by:
  7402 ;;		_acenderLedNaSequencia
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           
  7406                           	psect	text61
  7407  002406                     __ptext61:
  7408                           	callstack 0
  7409  002406                     _ledParaEsquerda:
  7410                           	callstack 28
  7411  002406                     
  7412                           ;main.c: 236:     delay();
  7413  002406  EC5B  F010         	call	_delay	;wreg free
  7414  00240A                     
  7415                           ;main.c: 237:     unsigned char k, x;;main.c: 238:     x = 0b10000000;
  7416  00240A  0E80               	movlw	128
  7417  00240C  6E04               	movwf	ledParaEsquerda@x^0,c
  7418  00240E                     
  7419                           ;main.c: 239:     for (k = 0; k < 8; k++) {
  7420  00240E  0E00               	movlw	0
  7421  002410  6E03               	movwf	ledParaEsquerda@k^0,c
  7422  002412                     l1983:
  7423                           
  7424                           ;main.c: 240:         delay();
  7425  002412  EC5B  F010         	call	_delay	;wreg free
  7426  002416                     
  7427                           ;main.c: 241:         PORTD = x;
  7428  002416  C004  FF83         	movff	ledParaEsquerda@x,3971	;volatile
  7429  00241A                     
  7430                           ;main.c: 242:         x = x >> 1;
  7431  00241A  90D8               	bcf	status,0,c
  7432  00241C  3004               	rrcf	ledParaEsquerda@x^0,w,c
  7433  00241E  6E04               	movwf	ledParaEsquerda@x^0,c
  7434  002420                     
  7435                           ;main.c: 243:     }
  7436  002420  2A03               	incf	ledParaEsquerda@k^0,f,c
  7437  002422  0E07               	movlw	7
  7438  002424  6403               	cpfsgt	ledParaEsquerda@k^0,c
  7439  002426  EF17  F012         	goto	u1111
  7440  00242A  EF19  F012         	goto	u1110
  7441  00242E                     u1111:
  7442  00242E  EF09  F012         	goto	l1983
  7443  002432                     u1110:
  7444  002432  0012               	return		;funcret
  7445  002434                     __end_of_ledParaEsquerda:
  7446                           	callstack 0
  7447                           
  7448 ;; *************** function _ledParaDireita *****************
  7449 ;; Defined at:
  7450 ;;		line 216 in file "main.c"
  7451 ;; Parameters:    Size  Location     Type
  7452 ;;		None
  7453 ;; Auto vars:     Size  Location     Type
  7454 ;;  x               1    3[COMRAM] unsigned char 
  7455 ;;  k               1    2[COMRAM] unsigned char 
  7456 ;; Return value:  Size  Location     Type
  7457 ;;                  1    wreg      void 
  7458 ;; Registers used:
  7459 ;;		wreg, status,2, status,0, cstack
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 0/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7465 ;;      Params:         0       0       0       0       0       0       0
  7466 ;;      Locals:         2       0       0       0       0       0       0
  7467 ;;      Temps:          0       0       0       0       0       0       0
  7468 ;;      Totals:         2       0       0       0       0       0       0
  7469 ;;Total ram usage:        2 bytes
  7470 ;; Hardware stack levels used: 1
  7471 ;; Hardware stack levels required when called: 1
  7472 ;; This function calls:
  7473 ;;		_delay
  7474 ;; This function is called by:
  7475 ;;		_acenderLedNaSequencia
  7476 ;; This function uses a non-reentrant model
  7477 ;;
  7478                           
  7479                           	psect	text62
  7480  002434                     __ptext62:
  7481                           	callstack 0
  7482  002434                     _ledParaDireita:
  7483                           	callstack 28
  7484  002434                     
  7485                           ;main.c: 217:     delay();
  7486  002434  EC5B  F010         	call	_delay	;wreg free
  7487  002438                     
  7488                           ;main.c: 218:     unsigned char k, x;;main.c: 219:     x = 0b10000001;
  7489  002438  0E81               	movlw	129
  7490  00243A  6E04               	movwf	ledParaDireita@x^0,c
  7491  00243C                     
  7492                           ;main.c: 220:     for (k = 0; k < 8; k++) {
  7493  00243C  0E00               	movlw	0
  7494  00243E  6E03               	movwf	ledParaDireita@k^0,c
  7495  002440                     l1963:
  7496                           
  7497                           ;main.c: 221:         delay();
  7498  002440  EC5B  F010         	call	_delay	;wreg free
  7499  002444                     
  7500                           ;main.c: 222:         PORTD = x;
  7501  002444  C004  FF83         	movff	ledParaDireita@x,3971	;volatile
  7502  002448                     
  7503                           ;main.c: 223:         x = x << 1;
  7504  002448  5004               	movf	ledParaDireita@x^0,w,c
  7505  00244A  2404               	addwf	ledParaDireita@x^0,w,c
  7506  00244C  6E04               	movwf	ledParaDireita@x^0,c
  7507  00244E                     
  7508                           ;main.c: 224:     }
  7509  00244E  2A03               	incf	ledParaDireita@k^0,f,c
  7510  002450  0E07               	movlw	7
  7511  002452  6403               	cpfsgt	ledParaDireita@k^0,c
  7512  002454  EF2E  F012         	goto	u1101
  7513  002458  EF30  F012         	goto	u1100
  7514  00245C                     u1101:
  7515  00245C  EF20  F012         	goto	l1963
  7516  002460                     u1100:
  7517  002460  0012               	return		;funcret
  7518  002462                     __end_of_ledParaDireita:
  7519                           	callstack 0
  7520                           
  7521 ;; *************** function _delay *****************
  7522 ;; Defined at:
  7523 ;;		line 227 in file "main.c"
  7524 ;; Parameters:    Size  Location     Type
  7525 ;;		None
  7526 ;; Auto vars:     Size  Location     Type
  7527 ;;  j               1    1[COMRAM] unsigned char 
  7528 ;;  i               1    0[COMRAM] unsigned char 
  7529 ;; Return value:  Size  Location     Type
  7530 ;;                  1    wreg      void 
  7531 ;; Registers used:
  7532 ;;		wreg, status,2, status,0
  7533 ;; Tracked objects:
  7534 ;;		On entry : 0/0
  7535 ;;		On exit  : 0/0
  7536 ;;		Unchanged: 0/0
  7537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7538 ;;      Params:         0       0       0       0       0       0       0
  7539 ;;      Locals:         2       0       0       0       0       0       0
  7540 ;;      Temps:          0       0       0       0       0       0       0
  7541 ;;      Totals:         2       0       0       0       0       0       0
  7542 ;;Total ram usage:        2 bytes
  7543 ;; Hardware stack levels used: 1
  7544 ;; This function calls:
  7545 ;;		Nothing
  7546 ;; This function is called by:
  7547 ;;		_acenderLedNaSequencia
  7548 ;;		_ledParaDireita
  7549 ;;		_ledParaEsquerda
  7550 ;; This function uses a non-reentrant model
  7551 ;;
  7552                           
  7553                           	psect	text63
  7554  0020B6                     __ptext63:
  7555                           	callstack 0
  7556  0020B6                     _delay:
  7557                           	callstack 28
  7558  0020B6                     
  7559                           ;main.c: 228:     char i, j;;main.c: 229:     for (i = 0; i < 255; i++) {
  7560  0020B6  0E00               	movlw	0
  7561  0020B8  6E01               	movwf	delay@i^0,c
  7562  0020BA                     l1643:
  7563                           
  7564                           ;main.c: 230:         for (j = 0; j < 255; j++);
  7565  0020BA  0E00               	movlw	0
  7566  0020BC  6E02               	movwf	delay@j^0,c
  7567  0020BE                     l1649:
  7568  0020BE  2A02               	incf	delay@j^0,f,c
  7569  0020C0  2802               	incf	delay@j^0,w,c
  7570  0020C2  A4D8               	btfss	status,2,c
  7571  0020C4  EF66  F010         	goto	u771
  7572  0020C8  EF68  F010         	goto	u770
  7573  0020CC                     u771:
  7574  0020CC  EF5F  F010         	goto	l1649
  7575  0020D0                     u770:
  7576  0020D0                     
  7577                           ;main.c: 231:         for (j = 0; j < 255; j++);
  7578  0020D0  0E00               	movlw	0
  7579  0020D2  6E02               	movwf	delay@j^0,c
  7580  0020D4                     l1659:
  7581  0020D4  2A02               	incf	delay@j^0,f,c
  7582  0020D6  2802               	incf	delay@j^0,w,c
  7583  0020D8  A4D8               	btfss	status,2,c
  7584  0020DA  EF71  F010         	goto	u781
  7585  0020DE  EF73  F010         	goto	u780
  7586  0020E2                     u781:
  7587  0020E2  EF6A  F010         	goto	l1659
  7588  0020E6                     u780:
  7589  0020E6                     
  7590                           ;main.c: 232:     }
  7591  0020E6  2A01               	incf	delay@i^0,f,c
  7592  0020E8  2801               	incf	delay@i^0,w,c
  7593  0020EA  A4D8               	btfss	status,2,c
  7594  0020EC  EF7A  F010         	goto	u791
  7595  0020F0  EF7C  F010         	goto	u790
  7596  0020F4                     u791:
  7597  0020F4  EF5D  F010         	goto	l1643
  7598  0020F8                     u790:
  7599  0020F8  0012               	return		;funcret
  7600  0020FA                     __end_of_delay:
  7601                           	callstack 0
  7602                           
  7603                           	psect	rparam
  7604  0000                     
  7605                           	psect	idloc
  7606                           
  7607                           ;Config register IDLOC0 @ 0x200000
  7608                           ;	unspecified, using default values
  7609  200000                     	org	2097152
  7610  200000  FF                 	db	255
  7611                           
  7612                           ;Config register IDLOC1 @ 0x200001
  7613                           ;	unspecified, using default values
  7614  200001                     	org	2097153
  7615  200001  FF                 	db	255
  7616                           
  7617                           ;Config register IDLOC2 @ 0x200002
  7618                           ;	unspecified, using default values
  7619  200002                     	org	2097154
  7620  200002  FF                 	db	255
  7621                           
  7622                           ;Config register IDLOC3 @ 0x200003
  7623                           ;	unspecified, using default values
  7624  200003                     	org	2097155
  7625  200003  FF                 	db	255
  7626                           
  7627                           ;Config register IDLOC4 @ 0x200004
  7628                           ;	unspecified, using default values
  7629  200004                     	org	2097156
  7630  200004  FF                 	db	255
  7631                           
  7632                           ;Config register IDLOC5 @ 0x200005
  7633                           ;	unspecified, using default values
  7634  200005                     	org	2097157
  7635  200005  FF                 	db	255
  7636                           
  7637                           ;Config register IDLOC6 @ 0x200006
  7638                           ;	unspecified, using default values
  7639  200006                     	org	2097158
  7640  200006  FF                 	db	255
  7641                           
  7642                           ;Config register IDLOC7 @ 0x200007
  7643                           ;	unspecified, using default values
  7644  200007                     	org	2097159
  7645  200007  FF                 	db	255
  7646                           
  7647                           	psect	config
  7648                           
  7649                           ; Padding undefined space
  7650  300000                     	org	3145728
  7651  300000  FF                 	db	255
  7652                           
  7653                           ;Config register CONFIG1H @ 0x300001
  7654                           ;	unspecified, using default values
  7655                           ;	Oscillator Selection bits
  7656                           ;	OSC = 0x7, unprogrammed default
  7657                           ;	Fail-Safe Clock Monitor Enable bit
  7658                           ;	FCMEN = 0x0, unprogrammed default
  7659                           ;	Internal/External Oscillator Switchover bit
  7660                           ;	IESO = 0x0, unprogrammed default
  7661  300001                     	org	3145729
  7662  300001  07                 	db	7
  7663                           
  7664                           ;Config register CONFIG2L @ 0x300002
  7665                           ;	unspecified, using default values
  7666                           ;	Power-up Timer Enable bit
  7667                           ;	PWRT = 0x1, unprogrammed default
  7668                           ;	Brown-out Reset Enable bits
  7669                           ;	BOREN = 0x3, unprogrammed default
  7670                           ;	Brown Out Reset Voltage bits
  7671                           ;	BORV = 0x3, unprogrammed default
  7672  300002                     	org	3145730
  7673  300002  1F                 	db	31
  7674                           
  7675                           ;Config register CONFIG2H @ 0x300003
  7676                           ;	unspecified, using default values
  7677                           ;	Watchdog Timer Enable bit
  7678                           ;	WDT = 0x1, unprogrammed default
  7679                           ;	Watchdog Timer Postscale Select bits
  7680                           ;	WDTPS = 0xF, unprogrammed default
  7681  300003                     	org	3145731
  7682  300003  1F                 	db	31
  7683                           
  7684                           ; Padding undefined space
  7685  300004                     	org	3145732
  7686  300004  FF                 	db	255
  7687                           
  7688                           ;Config register CONFIG3H @ 0x300005
  7689                           ;	unspecified, using default values
  7690                           ;	CCP2 MUX bit
  7691                           ;	CCP2MX = 0x1, unprogrammed default
  7692                           ;	PORTB A/D Enable bit
  7693                           ;	PBADEN = 0x1, unprogrammed default
  7694                           ;	Low-Power Timer1 Oscillator Enable bit
  7695                           ;	LPT1OSC = 0x0, unprogrammed default
  7696                           ;	MCLR Pin Enable bit
  7697                           ;	MCLRE = 0x1, unprogrammed default
  7698  300005                     	org	3145733
  7699  300005  83                 	db	131
  7700                           
  7701                           ;Config register CONFIG4L @ 0x300006
  7702                           ;	unspecified, using default values
  7703                           ;	Stack Full/Underflow Reset Enable bit
  7704                           ;	STVREN = 0x1, unprogrammed default
  7705                           ;	Single-Supply ICSP Enable bit
  7706                           ;	LVP = 0x1, unprogrammed default
  7707                           ;	Extended Instruction Set Enable bit
  7708                           ;	XINST = 0x0, unprogrammed default
  7709                           ;	Background Debugger Enable bit
  7710                           ;	DEBUG = 0x1, unprogrammed default
  7711  300006                     	org	3145734
  7712  300006  85                 	db	133
  7713                           
  7714                           ; Padding undefined space
  7715  300007                     	org	3145735
  7716  300007  FF                 	db	255
  7717                           
  7718                           ;Config register CONFIG5L @ 0x300008
  7719                           ;	unspecified, using default values
  7720                           ;	Code Protection bit
  7721                           ;	CP0 = 0x1, unprogrammed default
  7722                           ;	Code Protection bit
  7723                           ;	CP1 = 0x1, unprogrammed default
  7724                           ;	Code Protection bit
  7725                           ;	CP2 = 0x1, unprogrammed default
  7726                           ;	Code Protection bit
  7727                           ;	CP3 = 0x1, unprogrammed default
  7728  300008                     	org	3145736
  7729  300008  0F                 	db	15
  7730                           
  7731                           ;Config register CONFIG5H @ 0x300009
  7732                           ;	unspecified, using default values
  7733                           ;	Boot Block Code Protection bit
  7734                           ;	CPB = 0x1, unprogrammed default
  7735                           ;	Data EEPROM Code Protection bit
  7736                           ;	CPD = 0x1, unprogrammed default
  7737  300009                     	org	3145737
  7738  300009  C0                 	db	192
  7739                           
  7740                           ;Config register CONFIG6L @ 0x30000A
  7741                           ;	unspecified, using default values
  7742                           ;	Write Protection bit
  7743                           ;	WRT0 = 0x1, unprogrammed default
  7744                           ;	Write Protection bit
  7745                           ;	WRT1 = 0x1, unprogrammed default
  7746                           ;	Write Protection bit
  7747                           ;	WRT2 = 0x1, unprogrammed default
  7748                           ;	Write Protection bit
  7749                           ;	WRT3 = 0x1, unprogrammed default
  7750  30000A                     	org	3145738
  7751  30000A  0F                 	db	15
  7752                           
  7753                           ;Config register CONFIG6H @ 0x30000B
  7754                           ;	unspecified, using default values
  7755                           ;	Configuration Register Write Protection bit
  7756                           ;	WRTC = 0x1, unprogrammed default
  7757                           ;	Boot Block Write Protection bit
  7758                           ;	WRTB = 0x1, unprogrammed default
  7759                           ;	Data EEPROM Write Protection bit
  7760                           ;	WRTD = 0x1, unprogrammed default
  7761  30000B                     	org	3145739
  7762  30000B  E0                 	db	224
  7763                           
  7764                           ;Config register CONFIG7L @ 0x30000C
  7765                           ;	unspecified, using default values
  7766                           ;	Table Read Protection bit
  7767                           ;	EBTR0 = 0x1, unprogrammed default
  7768                           ;	Table Read Protection bit
  7769                           ;	EBTR1 = 0x1, unprogrammed default
  7770                           ;	Table Read Protection bit
  7771                           ;	EBTR2 = 0x1, unprogrammed default
  7772                           ;	Table Read Protection bit
  7773                           ;	EBTR3 = 0x1, unprogrammed default
  7774  30000C                     	org	3145740
  7775  30000C  0F                 	db	15
  7776                           
  7777                           ;Config register CONFIG7H @ 0x30000D
  7778                           ;	unspecified, using default values
  7779                           ;	Boot Block Table Read Protection bit
  7780                           ;	EBTRB = 0x1, unprogrammed default
  7781  30000D                     	org	3145741
  7782  30000D  40                 	db	64
  7783                           tosu	equ	0xFFF
  7784                           tosh	equ	0xFFE
  7785                           tosl	equ	0xFFD
  7786                           stkptr	equ	0xFFC
  7787                           pclatu	equ	0xFFB
  7788                           pclath	equ	0xFFA
  7789                           pcl	equ	0xFF9
  7790                           tblptru	equ	0xFF8
  7791                           tblptrh	equ	0xFF7
  7792                           tblptrl	equ	0xFF6
  7793                           tablat	equ	0xFF5
  7794                           prodh	equ	0xFF4
  7795                           prodl	equ	0xFF3
  7796                           indf0	equ	0xFEF
  7797                           postinc0	equ	0xFEE
  7798                           postdec0	equ	0xFED
  7799                           preinc0	equ	0xFEC
  7800                           plusw0	equ	0xFEB
  7801                           fsr0h	equ	0xFEA
  7802                           fsr0l	equ	0xFE9
  7803                           wreg	equ	0xFE8
  7804                           indf1	equ	0xFE7
  7805                           postinc1	equ	0xFE6
  7806                           postdec1	equ	0xFE5
  7807                           preinc1	equ	0xFE4
  7808                           plusw1	equ	0xFE3
  7809                           fsr1h	equ	0xFE2
  7810                           fsr1l	equ	0xFE1
  7811                           bsr	equ	0xFE0
  7812                           indf2	equ	0xFDF
  7813                           postinc2	equ	0xFDE
  7814                           postdec2	equ	0xFDD
  7815                           preinc2	equ	0xFDC
  7816                           plusw2	equ	0xFDB
  7817                           fsr2h	equ	0xFDA
  7818                           fsr2l	equ	0xFD9
  7819                           status	equ	0xFD8

Data Sizes:
    Strings     65
    Constant    26
    Data        6
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     44      69
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 16
		 -> STR_7(CODE[5]), STR_6(CODE[14]), STR_5(CODE[6]), STR_4(CODE[6]), 
		 -> STR_3(CODE[7]), STR_2(CODE[16]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_atualizarHorarioEntrada
    _main->_atualizarHorarioSaida
    _main->_mostrarMenuInicial
    _verificarUsuarioPediuParaSair->_kpDebounce
    _verificarUsuarioPediuParaEntrar->_kpDebounce
    _verificarUsuarioPagou->_kpDebounce
    _kpDebounce->_soWrite
    _resetarTempoEstadia->_ssdDigit
    _mostrarMenuInicial->___awmod
    _ssdInit->_pinMode
    _pwmInit->_pwmFrequency
    _pwmFrequency->___aldiv
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _atualizarTempoEstadia->_ssdDigit
    _ssdUpdate->_soWrite
    _ssdDigit->___awmod
    _atualizarHorarioSaida->___awmod
    ___lwmod->___lwdiv
    ___almod->___aldiv
    _atualizarHorarioEntrada->___awmod
    _lcdString->_lcdChar
    _lcdChar->_pushByte
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _pulseEnablePin->_digitalWrite
    _dsReadData->_i2cReadByte
    _i2cWriteByte->_i2c_read_bit
    _i2cWriteByte->_i2c_write_bit
    _i2cReadByte->_i2c_read_bit
    _i2cReadByte->_i2c_write_bit
    _clear_SDA->_digitalWrite
    _clear_SDA->_pinMode
    _read_SDA->_pinMode
    _read_SCL->_pinMode
    _clear_SCL->_digitalWrite
    _clear_SCL->_pinMode
    _bcd2dec->___wmul
    ___awdiv->_dsReadData
    ___awmod->_bcd2dec
    _ativarBuzzer->_pwmSet
    _pwmSet->___wmul
    ___wmul->___awdiv
    _acenderLedNaSequencia->_ledParaDireita
    _acenderLedNaSequencia->_ledParaEsquerda
    _ledParaEsquerda->_delay
    _ledParaDireita->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 1033564
              _acenderLedNaSequencia
                       _ativarBuzzer
            _atualizarHorarioEntrada
              _atualizarHorarioSaida
              _atualizarTempoEstadia
                 _iniciarPerifericos
                         _lcdCommand
                          _lcdString
                 _mostrarMenuInicial
                _resetarTempoEstadia
              _verificarUsuarioPagou
    _verificarUsuarioPediuParaEntrar
      _verificarUsuarioPediuParaSair
 ---------------------------------------------------------------------------------
 (1) _verificarUsuarioPediuParaSair                        3     1      2   17883
                                             14 COMRAM     3     1      2
                         _kpDebounce
                          _kpReadKey
 ---------------------------------------------------------------------------------
 (1) _verificarUsuarioPediuParaEntrar                      3     1      2   17883
                                             14 COMRAM     3     1      2
                         _kpDebounce
                          _kpReadKey
 ---------------------------------------------------------------------------------
 (1) _verificarUsuarioPagou                                3     1      2   17883
                                             14 COMRAM     3     1      2
                         _kpDebounce
                          _kpReadKey
 ---------------------------------------------------------------------------------
 (2) _kpReadKey                                            5     5      0      90
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _kpDebounce                                           5     5      0   17769
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _resetarTempoEstadia                                  0     0      0   23377
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (1) _mostrarMenuInicial                                   2     2      0  259196
                                             42 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
                            _bcd2dec
                         _dsReadData
                            _lcdChar
                         _lcdCommand
                          _lcdString
 ---------------------------------------------------------------------------------
 (1) _iniciarPerifericos                                   0     0      0   83026
                             _kpInit
                            _lcdInit
                            _pwmInit
                            _ssdInit
                          _timerInit
 ---------------------------------------------------------------------------------
 (2) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ssdInit                                              0     0      0    7872
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pwmInit                                              0     0      0     854
                       _pwmFrequency
 ---------------------------------------------------------------------------------
 (3) _pwmFrequency                                         2     0      2     854
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) _lcdInit                                              0     0      0   66428
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (3) _pushNibble                                           3     1      2   28781
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _kpInit                                               0     0      0    7872
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (3) _soInit                                               0     0      0    3936
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _atualizarTempoEstadia                                0     0      0   32336
                            ___aldiv
                            ___almod
                            ___awdiv
                            ___awmod
                           _ssdDigit
                          _ssdUpdate
                         _timerReset
                          _timerWait
 ---------------------------------------------------------------------------------
 (2) _timerWait                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _timerReset                                           4     2      2     167
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ssdUpdate                                            2     2      0   22593
                                              9 COMRAM     2     2      0
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _ssdDigit                                             2     1      1     784
                                             42 COMRAM     2     1      1
                            ___aldiv (ARG)
                            ___almod (ARG)
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _atualizarHorarioSaida                                3     3      0  262144
                                             42 COMRAM     2     2      0
                            ___aldiv
                            ___almod
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                            _atrasar
                            _bcd2dec
                         _dsReadData
                            _lcdChar
                         _lcdCommand
                          _lcdString
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     600
                                             14 COMRAM    10     2      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     756
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _atualizarHorarioEntrada                              2     2      0  259196
                                             42 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
                            _bcd2dec
                         _dsReadData
                            _lcdChar
                         _lcdCommand
                          _lcdString
 ---------------------------------------------------------------------------------
 (2) _lcdString                                            6     4      2   29697
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (3) _lcdChar                                              1     1      0   29075
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   29045
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (4) _pushByte                                             4     2      2   28673
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (3) _soWrite                                              3     1      2   17133
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (4) _PulseEnClock                                         0     0      0    5460
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (4) _PulseClockData                                       0     0      0    5460
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _pulseEnablePin                                       0     0      0    5840
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _dsReadData                                           5     3      2  159267
                                             13 COMRAM     5     3      2
                        _i2cReadByte
                       _i2cWriteByte
 ---------------------------------------------------------------------------------
 (3) _i2cWriteByte                                         5     3      2   93155
                                              7 COMRAM     4     2      2
                       _i2c_read_bit
                          _i2c_start
                           _i2c_stop
                      _i2c_write_bit
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0   27712
                          _I2C_delay
                          _clear_SCL
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (3) _i2cReadByte                                          6     5      1   64623
                                              7 COMRAM     6     5      1
                       _i2c_read_bit
                           _i2c_stop
                      _i2c_write_bit
 ---------------------------------------------------------------------------------
 (4) _i2c_write_bit                                        1     1      0   27756
                                              6 COMRAM     1     1      0
                          _I2C_delay
                          _clear_SCL
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0   18316
                          _I2C_delay
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (5) _clear_SDA                                            0     0      0    9396
                       _digitalWrite
                            _pinMode
 ---------------------------------------------------------------------------------
 (4) _i2c_read_bit                                         1     1      0   18339
                                              6 COMRAM     1     1      0
                          _I2C_delay
                          _clear_SCL
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (5) _read_SDA                                             0     0      0    4460
                        _digitalRead
                            _pinMode
 ---------------------------------------------------------------------------------
 (5) _read_SCL                                             0     0      0    4460
                        _digitalRead
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _digitalRead                                          5     3      2     524
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) _clear_SCL                                            0     0      0    9396
                       _digitalWrite
                            _pinMode
 ---------------------------------------------------------------------------------
 (6) _pinMode                                              6     2      4    3936
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _digitalWrite                                         6     2      4    5460
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _I2C_delay                                            4     4      0       0
 ---------------------------------------------------------------------------------
 (2) _bcd2dec                                              4     2      2    4607
                                             32 COMRAM     4     2      2
                            ___awdiv
                             ___wmul
                         _dsReadData (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    2732
                                             18 COMRAM     8     4      4
                         _dsReadData (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    4704
                                             36 COMRAM     6     2      4
                            ___awdiv (ARG)
                            _bcd2dec (ARG)
                         _dsReadData (ARG)
 ---------------------------------------------------------------------------------
 (1) _ativarBuzzer                                         0     0      0    1508
                            _atrasar
                             _pwmSet
 ---------------------------------------------------------------------------------
 (2) _pwmSet                                               5     5      0    1324
                                             32 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     463
                                             26 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     770
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _atrasar                                              5     5      0     184
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _acenderLedNaSequencia                                0     0      0     390
                              _delay
                     _ledParaDireita
                    _ledParaEsquerda
 ---------------------------------------------------------------------------------
 (2) _ledParaEsquerda                                      2     2      0     150
                                              2 COMRAM     2     2      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _ledParaDireita                                       2     2      0     150
                                              2 COMRAM     2     2      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                2     2      0      90
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _acenderLedNaSequencia
     _delay
     _ledParaDireita
       _delay
     _ledParaEsquerda
       _delay
   _ativarBuzzer
     _atrasar
     _pwmSet
       ___lwdiv
       ___wmul
         ___awdiv (ARG)
           _dsReadData (ARG)
             _i2cReadByte
               _i2c_read_bit
                 _I2C_delay
                 _clear_SCL
                   _digitalWrite
                   _pinMode
                 _read_SCL
                   _digitalRead
                   _pinMode
                 _read_SDA
                   _digitalRead
                   _pinMode
               _i2c_stop
                 _I2C_delay
                 _clear_SDA
                   _digitalWrite
                   _pinMode
                 _read_SCL
                 _read_SDA
               _i2c_write_bit
                 _I2C_delay
                 _clear_SCL
                 _clear_SDA
                 _read_SCL
                 _read_SDA
             _i2cWriteByte
               _i2c_read_bit
               _i2c_start
                 _I2C_delay
                 _clear_SCL
                 _clear_SDA
                 _read_SCL
                 _read_SDA
               _i2c_stop
               _i2c_write_bit
   _atualizarHorarioEntrada
     ___awdiv
     ___awmod
       ___awdiv (ARG)
       _bcd2dec (ARG)
         ___awdiv
         ___wmul
         _dsReadData (ARG)
       _dsReadData (ARG)
     _bcd2dec
     _dsReadData
     _lcdChar
       _delayMicro
       _pushByte
         _digitalWrite
         _pulseEnablePin
           _delayMicro
           _digitalWrite
         _soWrite
           _PulseClockData
             _digitalWrite
           _PulseEnClock
             _digitalWrite
           _digitalWrite
     _lcdCommand
       _delayMili
       _pushByte
     _lcdString
       _lcdChar
   _atualizarHorarioSaida
     ___aldiv
     ___almod
       ___aldiv (ARG)
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _atrasar
     _bcd2dec
     _dsReadData
     _lcdChar
     _lcdCommand
     _lcdString
   _atualizarTempoEstadia
     ___aldiv
     ___almod
     ___awdiv
     ___awmod
     _ssdDigit
       ___aldiv (ARG)
       ___almod (ARG)
       ___awdiv (ARG)
       ___awmod (ARG)
     _ssdUpdate
       _digitalWrite
       _soWrite
     _timerReset
     _timerWait
   _iniciarPerifericos
     _kpInit
       _pinMode
       _soInit
         _pinMode
     _lcdInit
       _delayMicro
       _delayMili
       _lcdCommand
       _pinMode
       _pushNibble
         _digitalWrite
         _pulseEnablePin
         _soWrite
       _soInit
     _pwmInit
       _pwmFrequency
         ___aldiv
     _ssdInit
       _pinMode
       _soInit
     _timerInit
   _lcdCommand
   _lcdString
   _mostrarMenuInicial
     ___awdiv
     ___awmod
     _bcd2dec
     _dsReadData
     _lcdChar
     _lcdCommand
     _lcdString
   _resetarTempoEstadia
     _ssdDigit
     _ssdUpdate
   _verificarUsuarioPagou
     _kpDebounce
       _digitalRead
       _soWrite
     _kpReadKey
   _verificarUsuarioPediuParaEntrar
     _kpDebounce
     _kpReadKey
   _verificarUsuarioPediuParaSair
     _kpDebounce
     _kpReadKey

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2C      45       1       54.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      45      15        0.0%
DATA                 0      0      45       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 17 21:42:14 2021

                        ??_ledParaDireita 0003                            _pulseEnablePin 20FA  
                            lcdString@msg 000F                                        l12 1D70  
                                      l50 217C                                        l62 206E  
                                      l80 22A6                                        l74 2664  
                                      l83 2534                                        l77 22DE  
                                      l86 250A                                        l96 20B4  
                            ___awdiv@sign 0018                        __size_of_I2C_delay 0002  
                                      _v0 003C                                        _v1 003B  
                                      _v2 003A                                        _v3 0039  
                     ___wmul@multiplicand 001D                             ??_i2cReadByte 0009  
                  __size_of_i2c_write_bit 0058                     i2cWriteByte@send_stop 0008  
                          i2cReadByte@bit 000B                                       l103 2404  
                                     l112 1EDA                                       l131 1FDA  
                                     l125 1DD0                                       l118 2378  
                                     l310 1AA2                                       l230 1BCA  
                                     l207 0B70                                       l402 24E0  
                                     l323 1CAA                                       l260 2662  
                                     l244 1522                                       l173 0DBE  
                                     l182 1400                                       l326 255A  
                                     l246 153A                                       l407 2028  
                                     l272 2580                                       l177 1404  
                                     l249 2346                                       l329 261E  
                                     l602 2652                                       l178 1400  
                                     l266 23A8                                       l434 1E82  
                                     l275 1E2A                                       l292 1F86  
                                     l444 129A                                       l621 2432  
                                     l269 213A                                       l461 2636  
                                     l278 2604                                       l286 25E6  
                                     l470 265A                                       l607 2460  
                                     l703 1646                                       l447 1F30  
                                     l616 20F8                                       l624 25A6  
                                     l464 2644                                       l467 25C8  
                                     l580 248C                                       l716 192A  
                                     l396 21BA                                       l566 2634  
                                     l574 2232                                       l399 24B6  
                                     l591 0922                                       l583 174A  
                                     l577 112E                                       l569 0F82  
                                     l594 23D6                                       l588 21F6  
                                     l855 19EE                                       l599 226E  
                                     l868 1B52                             ?_ativarBuzzer 0001  
                                     _PR2 000FCB                                       u770 20D0  
                                     u771 20CC                                       u780 20E6  
                                     u781 20E2                                       u790 20F8  
                                     u791 20F4                         ??_ledParaEsquerda 0003  
                            ___awmod@sign 002A                                       wreg 000FE8  
                        i2c_write_bit@bit 0007                             ?_i2cWriteByte 0008  
                  i2cWriteByte@send_start 000A                           i2cReadByte@nack 000A  
                         i2cReadByte@byte 000D                                      l1122 1C3E  
                                    l1115 1C36                                      l1132 1D0E  
                                    l1125 1D06                                      l3001 1E68  
                                    l3003 1E6C                                      l3011 11A8  
                                    l3101 1AC2                                      l3005 1E7E  
                                    l3021 11F8                                      l3013 11BC  
                                    l3111 1AFA                                      l3103 1AD0  
                                    l3031 1258                                      l3023 1210  
                                    l3015 11C4                                      l3007 1130  
                                    l3113 1B08                                      l3121 1B32  
                                    l3105 1AD8                                      l3201 10A4  
                                    l3025 1224                                      l3017 11DC  
                                    l3009 1190                                      l3211 2468  
                                    l3123 1B42                                      l3115 1B1E  
                                    l3107 1AEA                                      l3203 10AA  
                                    l3131 1CBE                                      l3027 122C  
                                    l3019 11F0                                      l3051 25BE  
                                    l3043 1EDC                                      l3213 246E  
                                    l3125 1B4A                                      l3117 1B26  
                                    l3109 1AF2                                      l2501 0A84  
                                    l3205 10CA                                      l3061 1852  
                                    l3141 1CFA                                      l3133 1CC6  
                                    l3029 1244                                      l3037 1260  
                                    l3053 25C2                                      l3045 25A8  
                                    l3221 1732                                      l3301 2238  
                                    l3215 247A                                      l3119 1B2C  
                                    l2511 0B18                                      l2503 0AA0  
                                    l3207 10FA                                      l3071 189A  
                                    l3063 1862                                      l3143 1D00  
                                    l3135 1CCE                                      l3055 25C6  
                                    l3047 25B2                                      l3223 1736  
                                    l3151 0DD2                                      l3303 223C  
                                    l3231 21C0                                      l2249 2646  
                                    l3217 2480                                      l3209 2462  
                                    l2441 0BA0                                      l2513 0B2A  
                                    l2505 0AB2                                      l2601 2088  
                                    l3081 18EA                                      l3073 18A2  
                                    l3065 1866                                      l3057 1840  
                                    l3137 1CDC                                      l3129 1CAC  
                                    l3049 25B6                                      l3225 1742  
                                    l3145 2620                                      l3161 0EB8  
                                    l3153 0DDE                                      l3305 2250  
                                    l3233 21C4                                      l1651 20C0  
                                    l1643 20BA                                      l2451 0C38  
                                    l2443 0BC0                                      l2515 0B4E  
                                    l2507 0AD6                                      l2611 20AC  
                                    l2603 209C                                      l3083 18F4  
                                    l3075 18AE                                      l3067 1874  
                                    l3059 1844                                      l3139 1CF2  
                                    l3251 06C0                                      l3243 065E  
                                    l3227 1746                                      l3219 1648  
                                    l3163 0EEC                                      l3155 0DFE  
                                    l3147 0DC0                                      l3307 2264  
                                    l3171 21FC                                      l3235 21D8  
                                    l3411 1750                                      l1661 20D6  
                                    l1653 20D0                                      l1637 20B6  
                                    l3093 1AA4                                      l2461 0CD2  
                                    l2453 0C5A                                      l2445 0BE2  
                                    l2437 0B72                                      l2509 0AFC  
                                    l2541 1370                                      l2533 1328  
                                    l2525 12E0                                      l2517 129C  
                                    l2621 23F4                                      l2613 20B0  
                                    l2605 20A0                                      l2701 15F4  
                                    l3077 18BC                                      l3085 18FA  
                                    l3069 1884                                      l3261 077E  
                                    l3253 06F4                                      l3245 0664  
                                    l3165 0F12                                      l3157 0E62  
                                    l3149 0DCC                                      l3309 2268  
                                    l3173 2200                                      l3237 21EC  
                                    l3229 21BC                                      l3421 1784  
                                    l3413 1762                                      l1663 20E6  
                                    l3095 1AA8                                      l2471 0D66  
                                    l2463 0CEE                                      l2455 0C76  
                                    l2447 0BFE                                      l2439 0B8E  
                                    l2551 13D4                                      l2543 138C  
                                    l2535 1344                                      l2527 12FC  
                                    l2519 12B8                                      l2623 23F8  
                                    l2615 23D8                                      l2631 1E96  
                                    l2607 20A4                                      l3191 0FE6  
                                    l3183 0F84                                      l2711 1626  
                                    l2703 1604                                      l3087 190A  
                                    l3079 18DA                                      l3271 0808  
                                    l3263 0784                                      l3255 06FA  
                                    l3247 0670                                      l3167 0F42  
                                    l3159 0E68                                      l3175 2214  
                                    l3239 21F0                                      l3431 17D2  
                                    l3415 1766                                      l3423 1790  
                                    l1665 20E8                                      l1649 20BE  
                                    l3097 1AB6                                      l2801 197E  
                                    l2473 0D80                                      l2465 0D08  
                                    l2457 0C90                                      l2449 0C18  
                                    l2481 0952                                      l2625 23FC  
                                    l2617 23DC                                      l2641 1ECA  
                                    l2633 1E9E                                      l2609 20A8  
                                    l2721 1D88                                      l3193 101A  
                                    l3185 0F8A                                      l2713 1636  
                                    l2705 1606                                      l3089 191A  
                                    l3281 082C                                      l3273 080E  
                                    l3265 07A4                                      l3257 071A  
                                    l3249 0690                                      l3177 2228  
                                    l3169 21F8                                      l3441 1802  
                                    l3433 17D6                                      l3425 17A2  
                                    l3417 177C                                      l3409 174C  
                                    l1659 20D4                                      l3099 1ABE  
                                    l2811 19B8                                      l2803 1986  
                                    l2475 0DA0                                      l2467 0D28  
                                    l2459 0CB0                                      l2491 09E6  
                                    l2483 0972                                      l2563 2270  
                                    l2651 234C                                      l2627 2400  
                                    l2619 23E0                                      l2643 1ECE  
                                    l2635 1EA2                                      l2731 1DA6  
                                    l2555 248E                                      l2571 1FDC  
                                    l3195 1020                                      l3187 0F96  
                                    l2707 1610                                      l3291 08C2  
                                    l3283 0838                                      l3275 0814  
                                    l3267 07D4                                      l3259 074A  
                                    l3179 222C                                      l3451 182A  
                                    l3443 180E                                      l3435 17DA  
                                    l3427 17B4                                      l3419 1780  
                                    l2821 19DE                                      l2813 19C0  
                                    l2805 198E                                      l2469 0D4A  
                                    l2493 0A0C                                      l2485 0994  
                                    l2477 0924                                      l2549 13B8  
                                    l2661 2376                                      l2653 2350  
                                    l2645 1ED2                                      l2637 1EA6  
                                    l2629 1E86                                      l2733 1DA8  
                                    l2717 1D74                                      l2557 24B8  
                                    l2581 200C                                      l2573 1FF0  
                                    l3197 1040                                      l3189 0FB6  
                                    l2709 1616                                      l3293 08F2  
                                    l3285 0840                                      l3277 081A  
                                    l3269 0808                                      l2901 1B5C  
                                    l3453 1832                                      l3445 1812  
                                    l3429 17CE                                      l3437 17E6  
                                    l2831 1BE6                                      l2823 19E6  
                                    l2815 19C2                                      l2807 199C  
                                    l2495 0A28                                      l2487 09B0  
                                    l2479 0940                                      l2567 250C  
                                    l2559 22A8                                      l2655 2364  
                                    l2647 1ED6                                      l2639 1EBA  
                                    l2751 1FA4                                      l2743 1F8A  
                                    l2735 1DB8                                      l2727 1D8C  
                                    l2719 1D84                                      l2591 210E  
                                    l2583 2012                                      l2671 1DD4  
                                    l3199 1070                                      l3287 088C  
                                    l3279 0826                                      l1935 2636  
                                    l1951 2658                                      l3295 23AA  
                                    l2911 1BC8                                      l2903 1B94  
                                    l3447 181A                                      l3439 17FC  
                                    l1953 2434                                      l2841 1C20  
                                    l2833 1BEE                                      l2817 19C8  
                                    l2809 19A2                                      l2497 0A3A  
                                    l2489 09C2                                      l2657 236A  
                                    l2649 2348                                      l2569 24E2  
                                    l2761 1FD8                                      l2753 1FA8  
                                    l2737 1DBC                                      l2729 1DA2  
                                    l2665 237A                                      l2593 211A  
                                    l2585 2014                                      l2681 1562  
                                    l2673 153C                                      l3289 08BC  
                                    l3297 23D2                                      l2921 1436  
                                    l3449 1822                                      l1971 2450  
                                    l1963 2440                                      l1955 2438  
                                    l2851 1D1A                                      l2843 1C28  
                                    l2835 1BF6                                      l2827 1BCC  
                                    l2819 19CE                                      l2499 0A5E  
                                    l2659 236E                                      l2755 1FBE  
                                    l2595 2070                                      l2739 1DCC  
                                    l2667 2386                                      l2587 2024  
                                    l2579 1FF4                                      l2771 25CC  
                                    l2691 15AA                                      l2683 1570  
                                    l2675 1540                                      l3459 1274  
                                    l2923 1482                                      l2915 1406  
                                    l2907 1BA8                                      l3299 2234  
                                    l1965 2444                                      l1957 243C  
                                    l1973 2406                                      l2845 1C2A  
                                    l2837 1C04                                      l2829 1BD4  
                                    l2757 1FC4                                      l2749 1F96  
                                    l2597 2080                                      l2669 238A  
                                    l2589 20FA                                      l2773 25DA  
                                    l2693 15B2                                      l2685 1580  
                                    l2677 154E                                      l2765 217E  
                                    l1949 2654                                      l2941 1532  
                                    l2925 14A8                                      l2933 14F8  
                                    l2917 1416                                      l2909 1BAC  
                                    l1967 2448                                      l1991 2422  
                                    l1983 2412                                      l1975 240A  
                                    l2871 1D28                                      l2863 1D22  
                                    l2847 1C30                                      l2839 1C0A  
                                    l2791 194A                                      l2783 192C  
                                    l2759 1FD4                                      l2599 2084  
                                    l2951 1F5A                                      l2695 15BE  
                                    l2687 1584                                      l2679 155E  
                                    l2943 2316                                      l2767 255E  
                                    l2775 2536                                      l2935 1510  
                                    l2927 14C6                                      l1969 244E  
                                    l1985 2416                                      l1977 240E  
                                    l2881 1D5C                                      l2873 1D38  
                                    l2857 1D1E                                      l2849 1D12  
                                    l2777 2582                                      l2793 1958  
                                    l2785 1930                                      l2769 25EA  
                                    l2953 1F5E                                      l2697 15CC  
                                    l2689 1594                                      l2945 2342  
                                    l2961 1A76                                      l2937 1516  
                                    l2929 14F0                                      l1987 241A  
                                    l2875 1D3A                                      l2883 1D5E  
                                    l2779 259E                                      l2971 1C42  
                                    l2795 1960                                      l2787 193E  
                                    l2891 2066                                      l2947 1F32  
                                    l2699 15D6                                      l2963 1A84  
                                    l2955 19F0                                      l2939 151A  
                                    l1989 2420                                      l2877 1D4A  
                                    l2869 1D26                                      l2973 1C60  
                                    l2797 1964                                      l2789 1946  
                                    l2885 213C                                      l2949 1F3E  
                                    l2965 1A90                                      l2957 1A50  
                                    l2981 2606                                      l2879 1D4C  
                                    l2975 1C7C                                      l2799 196C  
                                    l2991 1E2E                                      l2967 1A96  
                                    l2959 1A5C                                      l2983 2608  
                                    l2895 1B54                                      l2977 1C84  
                                    l2889 202A                                      l2993 1E3E  
                                    l2969 1A9C                                      l2985 260C  
                                    l2979 1C9C                                      l2995 1E42  
                                    l2987 260E                                      l2997 1E52  
                                    l2989 2612                                      l2999 1E56  
                                    STR_1 0639                                      STR_2 061B  
                                    STR_3 0644                                      STR_4 064B  
                                    STR_5 0651                                      STR_6 062B  
                                    STR_7 0657                                      u1100 2460  
                                    u1101 245C                                      u1110 2432  
                                    u1111 242E                                      u2010 12FC  
                                    u2011 12F8                                      u2004 12CA  
                                    u2100 22DE                                      u2005 12C6  
                                    u2030 1344                                      u2110 22A4  
                                    u2031 1340                                      u2111 229E  
                                    u2024 1312                                      u2120 22A6  
                                    u2200 2364                                      u3000 1762  
                                    u2025 130E                                      u2201 2360  
                                    u3001 175E                                      u2050 138C  
                                    u2210 23A8                                      u2130 2024  
                                    u1090 2644                                      u3010 177C  
                                    u2051 1388                                      u2211 23A4  
                                    u2131 2020                                      u1091 2640  
                                    u3011 1778                                      u2044 135A  
                                    u2140 2080                                      u2300 1D9E  
                                    u2220 154E                                      u3020 17A2  
                                    u2045 1356                                      u2141 207C  
                                    u2221 154A                                      u3021 179E  
                                    u2070 13D4                                      u2150 209C  
                                    u2310 1DB8                                      u2230 1570  
                                    u3030 17B4                                      u2071 13D0  
                                    u2151 2098                                      u2311 1DB4  
                                    u2231 156C                                      u3031 17B0  
                                    u2400 19DE                                      u1600 0BA0  
                                    u2064 13A2                                      u2160 23F4  
                                    u2320 1DCC                                      u2240 15AA  
                                    u3040 17CE                                      u2401 19DA  
                                    u1601 0B9C                                      u2065 139E  
                                    u2161 23F0                                      u2321 1DC8  
                                    u2241 15A6                                      u3041 17CA  
                                    u2410 1BE6                                      u2090 22DC  
                                    u2170 1E96                                      u2330 1FBE  
                                    u2250 15CC                                      u3050 17FC  
                                    u2411 1BE2                                      u2091 22D6  
                                    u2171 1E92                                      u2331 1FBA  
                                    u2251 15C8                                      u3051 17F8  
                                    u2420 1C04                                      u2084 13EA  
                                    u2180 1EBA                                      u2340 1FD4  
                                    u2260 15F4                                      u2500 1BC8  
                                    u2421 1C00                                      u2085 13E6  
                                    u2181 1EB6                                      u2341 1FD0  
                                    u2261 15F0                                      u2501 1BC4  
                                    u2430 1C20                                      u2350 193E  
                                    u1710 0CEE                                      u1630 0BFE  
                                    u1614 0BB2                                      u2190 1ECA  
                                    u2270 1626                                      u2510 1432  
                                    u2431 1C1C                                      u2351 193A  
                                    u1711 0CEA                                      u1631 0BFA  
                                    u1615 0BAE                                      u2191 1EC6  
                                    u2271 1622                                      u2511 142E  
                                    u2440 1D38                                      u2360 1958  
                                    u1720 0D08                                      u1704 0CC2  
                                    u1640 0C18                                      u1624 0BD2  
                                    u1800 0952                                      u2280 1D84  
                                    u2600 1E3E                                      u2441 1D34  
                                    u2361 1954                                      u1721 0D04  
                                    u1705 0CBE                                      u1641 0C14  
                                    u1625 0BCE                                      u1801 094E  
                                    u2281 1D80                                      u2601 1E3A  
                                    u2450 1D4A                                      u2370 197E  
                                    u2290 1D9C                                      u2610 1E52  
                                    u2530 1482                                      u2451 1D46  
                                    u2371 197A                                      u2291 1D96  
                                    u2611 1E4E                                      u2531 147E  
                                    u2460 1D5C                                      u2700 1AB6  
                                    u2380 199C                                      u2620 1E68  
                                    u2524 1452                                      u2461 1D58  
                                    u2701 1AB2                                      u2381 1998  
                                    u2621 1E64                                      u2525 144C  
                                    u2470 1D70                                      u2710 1AD0  
                                    u2390 19B8                                      u1750 0D66  
                                    u1734 0D1A                                      u1670 0C76  
                                    u1654 0C2A                                      u1590 0B8E  
                                    u1910 0AA0                                      u1830 09B0  
                                    u1814 0964                                      u2630 1E7E  
                                    u2550 14C6                                      u2471 1D6C  
                                    u2711 1ACC                                      u2391 19B4  
                                    u1751 0D62                                      u1735 0D16  
                                    u1671 0C72                                      u1655 0C26  
                                    u1591 0B8A                                      u1911 0A9C  
                                    u1831 09AC                                      u1815 0960  
                                    u2631 1E7A                                      u2551 14C2  
                                    u2720 1AEA                                      u1760 0D80  
                                    u1744 0D3A                                      u1680 0C90  
                                    u1664 0C4A                                      u1920 0AB2  
                                    u1904 0A74                                      u1840 09C2  
                                    u1824 0984                                      u2640 1852  
                                    u2544 149A                                      u2800 2228  
                                    u2721 1AE6                                      u1761 0D7C  
                                    u1745 0D36                                      u1681 0C8C  
                                    u1665 0C46                                      u1921 0AAE  
                                    u1905 0A70                                      u1841 09BE  
                                    u1825 0980                                      u2641 184E  
                                    u2545 1494                                      u2801 2224  
                                    u2730 1B08                                      u2650 1874  
                                    u2570 1510                                      u2490 1B94  
                                    u2810 21D8                                      u2731 1B04  
                                    u2651 1870                                      u2571 150C  
                                    u2491 1B90                                      u2811 21D4  
                                    u2740 1B1E                                      u2660 189A  
                                    u2580 1532                                      u2564 14E2  
                                    u2484 1B74                                      u2820 21EC  
                                    u2741 1B1A                                      u2661 1896  
                                    u2581 152E                                      u2565 14DC  
                                    u2485 1B6E                                      u2821 21E8  
                                    u2750 1B42                                      u1774 0D92  
                                    u1694 0CA2                                      u1950 0B18  
                                    u1934 0AC8                                      u1870 0A28  
                                    u1854 09D8                                      u1790 0940  
                                    u2590 1F86                                      u2670 18BC  
                                    u2830 2250                                      u2751 1B3E  
                                    u1775 0D8E                                      u1695 0C9E  
                                    u1951 0B14                                      u1935 0AC4  
                                    u1871 0A24                                      u1855 09D4  
                                    u1791 093C                                      u2591 1F82  
                                    u2671 18B8                                      u2831 224C  
                                    u1784 0DB2                                      u1960 0B2A  
                                    u1944 0AEC                                      u1880 0A3A  
                                    u1864 09FC                                      u2680 18DA  
                                    u2760 1CBE                                      u2840 2264  
                                    u1785 0DAE                                      u1961 0B26  
                                    u1945 0AE8                                      u1881 0A36  
                                    u1865 09F8                                      u2681 18D6  
                                    u2761 1CBA                                      u2841 2260  
                                    u2690 190A                                      u2770 1CDC  
                                    u2691 1906                                      u2771 1CD8  
                                    u2780 1CF2                                      u2781 1CEE  
                                    u1974 0B40                                      u1894 0A50  
                                    u1990 12B8                                      u2790 2214  
                                    u1975 0B3C                                      u1895 0A4C  
                                    u1991 12B4                                      u2791 2210  
                                    u1984 0B64                                      u1985 0B60  
                                    _PIR1 000F9E                                      _main 174C  
                                    _keys 0037                          ??_PulseClockData 0007  
                                    fsr1l 000FE1                             ?_i2c_read_bit 0001  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 0000                _atualizarHorarioSaida$1431 002B  
                         pushNibble@value 000C                         _tempoDeTolerancia 0042  
                            ___param_bank 000000                    __end_of_pulseEnablePin 213C  
                          pwmSet@porcento 0023                           __end_of_bcd2dec 217E  
                          ??_ativarBuzzer 0026                           __end_of___aldiv 1648  
                         __end_of___almod 192C                                     ?_main 0001  
                         __end_of___awdiv 19F0                           __end_of___awmod 1B54  
                                   _T0CON 000FD5                           ___awdiv@divisor 0015  
                                   _T2CON 000FCA                           __end_of___lwdiv 1C40  
                         __end_of___lwmod 1D10                           ___awdiv@counter 0017  
          __size_of_verificarUsuarioPagou 003C                                     _RCREG 000FAE  
                                   _RCSTA 000FAB                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                                     _SPBRG 000FAF  
           __end_of_verificarUsuarioPagou 2270                                     _PORTA 000F80  
                                   _PORTB 000F81                                     _PORTC 000F82  
                                   _PORTD 000F83                                     _PORTE 000F84  
                         __end_of_charKey 061B                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                                   _TXREG 000FAD                                     _TXSTA 000FAC  
                         __end_of_lcdChar 25E8                           __end_of_lcdInit 1AA4  
                          ??_i2cWriteByte 000A                       __end_of_i2cReadByte 1FDC  
                         __end_of_atrasar 1D72                                     _delay 20B6  
   __end_of_verificarUsuarioPediuParaSair 21F8    __size_of_verificarUsuarioPediuParaSair 003C  
           _verificarUsuarioPediuParaSair 21BC                           __end_of_pinMode 0B72  
                                   _valor 0601                           __end_of_soWrite 202A  
                                   tablat 000FF5                           __end_of_ssdInit 1F32  
                       __end_of_I2C_delay 2666                           __end_of_pwmInit 2620  
                           _i2c_write_bit 1E84                                     status 000FD8  
                          ??_i2c_read_bit 0007               __size_of_mostrarMenuInicial 01C4  
                            pushNibble@rs 000A                      __end_of_digitalWrite 0DC0  
                         __initialization 22E0                           ?_pulseEnablePin 0001  
                            __end_of_main 1840                           i2cWriteByte@bit 000B  
                        __end_of_i2c_stop 2406                              atrasar@delay 0001  
                                  ??_main 002D                             __activetblptr 000002  
                     _resetarTempoEstadia 23AA                      __size_of_digitalRead 016A  
                 _atualizarHorarioEntrada 0F84                                    ?_delay 0001  
          __size_of_atualizarTempoEstadia 0104                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
           __end_of_atualizarTempoEstadia 174C                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _CCPR2L 000FBB  
                        ___awdiv@dividend 0013                            ?_i2c_write_bit 0001  
                                  _INTCON 000FF2                                    _SPBRGH 000FB0  
                      __size_of_i2c_start 0046                      ?_resetarTempoEstadia 0001  
 __end_of_verificarUsuarioPediuParaEntrar 2234  __size_of_verificarUsuarioPediuParaEntrar 003C  
       ??_verificarUsuarioPediuParaEntrar 0011          ?_verificarUsuarioPediuParaEntrar 000F  
         _verificarUsuarioPediuParaEntrar 21F8                      _usuarioPediuParaSair 002F  
                               ??_bcd2dec 0023                                 ??___aldiv 0009  
                               ??___almod 0017                                    ___wmul 2582  
                               ??___awdiv 0017                                 ??___awmod 0029  
             __size_of_iniciarPerifericos 0016                                 ??___lwdiv 0005  
                               ??___lwmod 000C                                    _kpInit 2316  
                        __end_of_read_SDA 22A8                          __end_of_read_SCL 22E0  
                                  delay@i 0001                                    delay@j 0002  
                                  clear_0 2306                                    _soInit 217E  
                        ___awdiv@quotient 0019                           ___awmod@divisor 0027  
                               ??_lcdChar 000E                                    isa$std 000001  
                             _i2cReadByte 1F88                                 ??_lcdInit 000F  
                                  _pwmSet 1C40                           ___awmod@counter 0029  
                               ??_atrasar 0001                          __end_of_ssdDigit 1E84  
                            __pdataCOMRAM 0040                                 ??_pinMode 0005  
            _atualizarHorarioEntrada$1430 002B                              __mediumconst 0000  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                                 ??_soWrite 0009  
                               ??_ssdInit 0007                                 ??_pwmInit 0011  
                        __end_of_pushByte 1E2C                     _acenderLedNaSequencia 2646  
                        ledParaEsquerda@k 0003                          ledParaEsquerda@x 0004  
                              __accesstop 0080                   __end_of__initialization 230C  
                   ??_resetarTempoEstadia 002D            ?_verificarUsuarioPediuParaSair 000F  
                    __end_of_ativarBuzzer 248E                             ___rparam_used 000001  
                           pushByte@value 000D                               pinMode@type 0003  
                    __end_of_i2cWriteByte 1DD2                            __pcstackCOMRAM 0001  
                         _ledParaEsquerda 2406                             __end_of_delay 20FA  
                           __end_of_valor 0611                          i2cWriteByte@byte 0009  
                      __size_of_delayMili 0030                        __size_of_clear_SDA 002A  
                      __size_of_clear_SCL 002A                 ??_atualizarHorarioEntrada 002B  
                       __end_of_i2c_start 20B6                      __end_of_i2c_read_bit 237A  
                   _atualizarHorarioSaida 065E                        __size_of_lcdString 0056  
                      __size_of_kpReadKey 0078                                   ??_delay 0001  
                         ??_i2c_write_bit 0007                                 ?_i2c_stop 0001  
                   __size_of_digitalWrite 024E                                _dsReadData 202A  
                        dsReadData@result 0011                                _delayMicro 2662  
                              _lcdCommand 25E8                                   ?___wmul 001B  
                                 ?_kpInit 0001                                   _CCP2CON 000FBA  
                                 _BAUDCON 000FB8                                   ?_soInit 0001  
                              _kpDebounce 1406                                   ?_pwmSet 0001  
                      __size_of_timerInit 0008                        __size_of_timerWait 0010  
                      __size_of_ssdUpdate 016C                      i2cReadByte@send_stop 0008  
                  ?_acenderLedNaSequencia 0001                              _digitalWrite 0B72  
         __end_of_atualizarHorarioEntrada 1130                         __end_of_delayMili 23AA  
                       __end_of_clear_SDA 250C                         __end_of_clear_SCL 2536  
                               ?_read_SDA 0001                                 ?_read_SCL 0001  
                              ??_i2c_stop 0007                   __end_of_ledParaEsquerda 2434  
                        ??_pulseEnablePin 0007                                 _I2C_delay 2664  
                                 __Hparam 0000                                   __Lparam 0000  
                               ?_ssdDigit 002B                         __end_of_lcdString 1F88  
                         kpDebounce@tempo 003E                                   _bcd2dec 213C  
                                 ___aldiv 153C                         __end_of_kpReadKey 1BCC  
                                 ___almod 1840                                   ___awdiv 192C  
                                 ___awmod 1AA4                                 ?_pushByte 000A  
                         __size_of___wmul 0026                                   ___lwdiv 1BCC  
                                 ___lwmod 1CAC                              __psmallconst 0600  
                         __size_of_kpInit 0032                                   _charKey 0611  
                             ssdDigit@val 002C                               ssdDigit@pos 002B  
                                 __pcinit 22E0                                   _lcdChar 25CA  
                                 __ramtop 0600                           __size_of_soInit 003E  
                                 _lcdInit 19F0                    ?_atualizarHorarioSaida 0001  
                                 __ptext0 174C                                   __ptext1 21BC  
                                 __ptext2 21F8                                   __ptext3 2234  
                                 __ptext4 1B54                                   __ptext5 1406  
                                 __ptext6 23AA                                   __ptext7 0DC0  
                                 __ptext8 2620                                   __ptext9 2654  
                         __size_of_pwmSet 006C                                   _display 003D  
                                 _atrasar 1D10                                   _pinMode 0924  
                        ___awmod@dividend 0025                   __size_of_ledParaDireita 002E  
                        ___aldiv@dividend 0001                                delayMili@a 0001  
                              delayMili@i 0004                                   _soWrite 1FDC  
                                 _ssdInit 1EDC                     _verificarUsuarioPagou 2234  
                                 _pwmInit 2606                                   _started 003F  
                   __size_of_ativarBuzzer 002C                      end_of_initialization 230C  
                           ?_PulseEnClock 0001                                ??_read_SDA 0007  
              __end_of_mostrarMenuInicial 0F84                                ??_read_SCL 0007  
                           __Lmediumconst 0000                     __size_of_i2cWriteByte 0060  
                             ?_dsReadData 000E                            digitalRead@pin 0001  
                           ?_pwmFrequency 000F                               ?_delayMicro 0001  
                              ?_I2C_delay 0001                         __end_of_timerInit 265C  
                       __end_of_timerWait 2646                         __end_of_ssdUpdate 129C  
                              ??_ssdDigit 002C                          ___aldiv@quotient 000B  
                                 postdec1 000FE5                               ?_lcdCommand 0001  
                                 postinc0 000FEE                                ??_pushByte 000C  
                   __size_of_i2c_read_bit 0032                   __size_of_PulseClockData 002A  
                           ??_digitalRead 0003                                _timerReset 25A8  
                             ?_kpDebounce 0001                              ?_i2cReadByte 0008  
                         i2c_read_bit@bit 0007                              _ativarBuzzer 2462  
                              _pushNibble 255C                                lcdString@i 0013  
                            _i2cWriteByte 1D72                            ??_PulseEnClock 0007  
                   _atualizarTempoEstadia 1648                            ??_pwmFrequency 0011  
                              kpReadKey@i 0004                          ?_ledParaEsquerda 0001  
                            _i2c_read_bit 2348                __end_of_iniciarPerifericos 2636  
               _verificarUsuarioPagou$693 0011                            __end_of___wmul 25A8  
                           __pidataCOMRAM 265C           ??_verificarUsuarioPediuParaSair 0011  
                          __end_of_kpInit 2348                            __end_of_soInit 21BC  
                          __end_of_pwmSet 1CAC                       __size_of_dsReadData 0046  
                  ?_verificarUsuarioPagou 000F                       __size_of_delayMicro 0002  
                     start_initialization 22E0                       __end_of_digitalRead 1406  
                               _i2c_start 2070               __end_of_resetarTempoEstadia 23D8  
                     __size_of_lcdCommand 001E                       __size_of_kpDebounce 0136  
                         ledParaDireita@k 0003                           ledParaDireita@x 0004  
                             ??_I2C_delay 0001                         __size_of_i2c_stop 002E  
                       kpDebounce@oldRead 0033                         kpDebounce@newRead 0035  
                                ??___wmul 001F                                  ??_kpInit 0007  
                             ?_timerReset 0001                                  ??_soInit 0007  
                                ??_pwmSet 0021                   ??_acenderLedNaSequencia 0005  
                       dsReadData@address 000E                            _ledParaDireita 2434  
                             __pbssCOMRAM 002D                               ?_pushNibble 000A  
                              pinMode@pin 0001                                ?_i2c_start 0001  
                  ?_atualizarTempoEstadia 0001                     __end_of_i2c_write_bit 1EDC  
                       __size_of_read_SDA 0038                         __size_of_read_SCL 0038  
                               _delayMili 237A                                 _clear_SDA 24E2  
                               _clear_SCL 250C                          ___lwdiv@dividend 0001  
                                ?_bcd2dec 0021                                  ?___aldiv 0001  
                                ?___almod 000F                  ?_atualizarHorarioEntrada 0001  
                                ?___awdiv 0013                                  ?___awmod 0025  
                 ??_atualizarHorarioSaida 002B                         __size_of_ssdDigit 0058  
                          _PulseClockData 24B8                                  ?___lwdiv 0001  
                                ?___lwmod 0008                      __end_of_PulseEnClock 24B8  
                               _lcdString 1F32                               _digitalRead 129C  
                                ?_lcdChar 0001                          ___almod@dividend 000F  
                       __size_of_pushByte 005A                                  ?_lcdInit 0001  
                               _kpReadKey 1B54                    __end_of_ledParaDireita 2462  
                    __end_of_pwmFrequency 255C                                  ?_atrasar 0001  
                             __smallconst 0600                      __size_of_i2cReadByte 0054  
                                ?_pinMode 0001                                  ?_soWrite 0007  
                                ?_ssdInit 0001                                  ?_pwmInit 0001  
                        ___lwdiv@quotient 0005                            __size_of_delay 0044  
                        pwmFrequency@freq 000F                           ___aldiv@divisor 0005  
                         ___aldiv@counter 0009                       __size_of_timerReset 0022  
                          ___wmul@product 001F                              ??_dsReadData 0010  
                            ??_delayMicro 0003                                ?_delayMili 0001  
                              ?_clear_SDA 0001                                ?_clear_SCL 0001  
                  __end_of_PulseClockData 24E2                       __size_of_pushNibble 0026  
                            ??_lcdCommand 000E                                 _timerInit 2654  
                               _timerWait 2636                                 _ssdUpdate 1130  
                      _mostrarMenuInicial 0DC0                                ?_lcdString 000F  
                            ??_kpDebounce 000A                                ?_kpReadKey 0001  
                         ?_ledParaDireita 0001                         ___wmul@multiplier 001B  
                     ?_mostrarMenuInicial 0001                   _mostrarMenuInicial$1429 002B  
                         lcdCommand@value 000E                        __end_of_dsReadData 2070  
                      __end_of_delayMicro 2664                               ??_i2c_start 0007  
       _verificarUsuarioPediuParaSair$685 0011                          timerReset@ciclos 0003  
                               copy_data0 22F4                        __end_of_lcdCommand 2606  
                              pushByte@rs 000A                              lcdChar@value 000E  
                                _i2c_stop 23D8                        __end_of_kpDebounce 153C  
                    ??_mostrarMenuInicial 002B                                  __Hrparam 0000  
                                __Lrparam 0000                           ?_PulseClockData 0001  
                              ?_timerInit 0001                                ?_timerWait 0001  
                              ?_ssdUpdate 0001                          __size_of_bcd2dec 0042  
                        __size_of___aldiv 010C                          __size_of___almod 00EC  
                        __size_of___awdiv 00C4                          __size_of___awmod 00B0  
                 __size_of_pulseEnablePin 0042                          __size_of___lwdiv 0074  
                        __size_of___lwmod 0064                   ??_verificarUsuarioPagou 0011  
                        __size_of_lcdChar 001E                          __size_of_lcdInit 00B4  
                      _iniciarPerifericos 2620                          __size_of_atrasar 0062  
                        __size_of_pinMode 024E                           ___lwdiv@divisor 0003  
                         ___lwdiv@counter 0007                                  __ptext10 1EDC  
                                __ptext11 2606                                  __ptext20 1130  
                                __ptext12 2536                                  __ptext21 1E2C  
                                __ptext13 19F0                                  __ptext30 1DD2  
                                __ptext22 065E                                  __ptext14 255C  
                                __ptext31 1FDC                                  __ptext23 1CAC  
                                __ptext15 2316                                  __ptext40 1F88  
                                __ptext32 248E                                  __ptext24 1840  
                                __ptext16 217E                                  __ptext41 1E84  
                                __ptext33 24B8                                  __ptext25 153C  
                                __ptext17 1648                                  __ptext50 0B72  
                                __ptext42 23D8                                  __ptext34 20FA  
                                __ptext26 0F84                                  __ptext18 2636  
                                __ptext51 2664                                  __ptext43 24E2  
                                __ptext35 2662                                  __ptext27 1F32  
                                __ptext19 25A8                                  __ptext60 2646  
                                __ptext52 213C                                  __ptext44 2348  
                                __ptext36 237A                                  __ptext28 25CA  
                                __ptext61 2406                                  __ptext53 192C  
                                __ptext45 2270                                  __ptext37 202A  
                                __ptext29 25E8                                  __ptext62 2434  
                                __ptext54 1AA4                                  __ptext46 22A8  
                                __ptext38 1D72                                  __ptext63 20B6  
                                __ptext55 2462                                  __ptext47 129C  
                                __ptext39 2070                                  __ptext56 1C40  
                                __ptext48 250C                                  __ptext57 2582  
                                __ptext49 0924                                  __ptext58 1BCC  
                                __ptext59 1D10                          __size_of_soWrite 004E  
                        __size_of_ssdInit 0056                          __size_of_pwmInit 001A  
                     ?_iniciarPerifericos 0001                           ___almod@divisor 0013  
                         ___almod@counter 0017                                  _read_SDA 2270  
                                _read_SCL 22A8                             __size_of_main 00F4  
     _verificarUsuarioPediuParaEntrar$673 0011                               ??_delayMili 0003  
                             ??_clear_SDA 0007                               ??_clear_SCL 0007  
                   __size_of_PulseEnClock 002A                                  _ssdDigit 1E2C  
                             delayMicro@a 0001                                  isa$xinst 000000  
                            soWrite@value 0007                      ??_iniciarPerifericos 0011  
                   __size_of_pwmFrequency 0026                                  _pushByte 1DD2  
                __size_of_ledParaEsquerda 002E                                 pwmSet@val 0024  
                             ??_lcdString 0011                              ??_timerReset 0003  
                                atrasar@i 0003                                  atrasar@j 0004  
                                atrasar@k 0005                               ??_kpReadKey 0001  
                                atrasar@t 0002                           timerReset@tempo 0001  
                            _tempoEstadia 0031                              _valorPorHora 0040  
          __size_of_acenderLedNaSequencia 000E             __end_of_acenderLedNaSequencia 2654  
                            ??_pushNibble 000C                   ??_atualizarTempoEstadia 002D  
                           ?_digitalWrite 0001                              _PulseEnClock 248E  
                       digitalWrite@value 0003                          ___lwmod@dividend 0008  
                      __end_of_timerReset 25CA              __size_of_resetarTempoEstadia 002E  
                            _pwmFrequency 2536                               _valorAPagar 002D  
                                soWrite@i 0009                              bcd2dec@value 0021  
                             ??_timerInit 0001                               ??_timerWait 0001  
                             ??_ssdUpdate 000A                        __end_of_pushNibble 2582  
          __size_of_atualizarHorarioSaida 02C6                              ?_digitalRead 0001  
           __end_of_atualizarHorarioSaida 0924                     _novoUsuarioPodeEntrar 0044  
                         ___lwmod@divisor 000A                               kpDebounce@i 000D  
                         ___lwmod@counter 000C                            ??_digitalWrite 0005  
                            ___aldiv@sign 000A          __size_of_atualizarHorarioEntrada 01AC  
                         digitalWrite@pin 0001                              ___almod@sign 0018  
